// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Wavefront.Inputs
{

    public sealed class DashboardParameterDetailArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default value of the parameter.
        /// </summary>
        [Input("defaultValue", required: true)]
        public Input<string> DefaultValue { get; set; } = null!;

        /// <summary>
        /// For `DYNAMIC` parameter types, the type of the field. Valid options are `SOURCE`,
        /// `SOURCE_TAG`, `METRIC_NAME`, `TAG_KEY`, and `MATCHING_SOURCE_TAG`.
        /// </summary>
        [Input("dynamicFieldType")]
        public Input<string>? DynamicFieldType { get; set; }

        /// <summary>
        /// If `true` the parameter will only be shown on the edit view of the dashboard.
        /// </summary>
        [Input("hideFromView", required: true)]
        public Input<bool> HideFromView { get; set; } = null!;

        /// <summary>
        /// The label for the parameter.
        /// </summary>
        [Input("label", required: true)]
        public Input<string> Label { get; set; } = null!;

        /// <summary>
        /// The name of the parameters.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The type of the parameter. `SIMPLE`, `LIST`, or `DYNAMIC`.
        /// </summary>
        [Input("parameterType", required: true)]
        public Input<string> ParameterType { get; set; } = null!;

        /// <summary>
        /// For `DYNAMIC` parameter types, the query to execute to return values.
        /// </summary>
        [Input("queryValue")]
        public Input<string>? QueryValue { get; set; }

        /// <summary>
        /// for `TAG_KEY` dynamic field types, the tag key to return.
        /// </summary>
        [Input("tagKey")]
        public Input<string>? TagKey { get; set; }

        [Input("valuesToReadableStrings", required: true)]
        private InputMap<string>? _valuesToReadableStrings;

        /// <summary>
        /// A string-&gt;string map. At least one of the keys must match the value of
        /// `default_value`.
        /// </summary>
        public InputMap<string> ValuesToReadableStrings
        {
            get => _valuesToReadableStrings ?? (_valuesToReadableStrings = new InputMap<string>());
            set => _valuesToReadableStrings = value;
        }

        public DashboardParameterDetailArgs()
        {
        }
        public static new DashboardParameterDetailArgs Empty => new DashboardParameterDetailArgs();
    }
}
