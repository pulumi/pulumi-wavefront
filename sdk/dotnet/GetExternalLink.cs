// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Wavefront
{
    public static class GetExternalLink
    {
        /// <summary>
        /// Use this data source to get information about a Wavefront external link by its ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Wavefront = Pulumi.Wavefront;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get the information about a specific external links.
        ///     var example = Wavefront.GetExternalLink.Invoke(new()
        ///     {
        ///         Id = "sample-external-link-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetExternalLinkResult> InvokeAsync(GetExternalLinkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExternalLinkResult>("wavefront:index/getExternalLink:getExternalLink", args ?? new GetExternalLinkArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a Wavefront external link by its ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Wavefront = Pulumi.Wavefront;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get the information about a specific external links.
        ///     var example = Wavefront.GetExternalLink.Invoke(new()
        ///     {
        ///         Id = "sample-external-link-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetExternalLinkResult> Invoke(GetExternalLinkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExternalLinkResult>("wavefront:index/getExternalLink:getExternalLink", args ?? new GetExternalLinkInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a Wavefront external link by its ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Wavefront = Pulumi.Wavefront;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get the information about a specific external links.
        ///     var example = Wavefront.GetExternalLink.Invoke(new()
        ///     {
        ///         Id = "sample-external-link-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetExternalLinkResult> Invoke(GetExternalLinkInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetExternalLinkResult>("wavefront:index/getExternalLink:getExternalLink", args ?? new GetExternalLinkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExternalLinkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the external link.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetExternalLinkArgs()
        {
        }
        public static new GetExternalLinkArgs Empty => new GetExternalLinkArgs();
    }

    public sealed class GetExternalLinkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the external link.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetExternalLinkInvokeArgs()
        {
        }
        public static new GetExternalLinkInvokeArgs Empty => new GetExternalLinkInvokeArgs();
    }


    [OutputType]
    public sealed class GetExternalLinkResult
    {
        /// <summary>
        /// The timestamp in epoch milliseconds indicating when the external link is created.
        /// </summary>
        public readonly int CreatedEpochMillis;
        /// <summary>
        /// The ID of the user who created the external link.
        /// </summary>
        public readonly string CreatorId;
        /// <summary>
        /// Human-readable description of this link.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the external link.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether this is a "Log Integration" subType of external link.
        /// </summary>
        public readonly bool IsLogIntegration;
        /// <summary>
        /// Controls whether a link is displayed in the context menu of a highlighted series. If present, the metric name of the highlighted series must match this regular expression in order for the link to be displayed.
        /// </summary>
        public readonly string MetricFilterRegex;
        /// <summary>
        /// The name of the external link.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// (Optional) Controls whether a link is displayed in the context menu of a highlighted
        /// series. This is a map from string to regular expression. The highlighted series must contain point tags whose
        /// keys are present in the keys of this map and whose values match the regular expressions associated with those
        /// keys in order for the link to be displayed.
        /// </summary>
        public readonly ImmutableDictionary<string, string> PointTagFilterRegexes;
        /// <summary>
        /// Controls whether a link is displayed in the context menu of a highlighted series. If present, the source name of the highlighted series must match this regular expression in order for the link to be displayed.
        /// </summary>
        public readonly string SourceFilterRegex;
        /// <summary>
        /// The mustache template for the link. The template must expand to a full URL, including scheme, origin, etc.
        /// </summary>
        public readonly string Template;
        /// <summary>
        /// The timestamp in epoch milliseconds indicating when the external link is updated.
        /// </summary>
        public readonly int UpdatedEpochMillis;
        /// <summary>
        /// The ID of the user who updated the external link.
        /// </summary>
        public readonly string UpdaterId;

        [OutputConstructor]
        private GetExternalLinkResult(
            int createdEpochMillis,

            string creatorId,

            string description,

            string id,

            bool isLogIntegration,

            string metricFilterRegex,

            string name,

            ImmutableDictionary<string, string> pointTagFilterRegexes,

            string sourceFilterRegex,

            string template,

            int updatedEpochMillis,

            string updaterId)
        {
            CreatedEpochMillis = createdEpochMillis;
            CreatorId = creatorId;
            Description = description;
            Id = id;
            IsLogIntegration = isLogIntegration;
            MetricFilterRegex = metricFilterRegex;
            Name = name;
            PointTagFilterRegexes = pointTagFilterRegexes;
            SourceFilterRegex = sourceFilterRegex;
            Template = template;
            UpdatedEpochMillis = updatedEpochMillis;
            UpdaterId = updaterId;
        }
    }
}
