// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Wavefront.Outputs
{

    [OutputType]
    public sealed class GetDashboardSectionRowChartResult
    {
        /// <summary>
        /// The base of logarithmic scale charts. Omit or set to 0 for the default linear scale. Usually set to 10 for the traditional logarithmic scale.
        /// </summary>
        public readonly int Base;
        public readonly string ChartAttributes;
        public readonly ImmutableArray<Outputs.GetDashboardSectionRowChartChartSettingResult> ChartSettings;
        /// <summary>
        /// Description of the chart.
        /// </summary>
        public readonly string Description;
        public readonly bool IncludeObsoleteMetrics;
        public readonly bool InterpolatePointsKey;
        /// <summary>
        /// The name of the parameters.
        /// </summary>
        public readonly string Name;
        public readonly bool NoDefaultEvents;
        public readonly ImmutableArray<Outputs.GetDashboardSectionRowChartSourceResult> Sources;
        /// <summary>
        /// Summarization strategy for the chart. MEAN is default.
        /// </summary>
        public readonly string Summarization;
        /// <summary>
        /// String to label the units of the chart on the Y-Axis.
        /// </summary>
        public readonly string Units;

        [OutputConstructor]
        private GetDashboardSectionRowChartResult(
            int @base,

            string chartAttributes,

            ImmutableArray<Outputs.GetDashboardSectionRowChartChartSettingResult> chartSettings,

            string description,

            bool includeObsoleteMetrics,

            bool interpolatePointsKey,

            string name,

            bool noDefaultEvents,

            ImmutableArray<Outputs.GetDashboardSectionRowChartSourceResult> sources,

            string summarization,

            string units)
        {
            Base = @base;
            ChartAttributes = chartAttributes;
            ChartSettings = chartSettings;
            Description = description;
            IncludeObsoleteMetrics = includeObsoleteMetrics;
            InterpolatePointsKey = interpolatePointsKey;
            Name = name;
            NoDefaultEvents = noDefaultEvents;
            Sources = sources;
            Summarization = summarization;
            Units = units;
        }
    }
}
