// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Wavefront.Outputs
{

    [OutputType]
    public sealed class GetMaintenanceWindowAllMaintenanceWindowResult
    {
        public readonly int CreatedEpochMillis;
        public readonly string CreatorId;
        public readonly string CustomerId;
        public readonly int EndTimeInSeconds;
        public readonly string EventName;
        public readonly bool HostTagGroupHostNamesGroupAnded;
        public readonly string Id;
        public readonly string Reason;
        public readonly ImmutableArray<string> RelevantCustomerTags;
        public readonly ImmutableArray<string> RelevantHostNames;
        public readonly ImmutableArray<string> RelevantHostTags;
        public readonly bool RelevantHostTagsAnded;
        public readonly string RunningState;
        public readonly int SortAttr;
        public readonly int StartTimeInSeconds;
        public readonly string Title;
        public readonly int UpdatedEpochMillis;
        public readonly string UpdaterId;

        [OutputConstructor]
        private GetMaintenanceWindowAllMaintenanceWindowResult(
            int createdEpochMillis,

            string creatorId,

            string customerId,

            int endTimeInSeconds,

            string eventName,

            bool hostTagGroupHostNamesGroupAnded,

            string id,

            string reason,

            ImmutableArray<string> relevantCustomerTags,

            ImmutableArray<string> relevantHostNames,

            ImmutableArray<string> relevantHostTags,

            bool relevantHostTagsAnded,

            string runningState,

            int sortAttr,

            int startTimeInSeconds,

            string title,

            int updatedEpochMillis,

            string updaterId)
        {
            CreatedEpochMillis = createdEpochMillis;
            CreatorId = creatorId;
            CustomerId = customerId;
            EndTimeInSeconds = endTimeInSeconds;
            EventName = eventName;
            HostTagGroupHostNamesGroupAnded = hostTagGroupHostNamesGroupAnded;
            Id = id;
            Reason = reason;
            RelevantCustomerTags = relevantCustomerTags;
            RelevantHostNames = relevantHostNames;
            RelevantHostTags = relevantHostTags;
            RelevantHostTagsAnded = relevantHostTagsAnded;
            RunningState = runningState;
            SortAttr = sortAttr;
            StartTimeInSeconds = startTimeInSeconds;
            Title = title;
            UpdatedEpochMillis = updatedEpochMillis;
            UpdaterId = updaterId;
        }
    }
}
