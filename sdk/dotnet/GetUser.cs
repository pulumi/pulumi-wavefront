// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Wavefront
{
    public static class GetUser
    {
        /// <summary>
        /// Use this data source to get information for a given user by email from Wavefront. 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Wavefront = Pulumi.Wavefront;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Wavefront.GetUser.Invoke(new()
        ///     {
        ///         Email = "example.user@example.com",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetUserResult> InvokeAsync(GetUserArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("wavefront:index/getUser:getUser", args ?? new GetUserArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information for a given user by email from Wavefront. 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Wavefront = Pulumi.Wavefront;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Wavefront.GetUser.Invoke(new()
        ///     {
        ///         Email = "example.user@example.com",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetUserResult> Invoke(GetUserInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetUserResult>("wavefront:index/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The email associated with the user data to be fetched.
        /// </summary>
        [Input("email", required: true)]
        public string Email { get; set; } = null!;

        public GetUserArgs()
        {
        }
        public static new GetUserArgs Empty => new GetUserArgs();
    }

    public sealed class GetUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The email associated with the user data to be fetched.
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        public GetUserInvokeArgs()
        {
        }
        public static new GetUserInvokeArgs Empty => new GetUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserResult
    {
        public readonly string Customer;
        public readonly string Email;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// When the user last logged in to Wavefront.
        /// </summary>
        public readonly int LastSuccessfulLogin;
        /// <summary>
        /// List of permissions granted to a user.
        /// </summary>
        public readonly ImmutableArray<string> Permissions;
        /// <summary>
        /// List of User Group Ids the user is a member of.
        /// * `customer`- The customer the user is associated with.
        /// </summary>
        public readonly ImmutableArray<string> UserGroupIds;

        [OutputConstructor]
        private GetUserResult(
            string customer,

            string email,

            string id,

            int lastSuccessfulLogin,

            ImmutableArray<string> permissions,

            ImmutableArray<string> userGroupIds)
        {
            Customer = customer;
            Email = email;
            Id = id;
            LastSuccessfulLogin = lastSuccessfulLogin;
            Permissions = permissions;
            UserGroupIds = userGroupIds;
        }
    }
}
