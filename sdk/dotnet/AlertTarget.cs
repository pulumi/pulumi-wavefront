// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Wavefront
{
    public partial class AlertTarget : Pulumi.CustomResource
    {
        [Output("contentType")]
        public Output<string?> ContentType { get; private set; } = null!;

        [Output("customHeaders")]
        public Output<ImmutableDictionary<string, string>?> CustomHeaders { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("emailSubject")]
        public Output<string?> EmailSubject { get; private set; } = null!;

        [Output("isHtmlContent")]
        public Output<bool?> IsHtmlContent { get; private set; } = null!;

        [Output("method")]
        public Output<string?> Method { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("recipient")]
        public Output<string> Recipient { get; private set; } = null!;

        [Output("routes")]
        public Output<ImmutableArray<Outputs.AlertTargetRoute>> Routes { get; private set; } = null!;

        [Output("targetId")]
        public Output<string> TargetId { get; private set; } = null!;

        [Output("template")]
        public Output<string> Template { get; private set; } = null!;

        [Output("triggers")]
        public Output<ImmutableArray<string>> Triggers { get; private set; } = null!;


        /// <summary>
        /// Create a AlertTarget resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AlertTarget(string name, AlertTargetArgs args, CustomResourceOptions? options = null)
            : base("wavefront:index/alertTarget:AlertTarget", name, args ?? new AlertTargetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AlertTarget(string name, Input<string> id, AlertTargetState? state = null, CustomResourceOptions? options = null)
            : base("wavefront:index/alertTarget:AlertTarget", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AlertTarget resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AlertTarget Get(string name, Input<string> id, AlertTargetState? state = null, CustomResourceOptions? options = null)
        {
            return new AlertTarget(name, id, state, options);
        }
    }

    public sealed class AlertTargetArgs : Pulumi.ResourceArgs
    {
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        [Input("customHeaders")]
        private InputMap<string>? _customHeaders;
        public InputMap<string> CustomHeaders
        {
            get => _customHeaders ?? (_customHeaders = new InputMap<string>());
            set => _customHeaders = value;
        }

        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("emailSubject")]
        public Input<string>? EmailSubject { get; set; }

        [Input("isHtmlContent")]
        public Input<bool>? IsHtmlContent { get; set; }

        [Input("method")]
        public Input<string>? Method { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("recipient", required: true)]
        public Input<string> Recipient { get; set; } = null!;

        [Input("routes")]
        private InputList<Inputs.AlertTargetRouteArgs>? _routes;
        public InputList<Inputs.AlertTargetRouteArgs> Routes
        {
            get => _routes ?? (_routes = new InputList<Inputs.AlertTargetRouteArgs>());
            set => _routes = value;
        }

        [Input("template", required: true)]
        public Input<string> Template { get; set; } = null!;

        [Input("triggers", required: true)]
        private InputList<string>? _triggers;
        public InputList<string> Triggers
        {
            get => _triggers ?? (_triggers = new InputList<string>());
            set => _triggers = value;
        }

        public AlertTargetArgs()
        {
        }
    }

    public sealed class AlertTargetState : Pulumi.ResourceArgs
    {
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        [Input("customHeaders")]
        private InputMap<string>? _customHeaders;
        public InputMap<string> CustomHeaders
        {
            get => _customHeaders ?? (_customHeaders = new InputMap<string>());
            set => _customHeaders = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("emailSubject")]
        public Input<string>? EmailSubject { get; set; }

        [Input("isHtmlContent")]
        public Input<bool>? IsHtmlContent { get; set; }

        [Input("method")]
        public Input<string>? Method { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("recipient")]
        public Input<string>? Recipient { get; set; }

        [Input("routes")]
        private InputList<Inputs.AlertTargetRouteGetArgs>? _routes;
        public InputList<Inputs.AlertTargetRouteGetArgs> Routes
        {
            get => _routes ?? (_routes = new InputList<Inputs.AlertTargetRouteGetArgs>());
            set => _routes = value;
        }

        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        [Input("template")]
        public Input<string>? Template { get; set; }

        [Input("triggers")]
        private InputList<string>? _triggers;
        public InputList<string> Triggers
        {
            get => _triggers ?? (_triggers = new InputList<string>());
            set => _triggers = value;
        }

        public AlertTargetState()
        {
        }
    }
}
