// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Wavefront
{
    /// <summary>
    /// Provides a Wavefront event resource. This allows events to be created, updated, and deleted.
    /// 
    /// ## Import
    /// 
    /// You can import events by using the id, for example:
    /// 
    /// ```sh
    ///  $ pulumi import wavefront:index/event:Event event 1479868728473
    /// ```
    /// </summary>
    [WavefrontResourceType("wavefront:index/event:Event")]
    public partial class Event : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The annotations associated with the event.
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableDictionary<string, string>> Annotations { get; private set; } = null!;

        [Output("endtimeKey")]
        public Output<int?> EndtimeKey { get; private set; } = null!;

        /// <summary>
        /// The name of the event as it is displayed in Wavefront.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The start time of the event in epoch milliseconds.
        /// </summary>
        [Output("startTime")]
        public Output<int?> StartTime { get; private set; } = null!;

        /// <summary>
        /// A set of tags to assign to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Event resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Event(string name, EventArgs args, CustomResourceOptions? options = null)
            : base("wavefront:index/event:Event", name, args ?? new EventArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Event(string name, Input<string> id, EventState? state = null, CustomResourceOptions? options = null)
            : base("wavefront:index/event:Event", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Event resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Event Get(string name, Input<string> id, EventState? state = null, CustomResourceOptions? options = null)
        {
            return new Event(name, id, state, options);
        }
    }

    public sealed class EventArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations", required: true)]
        private InputMap<string>? _annotations;

        /// <summary>
        /// The annotations associated with the event.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        [Input("endtimeKey")]
        public Input<int>? EndtimeKey { get; set; }

        /// <summary>
        /// The name of the event as it is displayed in Wavefront.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The start time of the event in epoch milliseconds.
        /// </summary>
        [Input("startTime")]
        public Input<int>? StartTime { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A set of tags to assign to this resource.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public EventArgs()
        {
        }
        public static new EventArgs Empty => new EventArgs();
    }

    public sealed class EventState : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// The annotations associated with the event.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        [Input("endtimeKey")]
        public Input<int>? EndtimeKey { get; set; }

        /// <summary>
        /// The name of the event as it is displayed in Wavefront.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The start time of the event in epoch milliseconds.
        /// </summary>
        [Input("startTime")]
        public Input<int>? StartTime { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A set of tags to assign to this resource.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public EventState()
        {
        }
        public static new EventState Empty => new EventState();
    }
}
