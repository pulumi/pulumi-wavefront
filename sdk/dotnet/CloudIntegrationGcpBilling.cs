// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Wavefront
{
    /// <summary>
    /// Provides a Wavefront Cloud Integration for Google Cloud Billing. This allows GCP Billing cloud integrations to be created,
    /// updated, and deleted.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Wavefront = Pulumi.Wavefront;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var gcpBilling = new Wavefront.CloudIntegrationGcpBilling("gcpBilling", new Wavefront.CloudIntegrationGcpBillingArgs
    ///         {
    ///             ApiKey = "example-api-key",
    ///             JsonKey = @"{...your gcp key ...}
    /// 
    /// ",
    ///             ProjectId = "example-gcp-project",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// GCP Billing Cloud Integrations can be imported by using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import wavefront:index/cloudIntegrationGcpBilling:CloudIntegrationGcpBilling gcp_billing a411c16b-3cf7-4f03-bf11-8ca05aab898d
    /// ```
    /// </summary>
    [WavefrontResourceType("wavefront:index/cloudIntegrationGcpBilling:CloudIntegrationGcpBilling")]
    public partial class CloudIntegrationGcpBilling : Pulumi.CustomResource
    {
        /// <summary>
        /// A list of point tag key-values to add to every point ingested using this integration.
        /// </summary>
        [Output("additionalTags")]
        public Output<ImmutableDictionary<string, string>?> AdditionalTags { get; private set; } = null!;

        /// <summary>
        /// API key for Google Cloud Platform (GCP).
        /// </summary>
        [Output("apiKey")]
        public Output<string> ApiKey { get; private set; } = null!;

        /// <summary>
        /// Forces this resource to save, even if errors are present.
        /// </summary>
        [Output("forceSave")]
        public Output<bool?> ForceSave { get; private set; } = null!;

        /// <summary>
        /// Private key for a Google Cloud Platform (GCP) service account within your project.
        /// The account must have at least Viewer permissions. This key must be in the JSON format generated by GCP.
        /// </summary>
        [Output("jsonKey")]
        public Output<string> JsonKey { get; private set; } = null!;

        /// <summary>
        /// The human-readable name of this integration.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Google Cloud Platform (GCP) Project ID.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// A value denoting which cloud service this service integrates with.
        /// </summary>
        [Output("service")]
        public Output<string> Service { get; private set; } = null!;

        /// <summary>
        /// How often, in minutes, to refresh the service.
        /// </summary>
        [Output("serviceRefreshRateInMinutes")]
        public Output<int?> ServiceRefreshRateInMinutes { get; private set; } = null!;


        /// <summary>
        /// Create a CloudIntegrationGcpBilling resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudIntegrationGcpBilling(string name, CloudIntegrationGcpBillingArgs args, CustomResourceOptions? options = null)
            : base("wavefront:index/cloudIntegrationGcpBilling:CloudIntegrationGcpBilling", name, args ?? new CloudIntegrationGcpBillingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudIntegrationGcpBilling(string name, Input<string> id, CloudIntegrationGcpBillingState? state = null, CustomResourceOptions? options = null)
            : base("wavefront:index/cloudIntegrationGcpBilling:CloudIntegrationGcpBilling", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudIntegrationGcpBilling resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudIntegrationGcpBilling Get(string name, Input<string> id, CloudIntegrationGcpBillingState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudIntegrationGcpBilling(name, id, state, options);
        }
    }

    public sealed class CloudIntegrationGcpBillingArgs : Pulumi.ResourceArgs
    {
        [Input("additionalTags")]
        private InputMap<string>? _additionalTags;

        /// <summary>
        /// A list of point tag key-values to add to every point ingested using this integration.
        /// </summary>
        public InputMap<string> AdditionalTags
        {
            get => _additionalTags ?? (_additionalTags = new InputMap<string>());
            set => _additionalTags = value;
        }

        /// <summary>
        /// API key for Google Cloud Platform (GCP).
        /// </summary>
        [Input("apiKey", required: true)]
        public Input<string> ApiKey { get; set; } = null!;

        /// <summary>
        /// Forces this resource to save, even if errors are present.
        /// </summary>
        [Input("forceSave")]
        public Input<bool>? ForceSave { get; set; }

        /// <summary>
        /// Private key for a Google Cloud Platform (GCP) service account within your project.
        /// The account must have at least Viewer permissions. This key must be in the JSON format generated by GCP.
        /// </summary>
        [Input("jsonKey", required: true)]
        public Input<string> JsonKey { get; set; } = null!;

        /// <summary>
        /// The human-readable name of this integration.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Google Cloud Platform (GCP) Project ID.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// A value denoting which cloud service this service integrates with.
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        /// <summary>
        /// How often, in minutes, to refresh the service.
        /// </summary>
        [Input("serviceRefreshRateInMinutes")]
        public Input<int>? ServiceRefreshRateInMinutes { get; set; }

        public CloudIntegrationGcpBillingArgs()
        {
        }
    }

    public sealed class CloudIntegrationGcpBillingState : Pulumi.ResourceArgs
    {
        [Input("additionalTags")]
        private InputMap<string>? _additionalTags;

        /// <summary>
        /// A list of point tag key-values to add to every point ingested using this integration.
        /// </summary>
        public InputMap<string> AdditionalTags
        {
            get => _additionalTags ?? (_additionalTags = new InputMap<string>());
            set => _additionalTags = value;
        }

        /// <summary>
        /// API key for Google Cloud Platform (GCP).
        /// </summary>
        [Input("apiKey")]
        public Input<string>? ApiKey { get; set; }

        /// <summary>
        /// Forces this resource to save, even if errors are present.
        /// </summary>
        [Input("forceSave")]
        public Input<bool>? ForceSave { get; set; }

        /// <summary>
        /// Private key for a Google Cloud Platform (GCP) service account within your project.
        /// The account must have at least Viewer permissions. This key must be in the JSON format generated by GCP.
        /// </summary>
        [Input("jsonKey")]
        public Input<string>? JsonKey { get; set; }

        /// <summary>
        /// The human-readable name of this integration.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Google Cloud Platform (GCP) Project ID.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// A value denoting which cloud service this service integrates with.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// How often, in minutes, to refresh the service.
        /// </summary>
        [Input("serviceRefreshRateInMinutes")]
        public Input<int>? ServiceRefreshRateInMinutes { get; set; }

        public CloudIntegrationGcpBillingState()
        {
        }
    }
}
