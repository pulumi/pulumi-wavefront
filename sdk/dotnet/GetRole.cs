// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Wavefront
{
    public static class GetRole
    {
        /// <summary>
        /// Use this data source to get information about a Wavefront role by its ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Wavefront = Pulumi.Wavefront;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get the information about the role.
        ///     var example = Wavefront.GetRole.Invoke(new()
        ///     {
        ///         Id = "role-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRoleResult> InvokeAsync(GetRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoleResult>("wavefront:index/getRole:getRole", args ?? new GetRoleArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a Wavefront role by its ID.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Wavefront = Pulumi.Wavefront;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get the information about the role.
        ///     var example = Wavefront.GetRole.Invoke(new()
        ///     {
        ///         Id = "role-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRoleResult> Invoke(GetRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoleResult>("wavefront:index/getRole:getRole", args ?? new GetRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID associated with the role data to be fetched.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetRoleArgs()
        {
        }
        public static new GetRoleArgs Empty => new GetRoleArgs();
    }

    public sealed class GetRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID associated with the role data to be fetched.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetRoleInvokeArgs()
        {
        }
        public static new GetRoleInvokeArgs Empty => new GetRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoleResult
    {
        /// <summary>
        /// Human-readable description of the role.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the role in Wavefront.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the role in Wavefront.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The list of permissions associated with role.
        /// </summary>
        public readonly ImmutableArray<string> Permissions;

        [OutputConstructor]
        private GetRoleResult(
            string description,

            string id,

            string name,

            ImmutableArray<string> permissions)
        {
            Description = description;
            Id = id;
            Name = name;
            Permissions = permissions;
        }
    }
}
