// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Wavefront
{
    /// <summary>
    /// Provides a Wavefront Derived Metric Resource. This allows derived metrics to be created,
    /// updated, and deleted.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Wavefront = Pulumi.Wavefront;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var derived = new Wavefront.DerivedMetric("derived", new()
    ///     {
    ///         Minutes = 5,
    ///         Query = "aliasMetric(5, \"some.metric\")",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Derived Metrics can be imported by using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import wavefront:index/derivedMetric:DerivedMetric derived_metric 1577102900578
    /// ```
    /// </summary>
    [WavefrontResourceType("wavefront:index/derivedMetric:DerivedMetric")]
    public partial class DerivedMetric : global::Pulumi.CustomResource
    {
        /// <summary>
        /// User-supplied additional explanatory information for the derived metric.
        /// </summary>
        [Output("additionalInformation")]
        public Output<string?> AdditionalInformation { get; private set; } = null!;

        /// <summary>
        /// How frequently the query generating the derived metric is run.
        /// </summary>
        [Output("minutes")]
        public Output<int> Minutes { get; private set; } = null!;

        /// <summary>
        /// The name of the Derived Metric in Wavefront.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A Wavefront query that is evaluated at regular intervals (default is 1 minute).
        /// </summary>
        [Output("query")]
        public Output<string> Query { get; private set; } = null!;

        /// <summary>
        /// A set of tags to assign to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a DerivedMetric resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DerivedMetric(string name, DerivedMetricArgs args, CustomResourceOptions? options = null)
            : base("wavefront:index/derivedMetric:DerivedMetric", name, args ?? new DerivedMetricArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DerivedMetric(string name, Input<string> id, DerivedMetricState? state = null, CustomResourceOptions? options = null)
            : base("wavefront:index/derivedMetric:DerivedMetric", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DerivedMetric resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DerivedMetric Get(string name, Input<string> id, DerivedMetricState? state = null, CustomResourceOptions? options = null)
        {
            return new DerivedMetric(name, id, state, options);
        }
    }

    public sealed class DerivedMetricArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User-supplied additional explanatory information for the derived metric.
        /// </summary>
        [Input("additionalInformation")]
        public Input<string>? AdditionalInformation { get; set; }

        /// <summary>
        /// How frequently the query generating the derived metric is run.
        /// </summary>
        [Input("minutes", required: true)]
        public Input<int> Minutes { get; set; } = null!;

        /// <summary>
        /// The name of the Derived Metric in Wavefront.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A Wavefront query that is evaluated at regular intervals (default is 1 minute).
        /// </summary>
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A set of tags to assign to this resource.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public DerivedMetricArgs()
        {
        }
        public static new DerivedMetricArgs Empty => new DerivedMetricArgs();
    }

    public sealed class DerivedMetricState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User-supplied additional explanatory information for the derived metric.
        /// </summary>
        [Input("additionalInformation")]
        public Input<string>? AdditionalInformation { get; set; }

        /// <summary>
        /// How frequently the query generating the derived metric is run.
        /// </summary>
        [Input("minutes")]
        public Input<int>? Minutes { get; set; }

        /// <summary>
        /// The name of the Derived Metric in Wavefront.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A Wavefront query that is evaluated at regular intervals (default is 1 minute).
        /// </summary>
        [Input("query")]
        public Input<string>? Query { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A set of tags to assign to this resource.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public DerivedMetricState()
        {
        }
        public static new DerivedMetricState Empty => new DerivedMetricState();
    }
}
