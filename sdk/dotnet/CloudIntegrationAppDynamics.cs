// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Wavefront
{
    /// <summary>
    /// Provides a Wavefront Cloud Integration for AppDynamics. This allows AppDynamics cloud integrations to be created,
    /// updated, and deleted.
    /// 
    /// ## Example usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Wavefront = Pulumi.Wavefront;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var appDynamics = new Wavefront.CloudIntegrationAppDynamics("app_dynamics", new()
    ///     {
    ///         Name = "Test Integration",
    ///         UserName = "example",
    ///         ControllerName = "exampleController",
    ///         EncryptedPassword = "encryptedPassword",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// AppDynamic Cloud Integrations can be imported by using the `id`, e.g.:
    /// 
    /// ```sh
    /// $ pulumi import wavefront:index/cloudIntegrationAppDynamics:CloudIntegrationAppDynamics app_dynamics a411c16b-3cf7-4f03-bf11-8ca05aab898d
    /// ```
    /// </summary>
    [WavefrontResourceType("wavefront:index/cloudIntegrationAppDynamics:CloudIntegrationAppDynamics")]
    public partial class CloudIntegrationAppDynamics : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of point tag key-values to add to every point ingested using this integration.
        /// </summary>
        [Output("additionalTags")]
        public Output<ImmutableDictionary<string, string>?> AdditionalTags { get; private set; } = null!;

        /// <summary>
        /// List of regular expressions that an application name must match (case-insensitively)
        /// in order to be ingested.
        /// </summary>
        [Output("appFilterRegexes")]
        public Output<ImmutableArray<string>> AppFilterRegexes { get; private set; } = null!;

        /// <summary>
        /// Name of the SaaS controller.
        /// </summary>
        [Output("controllerName")]
        public Output<string> ControllerName { get; private set; } = null!;

        /// <summary>
        /// Boolean flag to control Application Infrastructure metric ingestion.
        /// </summary>
        [Output("enableAppInfraMetrics")]
        public Output<bool?> EnableAppInfraMetrics { get; private set; } = null!;

        /// <summary>
        /// Boolean flag to control Backend metric ingestion.
        /// </summary>
        [Output("enableBackendMetrics")]
        public Output<bool?> EnableBackendMetrics { get; private set; } = null!;

        /// <summary>
        /// Boolean flag to control Business Transaction metric ingestion.
        /// </summary>
        [Output("enableBusinessTrxMetrics")]
        public Output<bool?> EnableBusinessTrxMetrics { get; private set; } = null!;

        /// <summary>
        /// Boolean flag to control Error metric ingestion.
        /// </summary>
        [Output("enableErrorMetrics")]
        public Output<bool?> EnableErrorMetrics { get; private set; } = null!;

        /// <summary>
        /// Boolean flag to control Individual Node metric ingestion.
        /// </summary>
        [Output("enableIndividualNodeMetrics")]
        public Output<bool?> EnableIndividualNodeMetrics { get; private set; } = null!;

        /// <summary>
        /// Boolean flag to control Overall Performance metric ingestion.
        /// </summary>
        [Output("enableOverallPerfMetrics")]
        public Output<bool?> EnableOverallPerfMetrics { get; private set; } = null!;

        /// <summary>
        /// Set this to `false` to get separate results for all values within the time range,
        /// by default it is `true`.
        /// </summary>
        [Output("enableRollup")]
        public Output<bool?> EnableRollup { get; private set; } = null!;

        /// <summary>
        /// Boolean flag to control Service End point metric ingestion.
        /// </summary>
        [Output("enableServiceEndpointMetrics")]
        public Output<bool?> EnableServiceEndpointMetrics { get; private set; } = null!;

        /// <summary>
        /// Password for AppDynamics user.
        /// </summary>
        [Output("encryptedPassword")]
        public Output<string> EncryptedPassword { get; private set; } = null!;

        /// <summary>
        /// Forces this resource to save, even if errors are present.
        /// </summary>
        [Output("forceSave")]
        public Output<bool?> ForceSave { get; private set; } = null!;

        /// <summary>
        /// The human-readable name of this integration.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A value denoting which cloud service this service integrates with.
        /// </summary>
        [Output("service")]
        public Output<string> Service { get; private set; } = null!;

        /// <summary>
        /// How often, in minutes, to refresh the service.
        /// </summary>
        [Output("serviceRefreshRateInMinutes")]
        public Output<int?> ServiceRefreshRateInMinutes { get; private set; } = null!;

        /// <summary>
        /// Username is a combination of userName and the account name.
        /// </summary>
        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;


        /// <summary>
        /// Create a CloudIntegrationAppDynamics resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudIntegrationAppDynamics(string name, CloudIntegrationAppDynamicsArgs args, CustomResourceOptions? options = null)
            : base("wavefront:index/cloudIntegrationAppDynamics:CloudIntegrationAppDynamics", name, args ?? new CloudIntegrationAppDynamicsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudIntegrationAppDynamics(string name, Input<string> id, CloudIntegrationAppDynamicsState? state = null, CustomResourceOptions? options = null)
            : base("wavefront:index/cloudIntegrationAppDynamics:CloudIntegrationAppDynamics", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "encryptedPassword",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudIntegrationAppDynamics resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudIntegrationAppDynamics Get(string name, Input<string> id, CloudIntegrationAppDynamicsState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudIntegrationAppDynamics(name, id, state, options);
        }
    }

    public sealed class CloudIntegrationAppDynamicsArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalTags")]
        private InputMap<string>? _additionalTags;

        /// <summary>
        /// A list of point tag key-values to add to every point ingested using this integration.
        /// </summary>
        public InputMap<string> AdditionalTags
        {
            get => _additionalTags ?? (_additionalTags = new InputMap<string>());
            set => _additionalTags = value;
        }

        [Input("appFilterRegexes")]
        private InputList<string>? _appFilterRegexes;

        /// <summary>
        /// List of regular expressions that an application name must match (case-insensitively)
        /// in order to be ingested.
        /// </summary>
        public InputList<string> AppFilterRegexes
        {
            get => _appFilterRegexes ?? (_appFilterRegexes = new InputList<string>());
            set => _appFilterRegexes = value;
        }

        /// <summary>
        /// Name of the SaaS controller.
        /// </summary>
        [Input("controllerName", required: true)]
        public Input<string> ControllerName { get; set; } = null!;

        /// <summary>
        /// Boolean flag to control Application Infrastructure metric ingestion.
        /// </summary>
        [Input("enableAppInfraMetrics")]
        public Input<bool>? EnableAppInfraMetrics { get; set; }

        /// <summary>
        /// Boolean flag to control Backend metric ingestion.
        /// </summary>
        [Input("enableBackendMetrics")]
        public Input<bool>? EnableBackendMetrics { get; set; }

        /// <summary>
        /// Boolean flag to control Business Transaction metric ingestion.
        /// </summary>
        [Input("enableBusinessTrxMetrics")]
        public Input<bool>? EnableBusinessTrxMetrics { get; set; }

        /// <summary>
        /// Boolean flag to control Error metric ingestion.
        /// </summary>
        [Input("enableErrorMetrics")]
        public Input<bool>? EnableErrorMetrics { get; set; }

        /// <summary>
        /// Boolean flag to control Individual Node metric ingestion.
        /// </summary>
        [Input("enableIndividualNodeMetrics")]
        public Input<bool>? EnableIndividualNodeMetrics { get; set; }

        /// <summary>
        /// Boolean flag to control Overall Performance metric ingestion.
        /// </summary>
        [Input("enableOverallPerfMetrics")]
        public Input<bool>? EnableOverallPerfMetrics { get; set; }

        /// <summary>
        /// Set this to `false` to get separate results for all values within the time range,
        /// by default it is `true`.
        /// </summary>
        [Input("enableRollup")]
        public Input<bool>? EnableRollup { get; set; }

        /// <summary>
        /// Boolean flag to control Service End point metric ingestion.
        /// </summary>
        [Input("enableServiceEndpointMetrics")]
        public Input<bool>? EnableServiceEndpointMetrics { get; set; }

        [Input("encryptedPassword", required: true)]
        private Input<string>? _encryptedPassword;

        /// <summary>
        /// Password for AppDynamics user.
        /// </summary>
        public Input<string>? EncryptedPassword
        {
            get => _encryptedPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _encryptedPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Forces this resource to save, even if errors are present.
        /// </summary>
        [Input("forceSave")]
        public Input<bool>? ForceSave { get; set; }

        /// <summary>
        /// The human-readable name of this integration.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A value denoting which cloud service this service integrates with.
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        /// <summary>
        /// How often, in minutes, to refresh the service.
        /// </summary>
        [Input("serviceRefreshRateInMinutes")]
        public Input<int>? ServiceRefreshRateInMinutes { get; set; }

        /// <summary>
        /// Username is a combination of userName and the account name.
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public CloudIntegrationAppDynamicsArgs()
        {
        }
        public static new CloudIntegrationAppDynamicsArgs Empty => new CloudIntegrationAppDynamicsArgs();
    }

    public sealed class CloudIntegrationAppDynamicsState : global::Pulumi.ResourceArgs
    {
        [Input("additionalTags")]
        private InputMap<string>? _additionalTags;

        /// <summary>
        /// A list of point tag key-values to add to every point ingested using this integration.
        /// </summary>
        public InputMap<string> AdditionalTags
        {
            get => _additionalTags ?? (_additionalTags = new InputMap<string>());
            set => _additionalTags = value;
        }

        [Input("appFilterRegexes")]
        private InputList<string>? _appFilterRegexes;

        /// <summary>
        /// List of regular expressions that an application name must match (case-insensitively)
        /// in order to be ingested.
        /// </summary>
        public InputList<string> AppFilterRegexes
        {
            get => _appFilterRegexes ?? (_appFilterRegexes = new InputList<string>());
            set => _appFilterRegexes = value;
        }

        /// <summary>
        /// Name of the SaaS controller.
        /// </summary>
        [Input("controllerName")]
        public Input<string>? ControllerName { get; set; }

        /// <summary>
        /// Boolean flag to control Application Infrastructure metric ingestion.
        /// </summary>
        [Input("enableAppInfraMetrics")]
        public Input<bool>? EnableAppInfraMetrics { get; set; }

        /// <summary>
        /// Boolean flag to control Backend metric ingestion.
        /// </summary>
        [Input("enableBackendMetrics")]
        public Input<bool>? EnableBackendMetrics { get; set; }

        /// <summary>
        /// Boolean flag to control Business Transaction metric ingestion.
        /// </summary>
        [Input("enableBusinessTrxMetrics")]
        public Input<bool>? EnableBusinessTrxMetrics { get; set; }

        /// <summary>
        /// Boolean flag to control Error metric ingestion.
        /// </summary>
        [Input("enableErrorMetrics")]
        public Input<bool>? EnableErrorMetrics { get; set; }

        /// <summary>
        /// Boolean flag to control Individual Node metric ingestion.
        /// </summary>
        [Input("enableIndividualNodeMetrics")]
        public Input<bool>? EnableIndividualNodeMetrics { get; set; }

        /// <summary>
        /// Boolean flag to control Overall Performance metric ingestion.
        /// </summary>
        [Input("enableOverallPerfMetrics")]
        public Input<bool>? EnableOverallPerfMetrics { get; set; }

        /// <summary>
        /// Set this to `false` to get separate results for all values within the time range,
        /// by default it is `true`.
        /// </summary>
        [Input("enableRollup")]
        public Input<bool>? EnableRollup { get; set; }

        /// <summary>
        /// Boolean flag to control Service End point metric ingestion.
        /// </summary>
        [Input("enableServiceEndpointMetrics")]
        public Input<bool>? EnableServiceEndpointMetrics { get; set; }

        [Input("encryptedPassword")]
        private Input<string>? _encryptedPassword;

        /// <summary>
        /// Password for AppDynamics user.
        /// </summary>
        public Input<string>? EncryptedPassword
        {
            get => _encryptedPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _encryptedPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Forces this resource to save, even if errors are present.
        /// </summary>
        [Input("forceSave")]
        public Input<bool>? ForceSave { get; set; }

        /// <summary>
        /// The human-readable name of this integration.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A value denoting which cloud service this service integrates with.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// How often, in minutes, to refresh the service.
        /// </summary>
        [Input("serviceRefreshRateInMinutes")]
        public Input<int>? ServiceRefreshRateInMinutes { get; set; }

        /// <summary>
        /// Username is a combination of userName and the account name.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public CloudIntegrationAppDynamicsState()
        {
        }
        public static new CloudIntegrationAppDynamicsState Empty => new CloudIntegrationAppDynamicsState();
    }
}
