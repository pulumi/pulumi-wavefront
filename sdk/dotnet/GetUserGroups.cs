// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Wavefront
{
    public static class GetUserGroups
    {
        /// <summary>
        /// Use this data source to get all User Groups in Wavefront.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Wavefront = Pulumi.Wavefront;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var groups = Wavefront.GetUserGroups.Invoke(new()
        ///     {
        ///         Limit = 10,
        ///         Offset = 0,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetUserGroupsResult> InvokeAsync(GetUserGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserGroupsResult>("wavefront:index/getUserGroups:getUserGroups", args ?? new GetUserGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get all User Groups in Wavefront.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Wavefront = Pulumi.Wavefront;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var groups = Wavefront.GetUserGroups.Invoke(new()
        ///     {
        ///         Limit = 10,
        ///         Offset = 0,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetUserGroupsResult> Invoke(GetUserGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserGroupsResult>("wavefront:index/getUserGroups:getUserGroups", args ?? new GetUserGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Limit is the maximum number of results to be returned. Defaults to 100.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// Offset is the offset from the first result to be returned. Defaults to 0.
        /// </summary>
        [Input("offset")]
        public int? Offset { get; set; }

        public GetUserGroupsArgs()
        {
        }
        public static new GetUserGroupsArgs Empty => new GetUserGroupsArgs();
    }

    public sealed class GetUserGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Limit is the maximum number of results to be returned. Defaults to 100.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// Offset is the offset from the first result to be returned. Defaults to 0.
        /// </summary>
        [Input("offset")]
        public Input<int>? Offset { get; set; }

        public GetUserGroupsInvokeArgs()
        {
        }
        public static new GetUserGroupsInvokeArgs Empty => new GetUserGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserGroupsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly int? Offset;
        /// <summary>
        /// List of user groups.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserGroupsUserGroupResult> UserGroups;

        [OutputConstructor]
        private GetUserGroupsResult(
            string id,

            int? limit,

            int? offset,

            ImmutableArray<Outputs.GetUserGroupsUserGroupResult> userGroups)
        {
            Id = id;
            Limit = limit;
            Offset = offset;
            UserGroups = userGroups;
        }
    }
}
