// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Wavefront
{
    public static class GetMaintenanceWindowAll
    {
        public static Task<GetMaintenanceWindowAllResult> InvokeAsync(GetMaintenanceWindowAllArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMaintenanceWindowAllResult>("wavefront:index/getMaintenanceWindowAll:getMaintenanceWindowAll", args ?? new GetMaintenanceWindowAllArgs(), options.WithDefaults());

        public static Output<GetMaintenanceWindowAllResult> Invoke(GetMaintenanceWindowAllInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMaintenanceWindowAllResult>("wavefront:index/getMaintenanceWindowAll:getMaintenanceWindowAll", args ?? new GetMaintenanceWindowAllInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMaintenanceWindowAllArgs : global::Pulumi.InvokeArgs
    {
        [Input("limit")]
        public int? Limit { get; set; }

        [Input("offset")]
        public int? Offset { get; set; }

        public GetMaintenanceWindowAllArgs()
        {
        }
        public static new GetMaintenanceWindowAllArgs Empty => new GetMaintenanceWindowAllArgs();
    }

    public sealed class GetMaintenanceWindowAllInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("offset")]
        public Input<int>? Offset { get; set; }

        public GetMaintenanceWindowAllInvokeArgs()
        {
        }
        public static new GetMaintenanceWindowAllInvokeArgs Empty => new GetMaintenanceWindowAllInvokeArgs();
    }


    [OutputType]
    public sealed class GetMaintenanceWindowAllResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly ImmutableArray<Outputs.GetMaintenanceWindowAllMaintenanceWindowResult> MaintenanceWindows;
        public readonly int? Offset;

        [OutputConstructor]
        private GetMaintenanceWindowAllResult(
            string id,

            int? limit,

            ImmutableArray<Outputs.GetMaintenanceWindowAllMaintenanceWindowResult> maintenanceWindows,

            int? offset)
        {
            Id = id;
            Limit = limit;
            MaintenanceWindows = maintenanceWindows;
            Offset = offset;
        }
    }
}
