# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import _utilities, _tables


class CloudIntegrationAzure(pulumi.CustomResource):
    additional_tags: pulumi.Output[dict]
    """
    A list of point tag key-values to add to every point ingested using this integration
    """
    category_filters: pulumi.Output[list]
    """
    A list of Azure Activity Log categories.
    """
    client_id: pulumi.Output[str]
    """
    Client id for an azure service account within your project
    """
    client_secret: pulumi.Output[str]
    """
    Client secret for an Azure service account within your project
    """
    force_save: pulumi.Output[bool]
    """
    Forces this resource to save, even if errors are present
    """
    metric_filter_regex: pulumi.Output[str]
    """
    A regular expression that a metric name must match (case-insensitively) in order to be ingested
    """
    name: pulumi.Output[str]
    """
    The human-readable name of this integration
    """
    resource_group_filters: pulumi.Output[list]
    """
    A list of Azure resource groups from which to pull metrics
    """
    service: pulumi.Output[str]
    """
    A value denoting which cloud service this service integrates with
    """
    service_refresh_rate_in_minutes: pulumi.Output[float]
    """
    How often, in minutes, to refresh the service
    """
    tenant: pulumi.Output[str]
    """
    Tenant Id for an Azure service account within your project
    """
    def __init__(__self__, resource_name, opts=None, additional_tags=None, category_filters=None, client_id=None, client_secret=None, force_save=None, metric_filter_regex=None, name=None, resource_group_filters=None, service=None, service_refresh_rate_in_minutes=None, tenant=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a Wavefront Cloud Integration for Azure. This allows azure cloud integrations to be created,
        updated, and deleted.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_wavefront as wavefront

        azure_activity_log = wavefront.CloudIntegrationAzureActivityLog("azureActivityLog",
            client_id="client-id2",
            client_secret="client-secret2",
            tenant="my-tenant2")
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] additional_tags: A list of point tag key-values to add to every point ingested using this integration
        :param pulumi.Input[list] category_filters: A list of Azure Activity Log categories.
        :param pulumi.Input[str] client_id: Client id for an azure service account within your project
        :param pulumi.Input[str] client_secret: Client secret for an Azure service account within your project
        :param pulumi.Input[bool] force_save: Forces this resource to save, even if errors are present
        :param pulumi.Input[str] metric_filter_regex: A regular expression that a metric name must match (case-insensitively) in order to be ingested
        :param pulumi.Input[str] name: The human-readable name of this integration
        :param pulumi.Input[list] resource_group_filters: A list of Azure resource groups from which to pull metrics
        :param pulumi.Input[str] service: A value denoting which cloud service this service integrates with
        :param pulumi.Input[float] service_refresh_rate_in_minutes: How often, in minutes, to refresh the service
        :param pulumi.Input[str] tenant: Tenant Id for an Azure service account within your project
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['additional_tags'] = additional_tags
            __props__['category_filters'] = category_filters
            if client_id is None:
                raise TypeError("Missing required property 'client_id'")
            __props__['client_id'] = client_id
            if client_secret is None:
                raise TypeError("Missing required property 'client_secret'")
            __props__['client_secret'] = client_secret
            __props__['force_save'] = force_save
            __props__['metric_filter_regex'] = metric_filter_regex
            __props__['name'] = name
            __props__['resource_group_filters'] = resource_group_filters
            if service is None:
                raise TypeError("Missing required property 'service'")
            __props__['service'] = service
            __props__['service_refresh_rate_in_minutes'] = service_refresh_rate_in_minutes
            if tenant is None:
                raise TypeError("Missing required property 'tenant'")
            __props__['tenant'] = tenant
        super(CloudIntegrationAzure, __self__).__init__(
            'wavefront:index/cloudIntegrationAzure:CloudIntegrationAzure',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, additional_tags=None, category_filters=None, client_id=None, client_secret=None, force_save=None, metric_filter_regex=None, name=None, resource_group_filters=None, service=None, service_refresh_rate_in_minutes=None, tenant=None):
        """
        Get an existing CloudIntegrationAzure resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] additional_tags: A list of point tag key-values to add to every point ingested using this integration
        :param pulumi.Input[list] category_filters: A list of Azure Activity Log categories.
        :param pulumi.Input[str] client_id: Client id for an azure service account within your project
        :param pulumi.Input[str] client_secret: Client secret for an Azure service account within your project
        :param pulumi.Input[bool] force_save: Forces this resource to save, even if errors are present
        :param pulumi.Input[str] metric_filter_regex: A regular expression that a metric name must match (case-insensitively) in order to be ingested
        :param pulumi.Input[str] name: The human-readable name of this integration
        :param pulumi.Input[list] resource_group_filters: A list of Azure resource groups from which to pull metrics
        :param pulumi.Input[str] service: A value denoting which cloud service this service integrates with
        :param pulumi.Input[float] service_refresh_rate_in_minutes: How often, in minutes, to refresh the service
        :param pulumi.Input[str] tenant: Tenant Id for an Azure service account within your project
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["additional_tags"] = additional_tags
        __props__["category_filters"] = category_filters
        __props__["client_id"] = client_id
        __props__["client_secret"] = client_secret
        __props__["force_save"] = force_save
        __props__["metric_filter_regex"] = metric_filter_regex
        __props__["name"] = name
        __props__["resource_group_filters"] = resource_group_filters
        __props__["service"] = service
        __props__["service_refresh_rate_in_minutes"] = service_refresh_rate_in_minutes
        __props__["tenant"] = tenant
        return CloudIntegrationAzure(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
