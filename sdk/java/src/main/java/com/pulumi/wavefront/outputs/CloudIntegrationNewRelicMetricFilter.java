// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CloudIntegrationNewRelicMetricFilter {
    /**
     * @return The name of a NewRelic App.
     * 
     */
    private String appName;
    /**
     * @return A regular expression that a metric name must match (case-insensitively) in order to be ingested.
     * 
     */
    private String metricFilterRegex;

    private CloudIntegrationNewRelicMetricFilter() {}
    /**
     * @return The name of a NewRelic App.
     * 
     */
    public String appName() {
        return this.appName;
    }
    /**
     * @return A regular expression that a metric name must match (case-insensitively) in order to be ingested.
     * 
     */
    public String metricFilterRegex() {
        return this.metricFilterRegex;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudIntegrationNewRelicMetricFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appName;
        private String metricFilterRegex;
        public Builder() {}
        public Builder(CloudIntegrationNewRelicMetricFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appName = defaults.appName;
    	      this.metricFilterRegex = defaults.metricFilterRegex;
        }

        @CustomType.Setter
        public Builder appName(String appName) {
            this.appName = Objects.requireNonNull(appName);
            return this;
        }
        @CustomType.Setter
        public Builder metricFilterRegex(String metricFilterRegex) {
            this.metricFilterRegex = Objects.requireNonNull(metricFilterRegex);
            return this;
        }
        public CloudIntegrationNewRelicMetricFilter build() {
            final var _resultValue = new CloudIntegrationNewRelicMetricFilter();
            _resultValue.appName = appName;
            _resultValue.metricFilterRegex = metricFilterRegex;
            return _resultValue;
        }
    }
}
