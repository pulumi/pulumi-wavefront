// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertTargetRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertTargetRouteArgs Empty = new AlertTargetRouteArgs();

    /**
     * (Required) String that filters the route. Space delimited. Currently only allows a single key value pair.
     * (e.g. `env prod`)
     * 
     */
    @Import(name="filter")
    private @Nullable Output<Map<String,String>> filter;

    /**
     * @return (Required) String that filters the route. Space delimited. Currently only allows a single key value pair.
     * (e.g. `env prod`)
     * 
     */
    public Optional<Output<Map<String,String>>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * The notification method used for notification target. One of `WEBHOOK`, `EMAIL`, `PAGERDUTY`.
     * 
     */
    @Import(name="method", required=true)
    private Output<String> method;

    /**
     * @return The notification method used for notification target. One of `WEBHOOK`, `EMAIL`, `PAGERDUTY`.
     * 
     */
    public Output<String> method() {
        return this.method;
    }

    /**
     * (Required) The endpoint for the alert route. `EMAIL`: email address. `PAGERDUTY`: PagerDuty routing
     * key. `WEBHOOK`: URL endpoint.
     * 
     */
    @Import(name="target", required=true)
    private Output<String> target;

    /**
     * @return (Required) The endpoint for the alert route. `EMAIL`: email address. `PAGERDUTY`: PagerDuty routing
     * key. `WEBHOOK`: URL endpoint.
     * 
     */
    public Output<String> target() {
        return this.target;
    }

    private AlertTargetRouteArgs() {}

    private AlertTargetRouteArgs(AlertTargetRouteArgs $) {
        this.filter = $.filter;
        this.method = $.method;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertTargetRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertTargetRouteArgs $;

        public Builder() {
            $ = new AlertTargetRouteArgs();
        }

        public Builder(AlertTargetRouteArgs defaults) {
            $ = new AlertTargetRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter (Required) String that filters the route. Space delimited. Currently only allows a single key value pair.
         * (e.g. `env prod`)
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<Map<String,String>> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter (Required) String that filters the route. Space delimited. Currently only allows a single key value pair.
         * (e.g. `env prod`)
         * 
         * @return builder
         * 
         */
        public Builder filter(Map<String,String> filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param method The notification method used for notification target. One of `WEBHOOK`, `EMAIL`, `PAGERDUTY`.
         * 
         * @return builder
         * 
         */
        public Builder method(Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method The notification method used for notification target. One of `WEBHOOK`, `EMAIL`, `PAGERDUTY`.
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        /**
         * @param target (Required) The endpoint for the alert route. `EMAIL`: email address. `PAGERDUTY`: PagerDuty routing
         * key. `WEBHOOK`: URL endpoint.
         * 
         * @return builder
         * 
         */
        public Builder target(Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target (Required) The endpoint for the alert route. `EMAIL`: email address. `PAGERDUTY`: PagerDuty routing
         * key. `WEBHOOK`: URL endpoint.
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        public AlertTargetRouteArgs build() {
            if ($.method == null) {
                throw new MissingRequiredPropertyException("AlertTargetRouteArgs", "method");
            }
            if ($.target == null) {
                throw new MissingRequiredPropertyException("AlertTargetRouteArgs", "target");
            }
            return $;
        }
    }

}
