// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAlertInMaintenanceHostLabelPair {
    private Integer firing;
    private String host;

    private GetAlertInMaintenanceHostLabelPair() {}
    public Integer firing() {
        return this.firing;
    }
    public String host() {
        return this.host;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertInMaintenanceHostLabelPair defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer firing;
        private String host;
        public Builder() {}
        public Builder(GetAlertInMaintenanceHostLabelPair defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.firing = defaults.firing;
    	      this.host = defaults.host;
        }

        @CustomType.Setter
        public Builder firing(Integer firing) {
            if (firing == null) {
              throw new MissingRequiredPropertyException("GetAlertInMaintenanceHostLabelPair", "firing");
            }
            this.firing = firing;
            return this;
        }
        @CustomType.Setter
        public Builder host(String host) {
            if (host == null) {
              throw new MissingRequiredPropertyException("GetAlertInMaintenanceHostLabelPair", "host");
            }
            this.host = host;
            return this;
        }
        public GetAlertInMaintenanceHostLabelPair build() {
            final var _resultValue = new GetAlertInMaintenanceHostLabelPair();
            _resultValue.firing = firing;
            _resultValue.host = host;
            return _resultValue;
        }
    }
}
