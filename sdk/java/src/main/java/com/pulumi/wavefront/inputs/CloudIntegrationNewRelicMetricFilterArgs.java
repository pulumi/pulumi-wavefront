// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class CloudIntegrationNewRelicMetricFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudIntegrationNewRelicMetricFilterArgs Empty = new CloudIntegrationNewRelicMetricFilterArgs();

    /**
     * The name of a NewRelic App.
     * 
     */
    @Import(name="appName", required=true)
    private Output<String> appName;

    /**
     * @return The name of a NewRelic App.
     * 
     */
    public Output<String> appName() {
        return this.appName;
    }

    /**
     * A regular expression that a metric name must match (case-insensitively) in order to be ingested.
     * 
     */
    @Import(name="metricFilterRegex", required=true)
    private Output<String> metricFilterRegex;

    /**
     * @return A regular expression that a metric name must match (case-insensitively) in order to be ingested.
     * 
     */
    public Output<String> metricFilterRegex() {
        return this.metricFilterRegex;
    }

    private CloudIntegrationNewRelicMetricFilterArgs() {}

    private CloudIntegrationNewRelicMetricFilterArgs(CloudIntegrationNewRelicMetricFilterArgs $) {
        this.appName = $.appName;
        this.metricFilterRegex = $.metricFilterRegex;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudIntegrationNewRelicMetricFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudIntegrationNewRelicMetricFilterArgs $;

        public Builder() {
            $ = new CloudIntegrationNewRelicMetricFilterArgs();
        }

        public Builder(CloudIntegrationNewRelicMetricFilterArgs defaults) {
            $ = new CloudIntegrationNewRelicMetricFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appName The name of a NewRelic App.
         * 
         * @return builder
         * 
         */
        public Builder appName(Output<String> appName) {
            $.appName = appName;
            return this;
        }

        /**
         * @param appName The name of a NewRelic App.
         * 
         * @return builder
         * 
         */
        public Builder appName(String appName) {
            return appName(Output.of(appName));
        }

        /**
         * @param metricFilterRegex A regular expression that a metric name must match (case-insensitively) in order to be ingested.
         * 
         * @return builder
         * 
         */
        public Builder metricFilterRegex(Output<String> metricFilterRegex) {
            $.metricFilterRegex = metricFilterRegex;
            return this;
        }

        /**
         * @param metricFilterRegex A regular expression that a metric name must match (case-insensitively) in order to be ingested.
         * 
         * @return builder
         * 
         */
        public Builder metricFilterRegex(String metricFilterRegex) {
            return metricFilterRegex(Output.of(metricFilterRegex));
        }

        public CloudIntegrationNewRelicMetricFilterArgs build() {
            $.appName = Objects.requireNonNull($.appName, "expected parameter 'appName' to be non-null");
            $.metricFilterRegex = Objects.requireNonNull($.metricFilterRegex, "expected parameter 'metricFilterRegex' to be non-null");
            return $;
        }
    }

}
