// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.wavefront.outputs.GetAlertAlertTriageDashboardParameters;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAlertAlertTriageDashboard {
    /**
     * @return Dashboard ID
     * 
     */
    private String dashboardId;
    /**
     * @return Dashboard Description
     * 
     */
    private String description;
    private @Nullable GetAlertAlertTriageDashboardParameters parameters;

    private GetAlertAlertTriageDashboard() {}
    /**
     * @return Dashboard ID
     * 
     */
    public String dashboardId() {
        return this.dashboardId;
    }
    /**
     * @return Dashboard Description
     * 
     */
    public String description() {
        return this.description;
    }
    public Optional<GetAlertAlertTriageDashboardParameters> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertAlertTriageDashboard defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dashboardId;
        private String description;
        private @Nullable GetAlertAlertTriageDashboardParameters parameters;
        public Builder() {}
        public Builder(GetAlertAlertTriageDashboard defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dashboardId = defaults.dashboardId;
    	      this.description = defaults.description;
    	      this.parameters = defaults.parameters;
        }

        @CustomType.Setter
        public Builder dashboardId(String dashboardId) {
            if (dashboardId == null) {
              throw new MissingRequiredPropertyException("GetAlertAlertTriageDashboard", "dashboardId");
            }
            this.dashboardId = dashboardId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAlertAlertTriageDashboard", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable GetAlertAlertTriageDashboardParameters parameters) {

            this.parameters = parameters;
            return this;
        }
        public GetAlertAlertTriageDashboard build() {
            final var _resultValue = new GetAlertAlertTriageDashboard();
            _resultValue.dashboardId = dashboardId;
            _resultValue.description = description;
            _resultValue.parameters = parameters;
            return _resultValue;
        }
    }
}
