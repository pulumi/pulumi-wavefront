// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRoleResult {
    /**
     * @return Human-readable description of the role.
     * 
     */
    private String description;
    /**
     * @return The ID of the role in Wavefront.
     * 
     */
    private String id;
    /**
     * @return The name of the role in Wavefront.
     * 
     */
    private String name;
    /**
     * @return The list of permissions associated with role.
     * 
     */
    private List<String> permissions;

    private GetRoleResult() {}
    /**
     * @return Human-readable description of the role.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the role in Wavefront.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the role in Wavefront.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The list of permissions associated with role.
     * 
     */
    public List<String> permissions() {
        return this.permissions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRoleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private String name;
        private List<String> permissions;
        public Builder() {}
        public Builder(GetRoleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.permissions = defaults.permissions;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetRoleResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRoleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRoleResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder permissions(List<String> permissions) {
            if (permissions == null) {
              throw new MissingRequiredPropertyException("GetRoleResult", "permissions");
            }
            this.permissions = permissions;
            return this;
        }
        public Builder permissions(String... permissions) {
            return permissions(List.of(permissions));
        }
        public GetRoleResult build() {
            final var _resultValue = new GetRoleResult();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.permissions = permissions;
            return _resultValue;
        }
    }
}
