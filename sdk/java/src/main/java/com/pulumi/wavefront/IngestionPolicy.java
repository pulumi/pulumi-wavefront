// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.wavefront.IngestionPolicyArgs;
import com.pulumi.wavefront.Utilities;
import com.pulumi.wavefront.inputs.IngestionPolicyState;
import com.pulumi.wavefront.outputs.IngestionPolicyTag;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Wavefront Ingestion Policy Resource. This allows ingestion policies to be created, updated, and deleted.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.wavefront.IngestionPolicy;
 * import com.pulumi.wavefront.IngestionPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basic = new IngestionPolicy("basic", IngestionPolicyArgs.builder()        
 *             .name("test_ingestion")
 *             .description("An ingestion policy for testing")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ingestion policies can be imported by using the `id`, e.g.:
 * 
 * ```sh
 * $ pulumi import wavefront:index/ingestionPolicy:IngestionPolicy basic test_ingestion-1611946841064
 * ```
 * 
 */
@ResourceType(type="wavefront:index/ingestionPolicy:IngestionPolicy")
public class IngestionPolicy extends com.pulumi.resources.CustomResource {
    @Export(name="accounts", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> accounts;

    public Output<Optional<List<String>>> accounts() {
        return Codegen.optional(this.accounts);
    }
    /**
     * The description of the ingestion policy.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the ingestion policy.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    @Export(name="groups", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> groups;

    public Output<Optional<List<String>>> groups() {
        return Codegen.optional(this.groups);
    }
    /**
     * The name of the ingestion policy.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the ingestion policy.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="namespaces", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> namespaces;

    public Output<Optional<List<String>>> namespaces() {
        return Codegen.optional(this.namespaces);
    }
    @Export(name="scope", refs={String.class}, tree="[0]")
    private Output<String> scope;

    public Output<String> scope() {
        return this.scope;
    }
    @Export(name="sources", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> sources;

    public Output<Optional<List<String>>> sources() {
        return Codegen.optional(this.sources);
    }
    @Export(name="tags", refs={List.class,IngestionPolicyTag.class}, tree="[0,1]")
    private Output</* @Nullable */ List<IngestionPolicyTag>> tags;

    public Output<Optional<List<IngestionPolicyTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IngestionPolicy(String name) {
        this(name, IngestionPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IngestionPolicy(String name, IngestionPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IngestionPolicy(String name, IngestionPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/ingestionPolicy:IngestionPolicy", name, args == null ? IngestionPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IngestionPolicy(String name, Output<String> id, @Nullable IngestionPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/ingestionPolicy:IngestionPolicy", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IngestionPolicy get(String name, Output<String> id, @Nullable IngestionPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IngestionPolicy(name, id, state, options);
    }
}
