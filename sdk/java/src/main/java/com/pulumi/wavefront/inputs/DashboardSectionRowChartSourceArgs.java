// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardSectionRowChartSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardSectionRowChartSourceArgs Empty = new DashboardSectionRowChartSourceArgs();

    /**
     * Whether the source is disabled.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return Whether the source is disabled.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * Name of the source.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the source.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Query expression to plot on the chart.
     * 
     */
    @Import(name="query", required=true)
    private Output<String> query;

    /**
     * @return Query expression to plot on the chart.
     * 
     */
    public Output<String> query() {
        return this.query;
    }

    /**
     * Whether or not this source line should have the query builder enabled.
     * 
     */
    @Import(name="queryBuilderEnabled")
    private @Nullable Output<Boolean> queryBuilderEnabled;

    /**
     * @return Whether or not this source line should have the query builder enabled.
     * 
     */
    public Optional<Output<Boolean>> queryBuilderEnabled() {
        return Optional.ofNullable(this.queryBuilderEnabled);
    }

    /**
     * For scatter plots, does this query source the X-axis or the Y-axis, `X`, or `Y`.
     * 
     */
    @Import(name="scatterPlotSource")
    private @Nullable Output<String> scatterPlotSource;

    /**
     * @return For scatter plots, does this query source the X-axis or the Y-axis, `X`, or `Y`.
     * 
     */
    public Optional<Output<String>> scatterPlotSource() {
        return Optional.ofNullable(this.scatterPlotSource);
    }

    /**
     * A description for the purpose of this source.
     * 
     */
    @Import(name="sourceDescription")
    private @Nullable Output<String> sourceDescription;

    /**
     * @return A description for the purpose of this source.
     * 
     */
    public Optional<Output<String>> sourceDescription() {
        return Optional.ofNullable(this.sourceDescription);
    }

    private DashboardSectionRowChartSourceArgs() {}

    private DashboardSectionRowChartSourceArgs(DashboardSectionRowChartSourceArgs $) {
        this.disabled = $.disabled;
        this.name = $.name;
        this.query = $.query;
        this.queryBuilderEnabled = $.queryBuilderEnabled;
        this.scatterPlotSource = $.scatterPlotSource;
        this.sourceDescription = $.sourceDescription;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardSectionRowChartSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardSectionRowChartSourceArgs $;

        public Builder() {
            $ = new DashboardSectionRowChartSourceArgs();
        }

        public Builder(DashboardSectionRowChartSourceArgs defaults) {
            $ = new DashboardSectionRowChartSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disabled Whether the source is disabled.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled Whether the source is disabled.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param name Name of the source.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the source.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param query Query expression to plot on the chart.
         * 
         * @return builder
         * 
         */
        public Builder query(Output<String> query) {
            $.query = query;
            return this;
        }

        /**
         * @param query Query expression to plot on the chart.
         * 
         * @return builder
         * 
         */
        public Builder query(String query) {
            return query(Output.of(query));
        }

        /**
         * @param queryBuilderEnabled Whether or not this source line should have the query builder enabled.
         * 
         * @return builder
         * 
         */
        public Builder queryBuilderEnabled(@Nullable Output<Boolean> queryBuilderEnabled) {
            $.queryBuilderEnabled = queryBuilderEnabled;
            return this;
        }

        /**
         * @param queryBuilderEnabled Whether or not this source line should have the query builder enabled.
         * 
         * @return builder
         * 
         */
        public Builder queryBuilderEnabled(Boolean queryBuilderEnabled) {
            return queryBuilderEnabled(Output.of(queryBuilderEnabled));
        }

        /**
         * @param scatterPlotSource For scatter plots, does this query source the X-axis or the Y-axis, `X`, or `Y`.
         * 
         * @return builder
         * 
         */
        public Builder scatterPlotSource(@Nullable Output<String> scatterPlotSource) {
            $.scatterPlotSource = scatterPlotSource;
            return this;
        }

        /**
         * @param scatterPlotSource For scatter plots, does this query source the X-axis or the Y-axis, `X`, or `Y`.
         * 
         * @return builder
         * 
         */
        public Builder scatterPlotSource(String scatterPlotSource) {
            return scatterPlotSource(Output.of(scatterPlotSource));
        }

        /**
         * @param sourceDescription A description for the purpose of this source.
         * 
         * @return builder
         * 
         */
        public Builder sourceDescription(@Nullable Output<String> sourceDescription) {
            $.sourceDescription = sourceDescription;
            return this;
        }

        /**
         * @param sourceDescription A description for the purpose of this source.
         * 
         * @return builder
         * 
         */
        public Builder sourceDescription(String sourceDescription) {
            return sourceDescription(Output.of(sourceDescription));
        }

        public DashboardSectionRowChartSourceArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("DashboardSectionRowChartSourceArgs", "name");
            }
            if ($.query == null) {
                throw new MissingRequiredPropertyException("DashboardSectionRowChartSourceArgs", "query");
            }
            return $;
        }
    }

}
