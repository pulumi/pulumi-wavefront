// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.wavefront.MetricsPolicyArgs;
import com.pulumi.wavefront.Utilities;
import com.pulumi.wavefront.inputs.MetricsPolicyState;
import com.pulumi.wavefront.outputs.MetricsPolicyPolicyRule;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a Wavefront Metrics Policy Resource. This allows management of Metrics Policy to control access to time series, histograms, and delta counters
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.wavefront.WavefrontFunctions;
 * import com.pulumi.wavefront.MetricsPolicy;
 * import com.pulumi.wavefront.MetricsPolicyArgs;
 * import com.pulumi.wavefront.inputs.MetricsPolicyPolicyRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var everyone = WavefrontFunctions.getDefaultUserGroup();
 * 
 *         var main = new MetricsPolicy(&#34;main&#34;, MetricsPolicyArgs.builder()        
 *             .policyRules(MetricsPolicyPolicyRuleArgs.builder()
 *                 .name(&#34;Allow All Metrics&#34;)
 *                 .description(&#34;Predefined policy rule. Allows access to all metrics (timeseries, histograms, and counters) for all accounts. If this rule is removed, all accounts can access all metrics if there are no matching blocking rules.&#34;)
 *                 .prefixes(&#34;*&#34;)
 *                 .tagsAnded(false)
 *                 .accessType(&#34;ALLOW&#34;)
 *                 .userGroupIds(everyone.applyValue(getDefaultUserGroupResult -&gt; getDefaultUserGroupResult.groupId()))
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ## Data Source
 * 
 * Provides a Wavefront Metrics Policy Data Source. This allows looking up the current policy and associated rules.
 * 
 * ### Example
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.wavefront.WavefrontFunctions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var policyMetricsPolicy = WavefrontFunctions.getMetricsPolicy();
 * 
 *         ctx.export(&#34;policy&#34;, policyMetricsPolicy.applyValue(getMetricsPolicyResult -&gt; getMetricsPolicyResult));
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Users can be imported by using the `updated_epoch_millis`, e.g.:
 * 
 * ```sh
 *  $ pulumi import wavefront:index/metricsPolicy:MetricsPolicy some_metrics_policy 1651846476678
 * ```
 * 
 */
@ResourceType(type="wavefront:index/metricsPolicy:MetricsPolicy")
public class MetricsPolicy extends com.pulumi.resources.CustomResource {
    /**
     * The customer the user is associated with.
     * 
     */
    @Export(name="customer", refs={String.class}, tree="[0]")
    private Output<String> customer;

    /**
     * @return The customer the user is associated with.
     * 
     */
    public Output<String> customer() {
        return this.customer;
    }
    /**
     * List of Metrics Policies, must have at least one entry.
     * 
     */
    @Export(name="policyRules", refs={List.class,MetricsPolicyPolicyRule.class}, tree="[0,1]")
    private Output<List<MetricsPolicyPolicyRule>> policyRules;

    /**
     * @return List of Metrics Policies, must have at least one entry.
     * 
     */
    public Output<List<MetricsPolicyPolicyRule>> policyRules() {
        return this.policyRules;
    }
    /**
     * When the policy was applied in epoch_millis.
     * 
     */
    @Export(name="updatedEpochMillis", refs={Integer.class}, tree="[0]")
    private Output<Integer> updatedEpochMillis;

    /**
     * @return When the policy was applied in epoch_millis.
     * 
     */
    public Output<Integer> updatedEpochMillis() {
        return this.updatedEpochMillis;
    }
    /**
     * The account_id who applied the current policy.
     * 
     */
    @Export(name="updaterId", refs={String.class}, tree="[0]")
    private Output<String> updaterId;

    /**
     * @return The account_id who applied the current policy.
     * 
     */
    public Output<String> updaterId() {
        return this.updaterId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MetricsPolicy(String name) {
        this(name, MetricsPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MetricsPolicy(String name, MetricsPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MetricsPolicy(String name, MetricsPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/metricsPolicy:MetricsPolicy", name, args == null ? MetricsPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MetricsPolicy(String name, Output<String> id, @Nullable MetricsPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/metricsPolicy:MetricsPolicy", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MetricsPolicy get(String name, Output<String> id, @Nullable MetricsPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MetricsPolicy(name, id, state, options);
    }
}
