// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.wavefront.EventArgs;
import com.pulumi.wavefront.Utilities;
import com.pulumi.wavefront.inputs.EventState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Wavefront event resource. This allows events to be created, updated, and deleted.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.wavefront.Event;
 * import com.pulumi.wavefront.EventArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var event = new Event(&#34;event&#34;, EventArgs.builder()        
 *             .annotations(Map.ofEntries(
 *                 Map.entry(&#34;details&#34;, &#34;description&#34;),
 *                 Map.entry(&#34;severity&#34;, &#34;info&#34;),
 *                 Map.entry(&#34;type&#34;, &#34;event type&#34;)
 *             ))
 *             .tags(&#34;eventTag1&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * You can import events by using the id, for example:
 * 
 * ```sh
 *  $ pulumi import wavefront:index/event:Event event 1479868728473
 * ```
 * 
 */
@ResourceType(type="wavefront:index/event:Event")
public class Event extends com.pulumi.resources.CustomResource {
    /**
     * The annotations associated with the event.
     * 
     */
    @Export(name="annotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> annotations;

    /**
     * @return The annotations associated with the event.
     * 
     */
    public Output<Map<String,String>> annotations() {
        return this.annotations;
    }
    @Export(name="endtimeKey", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> endtimeKey;

    public Output<Optional<Integer>> endtimeKey() {
        return Codegen.optional(this.endtimeKey);
    }
    /**
     * The name of the event as it is displayed in Wavefront.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the event as it is displayed in Wavefront.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The start time of the event in epoch milliseconds.
     * 
     */
    @Export(name="startTime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> startTime;

    /**
     * @return The start time of the event in epoch milliseconds.
     * 
     */
    public Output<Optional<Integer>> startTime() {
        return Codegen.optional(this.startTime);
    }
    /**
     * A set of tags to assign to this resource.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return A set of tags to assign to this resource.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Event(String name) {
        this(name, EventArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Event(String name, EventArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Event(String name, EventArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/event:Event", name, args == null ? EventArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Event(String name, Output<String> id, @Nullable EventState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/event:Event", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Event get(String name, Output<String> id, @Nullable EventState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Event(name, id, state, options);
    }
}
