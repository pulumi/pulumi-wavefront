// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudIntegrationAppDynamicsState extends com.pulumi.resources.ResourceArgs {

    public static final CloudIntegrationAppDynamicsState Empty = new CloudIntegrationAppDynamicsState();

    /**
     * A list of point tag key-values to add to every point ingested using this integration.
     * 
     */
    @Import(name="additionalTags")
    private @Nullable Output<Map<String,String>> additionalTags;

    /**
     * @return A list of point tag key-values to add to every point ingested using this integration.
     * 
     */
    public Optional<Output<Map<String,String>>> additionalTags() {
        return Optional.ofNullable(this.additionalTags);
    }

    /**
     * List of regular expressions that an application name must match (case-insensitively)
     * in order to be ingested.
     * 
     */
    @Import(name="appFilterRegexes")
    private @Nullable Output<List<String>> appFilterRegexes;

    /**
     * @return List of regular expressions that an application name must match (case-insensitively)
     * in order to be ingested.
     * 
     */
    public Optional<Output<List<String>>> appFilterRegexes() {
        return Optional.ofNullable(this.appFilterRegexes);
    }

    /**
     * Name of the SaaS controller.
     * 
     */
    @Import(name="controllerName")
    private @Nullable Output<String> controllerName;

    /**
     * @return Name of the SaaS controller.
     * 
     */
    public Optional<Output<String>> controllerName() {
        return Optional.ofNullable(this.controllerName);
    }

    /**
     * Boolean flag to control Application Infrastructure metric ingestion.
     * 
     */
    @Import(name="enableAppInfraMetrics")
    private @Nullable Output<Boolean> enableAppInfraMetrics;

    /**
     * @return Boolean flag to control Application Infrastructure metric ingestion.
     * 
     */
    public Optional<Output<Boolean>> enableAppInfraMetrics() {
        return Optional.ofNullable(this.enableAppInfraMetrics);
    }

    /**
     * Boolean flag to control Backend metric ingestion.
     * 
     */
    @Import(name="enableBackendMetrics")
    private @Nullable Output<Boolean> enableBackendMetrics;

    /**
     * @return Boolean flag to control Backend metric ingestion.
     * 
     */
    public Optional<Output<Boolean>> enableBackendMetrics() {
        return Optional.ofNullable(this.enableBackendMetrics);
    }

    /**
     * Boolean flag to control Business Transaction metric ingestion.
     * 
     */
    @Import(name="enableBusinessTrxMetrics")
    private @Nullable Output<Boolean> enableBusinessTrxMetrics;

    /**
     * @return Boolean flag to control Business Transaction metric ingestion.
     * 
     */
    public Optional<Output<Boolean>> enableBusinessTrxMetrics() {
        return Optional.ofNullable(this.enableBusinessTrxMetrics);
    }

    /**
     * Boolean flag to control Error metric ingestion.
     * 
     */
    @Import(name="enableErrorMetrics")
    private @Nullable Output<Boolean> enableErrorMetrics;

    /**
     * @return Boolean flag to control Error metric ingestion.
     * 
     */
    public Optional<Output<Boolean>> enableErrorMetrics() {
        return Optional.ofNullable(this.enableErrorMetrics);
    }

    /**
     * Boolean flag to control Individual Node metric ingestion.
     * 
     */
    @Import(name="enableIndividualNodeMetrics")
    private @Nullable Output<Boolean> enableIndividualNodeMetrics;

    /**
     * @return Boolean flag to control Individual Node metric ingestion.
     * 
     */
    public Optional<Output<Boolean>> enableIndividualNodeMetrics() {
        return Optional.ofNullable(this.enableIndividualNodeMetrics);
    }

    /**
     * Boolean flag to control Overall Performance metric ingestion.
     * 
     */
    @Import(name="enableOverallPerfMetrics")
    private @Nullable Output<Boolean> enableOverallPerfMetrics;

    /**
     * @return Boolean flag to control Overall Performance metric ingestion.
     * 
     */
    public Optional<Output<Boolean>> enableOverallPerfMetrics() {
        return Optional.ofNullable(this.enableOverallPerfMetrics);
    }

    /**
     * Set this to `false` to get separate results for all values within the time range,
     * by default it is `true`.
     * 
     */
    @Import(name="enableRollup")
    private @Nullable Output<Boolean> enableRollup;

    /**
     * @return Set this to `false` to get separate results for all values within the time range,
     * by default it is `true`.
     * 
     */
    public Optional<Output<Boolean>> enableRollup() {
        return Optional.ofNullable(this.enableRollup);
    }

    /**
     * Boolean flag to control Service End point metric ingestion.
     * 
     */
    @Import(name="enableServiceEndpointMetrics")
    private @Nullable Output<Boolean> enableServiceEndpointMetrics;

    /**
     * @return Boolean flag to control Service End point metric ingestion.
     * 
     */
    public Optional<Output<Boolean>> enableServiceEndpointMetrics() {
        return Optional.ofNullable(this.enableServiceEndpointMetrics);
    }

    /**
     * Password for AppDynamics user.
     * 
     */
    @Import(name="encryptedPassword")
    private @Nullable Output<String> encryptedPassword;

    /**
     * @return Password for AppDynamics user.
     * 
     */
    public Optional<Output<String>> encryptedPassword() {
        return Optional.ofNullable(this.encryptedPassword);
    }

    /**
     * Forces this resource to save, even if errors are present.
     * 
     */
    @Import(name="forceSave")
    private @Nullable Output<Boolean> forceSave;

    /**
     * @return Forces this resource to save, even if errors are present.
     * 
     */
    public Optional<Output<Boolean>> forceSave() {
        return Optional.ofNullable(this.forceSave);
    }

    /**
     * The human-readable name of this integration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The human-readable name of this integration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A value denoting which cloud service this service integrates with.
     * 
     */
    @Import(name="service")
    private @Nullable Output<String> service;

    /**
     * @return A value denoting which cloud service this service integrates with.
     * 
     */
    public Optional<Output<String>> service() {
        return Optional.ofNullable(this.service);
    }

    /**
     * How often, in minutes, to refresh the service.
     * 
     */
    @Import(name="serviceRefreshRateInMinutes")
    private @Nullable Output<Integer> serviceRefreshRateInMinutes;

    /**
     * @return How often, in minutes, to refresh the service.
     * 
     */
    public Optional<Output<Integer>> serviceRefreshRateInMinutes() {
        return Optional.ofNullable(this.serviceRefreshRateInMinutes);
    }

    /**
     * Username is a combination of userName and the account name.
     * 
     */
    @Import(name="userName")
    private @Nullable Output<String> userName;

    /**
     * @return Username is a combination of userName and the account name.
     * 
     */
    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    private CloudIntegrationAppDynamicsState() {}

    private CloudIntegrationAppDynamicsState(CloudIntegrationAppDynamicsState $) {
        this.additionalTags = $.additionalTags;
        this.appFilterRegexes = $.appFilterRegexes;
        this.controllerName = $.controllerName;
        this.enableAppInfraMetrics = $.enableAppInfraMetrics;
        this.enableBackendMetrics = $.enableBackendMetrics;
        this.enableBusinessTrxMetrics = $.enableBusinessTrxMetrics;
        this.enableErrorMetrics = $.enableErrorMetrics;
        this.enableIndividualNodeMetrics = $.enableIndividualNodeMetrics;
        this.enableOverallPerfMetrics = $.enableOverallPerfMetrics;
        this.enableRollup = $.enableRollup;
        this.enableServiceEndpointMetrics = $.enableServiceEndpointMetrics;
        this.encryptedPassword = $.encryptedPassword;
        this.forceSave = $.forceSave;
        this.name = $.name;
        this.service = $.service;
        this.serviceRefreshRateInMinutes = $.serviceRefreshRateInMinutes;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudIntegrationAppDynamicsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudIntegrationAppDynamicsState $;

        public Builder() {
            $ = new CloudIntegrationAppDynamicsState();
        }

        public Builder(CloudIntegrationAppDynamicsState defaults) {
            $ = new CloudIntegrationAppDynamicsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalTags A list of point tag key-values to add to every point ingested using this integration.
         * 
         * @return builder
         * 
         */
        public Builder additionalTags(@Nullable Output<Map<String,String>> additionalTags) {
            $.additionalTags = additionalTags;
            return this;
        }

        /**
         * @param additionalTags A list of point tag key-values to add to every point ingested using this integration.
         * 
         * @return builder
         * 
         */
        public Builder additionalTags(Map<String,String> additionalTags) {
            return additionalTags(Output.of(additionalTags));
        }

        /**
         * @param appFilterRegexes List of regular expressions that an application name must match (case-insensitively)
         * in order to be ingested.
         * 
         * @return builder
         * 
         */
        public Builder appFilterRegexes(@Nullable Output<List<String>> appFilterRegexes) {
            $.appFilterRegexes = appFilterRegexes;
            return this;
        }

        /**
         * @param appFilterRegexes List of regular expressions that an application name must match (case-insensitively)
         * in order to be ingested.
         * 
         * @return builder
         * 
         */
        public Builder appFilterRegexes(List<String> appFilterRegexes) {
            return appFilterRegexes(Output.of(appFilterRegexes));
        }

        /**
         * @param appFilterRegexes List of regular expressions that an application name must match (case-insensitively)
         * in order to be ingested.
         * 
         * @return builder
         * 
         */
        public Builder appFilterRegexes(String... appFilterRegexes) {
            return appFilterRegexes(List.of(appFilterRegexes));
        }

        /**
         * @param controllerName Name of the SaaS controller.
         * 
         * @return builder
         * 
         */
        public Builder controllerName(@Nullable Output<String> controllerName) {
            $.controllerName = controllerName;
            return this;
        }

        /**
         * @param controllerName Name of the SaaS controller.
         * 
         * @return builder
         * 
         */
        public Builder controllerName(String controllerName) {
            return controllerName(Output.of(controllerName));
        }

        /**
         * @param enableAppInfraMetrics Boolean flag to control Application Infrastructure metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableAppInfraMetrics(@Nullable Output<Boolean> enableAppInfraMetrics) {
            $.enableAppInfraMetrics = enableAppInfraMetrics;
            return this;
        }

        /**
         * @param enableAppInfraMetrics Boolean flag to control Application Infrastructure metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableAppInfraMetrics(Boolean enableAppInfraMetrics) {
            return enableAppInfraMetrics(Output.of(enableAppInfraMetrics));
        }

        /**
         * @param enableBackendMetrics Boolean flag to control Backend metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableBackendMetrics(@Nullable Output<Boolean> enableBackendMetrics) {
            $.enableBackendMetrics = enableBackendMetrics;
            return this;
        }

        /**
         * @param enableBackendMetrics Boolean flag to control Backend metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableBackendMetrics(Boolean enableBackendMetrics) {
            return enableBackendMetrics(Output.of(enableBackendMetrics));
        }

        /**
         * @param enableBusinessTrxMetrics Boolean flag to control Business Transaction metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableBusinessTrxMetrics(@Nullable Output<Boolean> enableBusinessTrxMetrics) {
            $.enableBusinessTrxMetrics = enableBusinessTrxMetrics;
            return this;
        }

        /**
         * @param enableBusinessTrxMetrics Boolean flag to control Business Transaction metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableBusinessTrxMetrics(Boolean enableBusinessTrxMetrics) {
            return enableBusinessTrxMetrics(Output.of(enableBusinessTrxMetrics));
        }

        /**
         * @param enableErrorMetrics Boolean flag to control Error metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableErrorMetrics(@Nullable Output<Boolean> enableErrorMetrics) {
            $.enableErrorMetrics = enableErrorMetrics;
            return this;
        }

        /**
         * @param enableErrorMetrics Boolean flag to control Error metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableErrorMetrics(Boolean enableErrorMetrics) {
            return enableErrorMetrics(Output.of(enableErrorMetrics));
        }

        /**
         * @param enableIndividualNodeMetrics Boolean flag to control Individual Node metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableIndividualNodeMetrics(@Nullable Output<Boolean> enableIndividualNodeMetrics) {
            $.enableIndividualNodeMetrics = enableIndividualNodeMetrics;
            return this;
        }

        /**
         * @param enableIndividualNodeMetrics Boolean flag to control Individual Node metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableIndividualNodeMetrics(Boolean enableIndividualNodeMetrics) {
            return enableIndividualNodeMetrics(Output.of(enableIndividualNodeMetrics));
        }

        /**
         * @param enableOverallPerfMetrics Boolean flag to control Overall Performance metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableOverallPerfMetrics(@Nullable Output<Boolean> enableOverallPerfMetrics) {
            $.enableOverallPerfMetrics = enableOverallPerfMetrics;
            return this;
        }

        /**
         * @param enableOverallPerfMetrics Boolean flag to control Overall Performance metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableOverallPerfMetrics(Boolean enableOverallPerfMetrics) {
            return enableOverallPerfMetrics(Output.of(enableOverallPerfMetrics));
        }

        /**
         * @param enableRollup Set this to `false` to get separate results for all values within the time range,
         * by default it is `true`.
         * 
         * @return builder
         * 
         */
        public Builder enableRollup(@Nullable Output<Boolean> enableRollup) {
            $.enableRollup = enableRollup;
            return this;
        }

        /**
         * @param enableRollup Set this to `false` to get separate results for all values within the time range,
         * by default it is `true`.
         * 
         * @return builder
         * 
         */
        public Builder enableRollup(Boolean enableRollup) {
            return enableRollup(Output.of(enableRollup));
        }

        /**
         * @param enableServiceEndpointMetrics Boolean flag to control Service End point metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableServiceEndpointMetrics(@Nullable Output<Boolean> enableServiceEndpointMetrics) {
            $.enableServiceEndpointMetrics = enableServiceEndpointMetrics;
            return this;
        }

        /**
         * @param enableServiceEndpointMetrics Boolean flag to control Service End point metric ingestion.
         * 
         * @return builder
         * 
         */
        public Builder enableServiceEndpointMetrics(Boolean enableServiceEndpointMetrics) {
            return enableServiceEndpointMetrics(Output.of(enableServiceEndpointMetrics));
        }

        /**
         * @param encryptedPassword Password for AppDynamics user.
         * 
         * @return builder
         * 
         */
        public Builder encryptedPassword(@Nullable Output<String> encryptedPassword) {
            $.encryptedPassword = encryptedPassword;
            return this;
        }

        /**
         * @param encryptedPassword Password for AppDynamics user.
         * 
         * @return builder
         * 
         */
        public Builder encryptedPassword(String encryptedPassword) {
            return encryptedPassword(Output.of(encryptedPassword));
        }

        /**
         * @param forceSave Forces this resource to save, even if errors are present.
         * 
         * @return builder
         * 
         */
        public Builder forceSave(@Nullable Output<Boolean> forceSave) {
            $.forceSave = forceSave;
            return this;
        }

        /**
         * @param forceSave Forces this resource to save, even if errors are present.
         * 
         * @return builder
         * 
         */
        public Builder forceSave(Boolean forceSave) {
            return forceSave(Output.of(forceSave));
        }

        /**
         * @param name The human-readable name of this integration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The human-readable name of this integration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param service A value denoting which cloud service this service integrates with.
         * 
         * @return builder
         * 
         */
        public Builder service(@Nullable Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service A value denoting which cloud service this service integrates with.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        /**
         * @param serviceRefreshRateInMinutes How often, in minutes, to refresh the service.
         * 
         * @return builder
         * 
         */
        public Builder serviceRefreshRateInMinutes(@Nullable Output<Integer> serviceRefreshRateInMinutes) {
            $.serviceRefreshRateInMinutes = serviceRefreshRateInMinutes;
            return this;
        }

        /**
         * @param serviceRefreshRateInMinutes How often, in minutes, to refresh the service.
         * 
         * @return builder
         * 
         */
        public Builder serviceRefreshRateInMinutes(Integer serviceRefreshRateInMinutes) {
            return serviceRefreshRateInMinutes(Output.of(serviceRefreshRateInMinutes));
        }

        /**
         * @param userName Username is a combination of userName and the account name.
         * 
         * @return builder
         * 
         */
        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName Username is a combination of userName and the account name.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public CloudIntegrationAppDynamicsState build() {
            return $;
        }
    }

}
