// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudIntegrationAzureArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudIntegrationAzureArgs Empty = new CloudIntegrationAzureArgs();

    /**
     * A list of point tag key-values to add to every point ingested using this integration.
     * 
     */
    @Import(name="additionalTags")
    private @Nullable Output<Map<String,String>> additionalTags;

    /**
     * @return A list of point tag key-values to add to every point ingested using this integration.
     * 
     */
    public Optional<Output<Map<String,String>>> additionalTags() {
        return Optional.ofNullable(this.additionalTags);
    }

    /**
     * A list of Azure Activity Log categories.
     * 
     */
    @Import(name="categoryFilters")
    private @Nullable Output<List<String>> categoryFilters;

    /**
     * @return A list of Azure Activity Log categories.
     * 
     */
    public Optional<Output<List<String>>> categoryFilters() {
        return Optional.ofNullable(this.categoryFilters);
    }

    /**
     * Client ID for an Azure service account within your project.
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return Client ID for an Azure service account within your project.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * Client secret for an Azure service account within your project.
     * 
     */
    @Import(name="clientSecret", required=true)
    private Output<String> clientSecret;

    /**
     * @return Client secret for an Azure service account within your project.
     * 
     */
    public Output<String> clientSecret() {
        return this.clientSecret;
    }

    /**
     * Forces this resource to save, even if errors are present.
     * 
     */
    @Import(name="forceSave")
    private @Nullable Output<Boolean> forceSave;

    /**
     * @return Forces this resource to save, even if errors are present.
     * 
     */
    public Optional<Output<Boolean>> forceSave() {
        return Optional.ofNullable(this.forceSave);
    }

    /**
     * A regular expression that a metric name must match (case-insensitively) in order to be ingested.
     * 
     */
    @Import(name="metricFilterRegex")
    private @Nullable Output<String> metricFilterRegex;

    /**
     * @return A regular expression that a metric name must match (case-insensitively) in order to be ingested.
     * 
     */
    public Optional<Output<String>> metricFilterRegex() {
        return Optional.ofNullable(this.metricFilterRegex);
    }

    /**
     * The human-readable name of this integration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The human-readable name of this integration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A list of Azure resource groups from which to pull metrics.
     * 
     */
    @Import(name="resourceGroupFilters")
    private @Nullable Output<List<String>> resourceGroupFilters;

    /**
     * @return A list of Azure resource groups from which to pull metrics.
     * 
     */
    public Optional<Output<List<String>>> resourceGroupFilters() {
        return Optional.ofNullable(this.resourceGroupFilters);
    }

    /**
     * A value denoting which cloud service this service integrates with.
     * 
     */
    @Import(name="service")
    private @Nullable Output<String> service;

    /**
     * @return A value denoting which cloud service this service integrates with.
     * 
     */
    public Optional<Output<String>> service() {
        return Optional.ofNullable(this.service);
    }

    /**
     * How often, in minutes, to refresh the service.
     * 
     */
    @Import(name="serviceRefreshRateInMinutes")
    private @Nullable Output<Integer> serviceRefreshRateInMinutes;

    /**
     * @return How often, in minutes, to refresh the service.
     * 
     */
    public Optional<Output<Integer>> serviceRefreshRateInMinutes() {
        return Optional.ofNullable(this.serviceRefreshRateInMinutes);
    }

    /**
     * Tenant ID for an Azure service account within your project.
     * 
     */
    @Import(name="tenant", required=true)
    private Output<String> tenant;

    /**
     * @return Tenant ID for an Azure service account within your project.
     * 
     */
    public Output<String> tenant() {
        return this.tenant;
    }

    private CloudIntegrationAzureArgs() {}

    private CloudIntegrationAzureArgs(CloudIntegrationAzureArgs $) {
        this.additionalTags = $.additionalTags;
        this.categoryFilters = $.categoryFilters;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.forceSave = $.forceSave;
        this.metricFilterRegex = $.metricFilterRegex;
        this.name = $.name;
        this.resourceGroupFilters = $.resourceGroupFilters;
        this.service = $.service;
        this.serviceRefreshRateInMinutes = $.serviceRefreshRateInMinutes;
        this.tenant = $.tenant;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudIntegrationAzureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudIntegrationAzureArgs $;

        public Builder() {
            $ = new CloudIntegrationAzureArgs();
        }

        public Builder(CloudIntegrationAzureArgs defaults) {
            $ = new CloudIntegrationAzureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalTags A list of point tag key-values to add to every point ingested using this integration.
         * 
         * @return builder
         * 
         */
        public Builder additionalTags(@Nullable Output<Map<String,String>> additionalTags) {
            $.additionalTags = additionalTags;
            return this;
        }

        /**
         * @param additionalTags A list of point tag key-values to add to every point ingested using this integration.
         * 
         * @return builder
         * 
         */
        public Builder additionalTags(Map<String,String> additionalTags) {
            return additionalTags(Output.of(additionalTags));
        }

        /**
         * @param categoryFilters A list of Azure Activity Log categories.
         * 
         * @return builder
         * 
         */
        public Builder categoryFilters(@Nullable Output<List<String>> categoryFilters) {
            $.categoryFilters = categoryFilters;
            return this;
        }

        /**
         * @param categoryFilters A list of Azure Activity Log categories.
         * 
         * @return builder
         * 
         */
        public Builder categoryFilters(List<String> categoryFilters) {
            return categoryFilters(Output.of(categoryFilters));
        }

        /**
         * @param categoryFilters A list of Azure Activity Log categories.
         * 
         * @return builder
         * 
         */
        public Builder categoryFilters(String... categoryFilters) {
            return categoryFilters(List.of(categoryFilters));
        }

        /**
         * @param clientId Client ID for an Azure service account within your project.
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId Client ID for an Azure service account within your project.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret Client secret for an Azure service account within your project.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret Client secret for an Azure service account within your project.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param forceSave Forces this resource to save, even if errors are present.
         * 
         * @return builder
         * 
         */
        public Builder forceSave(@Nullable Output<Boolean> forceSave) {
            $.forceSave = forceSave;
            return this;
        }

        /**
         * @param forceSave Forces this resource to save, even if errors are present.
         * 
         * @return builder
         * 
         */
        public Builder forceSave(Boolean forceSave) {
            return forceSave(Output.of(forceSave));
        }

        /**
         * @param metricFilterRegex A regular expression that a metric name must match (case-insensitively) in order to be ingested.
         * 
         * @return builder
         * 
         */
        public Builder metricFilterRegex(@Nullable Output<String> metricFilterRegex) {
            $.metricFilterRegex = metricFilterRegex;
            return this;
        }

        /**
         * @param metricFilterRegex A regular expression that a metric name must match (case-insensitively) in order to be ingested.
         * 
         * @return builder
         * 
         */
        public Builder metricFilterRegex(String metricFilterRegex) {
            return metricFilterRegex(Output.of(metricFilterRegex));
        }

        /**
         * @param name The human-readable name of this integration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The human-readable name of this integration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupFilters A list of Azure resource groups from which to pull metrics.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupFilters(@Nullable Output<List<String>> resourceGroupFilters) {
            $.resourceGroupFilters = resourceGroupFilters;
            return this;
        }

        /**
         * @param resourceGroupFilters A list of Azure resource groups from which to pull metrics.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupFilters(List<String> resourceGroupFilters) {
            return resourceGroupFilters(Output.of(resourceGroupFilters));
        }

        /**
         * @param resourceGroupFilters A list of Azure resource groups from which to pull metrics.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupFilters(String... resourceGroupFilters) {
            return resourceGroupFilters(List.of(resourceGroupFilters));
        }

        /**
         * @param service A value denoting which cloud service this service integrates with.
         * 
         * @return builder
         * 
         */
        public Builder service(@Nullable Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service A value denoting which cloud service this service integrates with.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        /**
         * @param serviceRefreshRateInMinutes How often, in minutes, to refresh the service.
         * 
         * @return builder
         * 
         */
        public Builder serviceRefreshRateInMinutes(@Nullable Output<Integer> serviceRefreshRateInMinutes) {
            $.serviceRefreshRateInMinutes = serviceRefreshRateInMinutes;
            return this;
        }

        /**
         * @param serviceRefreshRateInMinutes How often, in minutes, to refresh the service.
         * 
         * @return builder
         * 
         */
        public Builder serviceRefreshRateInMinutes(Integer serviceRefreshRateInMinutes) {
            return serviceRefreshRateInMinutes(Output.of(serviceRefreshRateInMinutes));
        }

        /**
         * @param tenant Tenant ID for an Azure service account within your project.
         * 
         * @return builder
         * 
         */
        public Builder tenant(Output<String> tenant) {
            $.tenant = tenant;
            return this;
        }

        /**
         * @param tenant Tenant ID for an Azure service account within your project.
         * 
         * @return builder
         * 
         */
        public Builder tenant(String tenant) {
            return tenant(Output.of(tenant));
        }

        public CloudIntegrationAzureArgs build() {
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("CloudIntegrationAzureArgs", "clientId");
            }
            if ($.clientSecret == null) {
                throw new MissingRequiredPropertyException("CloudIntegrationAzureArgs", "clientSecret");
            }
            if ($.tenant == null) {
                throw new MissingRequiredPropertyException("CloudIntegrationAzureArgs", "tenant");
            }
            return $;
        }
    }

}
