// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAlertPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAlertPlainArgs Empty = new GetAlertPlainArgs();

    /**
     * The ID associated with the alert data to be fetched.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The ID associated with the alert data to be fetched.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * A comma-separated list of the email addresses or integration endpoints (such as PagerDuty or webhook) to notify when the alert status changes. Multiple target types can be in the list.
     * 
     */
    @Import(name="targets")
    private @Nullable Map<String,String> targets;

    /**
     * @return A comma-separated list of the email addresses or integration endpoints (such as PagerDuty or webhook) to notify when the alert status changes. Multiple target types can be in the list.
     * 
     */
    public Optional<Map<String,String>> targets() {
        return Optional.ofNullable(this.targets);
    }

    private GetAlertPlainArgs() {}

    private GetAlertPlainArgs(GetAlertPlainArgs $) {
        this.id = $.id;
        this.targets = $.targets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAlertPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAlertPlainArgs $;

        public Builder() {
            $ = new GetAlertPlainArgs();
        }

        public Builder(GetAlertPlainArgs defaults) {
            $ = new GetAlertPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID associated with the alert data to be fetched.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param targets A comma-separated list of the email addresses or integration endpoints (such as PagerDuty or webhook) to notify when the alert status changes. Multiple target types can be in the list.
         * 
         * @return builder
         * 
         */
        public Builder targets(@Nullable Map<String,String> targets) {
            $.targets = targets;
            return this;
        }

        public GetAlertPlainArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
