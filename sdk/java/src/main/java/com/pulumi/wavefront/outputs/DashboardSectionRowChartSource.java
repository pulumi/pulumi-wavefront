// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardSectionRowChartSource {
    /**
     * @return Whether the source is disabled.
     * 
     */
    private @Nullable Boolean disabled;
    /**
     * @return Name of the source.
     * 
     */
    private String name;
    /**
     * @return Query expression to plot on the chart.
     * 
     */
    private String query;
    /**
     * @return Whether or not this source line should have the query builder enabled.
     * 
     */
    private @Nullable Boolean queryBuilderEnabled;
    /**
     * @return For scatter plots, does this query source the X-axis or the Y-axis, `X`, or `Y`.
     * 
     */
    private @Nullable String scatterPlotSource;
    /**
     * @return A description for the purpose of this source.
     * 
     */
    private @Nullable String sourceDescription;

    private DashboardSectionRowChartSource() {}
    /**
     * @return Whether the source is disabled.
     * 
     */
    public Optional<Boolean> disabled() {
        return Optional.ofNullable(this.disabled);
    }
    /**
     * @return Name of the source.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Query expression to plot on the chart.
     * 
     */
    public String query() {
        return this.query;
    }
    /**
     * @return Whether or not this source line should have the query builder enabled.
     * 
     */
    public Optional<Boolean> queryBuilderEnabled() {
        return Optional.ofNullable(this.queryBuilderEnabled);
    }
    /**
     * @return For scatter plots, does this query source the X-axis or the Y-axis, `X`, or `Y`.
     * 
     */
    public Optional<String> scatterPlotSource() {
        return Optional.ofNullable(this.scatterPlotSource);
    }
    /**
     * @return A description for the purpose of this source.
     * 
     */
    public Optional<String> sourceDescription() {
        return Optional.ofNullable(this.sourceDescription);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardSectionRowChartSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean disabled;
        private String name;
        private String query;
        private @Nullable Boolean queryBuilderEnabled;
        private @Nullable String scatterPlotSource;
        private @Nullable String sourceDescription;
        public Builder() {}
        public Builder(DashboardSectionRowChartSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disabled = defaults.disabled;
    	      this.name = defaults.name;
    	      this.query = defaults.query;
    	      this.queryBuilderEnabled = defaults.queryBuilderEnabled;
    	      this.scatterPlotSource = defaults.scatterPlotSource;
    	      this.sourceDescription = defaults.sourceDescription;
        }

        @CustomType.Setter
        public Builder disabled(@Nullable Boolean disabled) {
            this.disabled = disabled;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            this.query = Objects.requireNonNull(query);
            return this;
        }
        @CustomType.Setter
        public Builder queryBuilderEnabled(@Nullable Boolean queryBuilderEnabled) {
            this.queryBuilderEnabled = queryBuilderEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder scatterPlotSource(@Nullable String scatterPlotSource) {
            this.scatterPlotSource = scatterPlotSource;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDescription(@Nullable String sourceDescription) {
            this.sourceDescription = sourceDescription;
            return this;
        }
        public DashboardSectionRowChartSource build() {
            final var o = new DashboardSectionRowChartSource();
            o.disabled = disabled;
            o.name = name;
            o.query = query;
            o.queryBuilderEnabled = queryBuilderEnabled;
            o.scatterPlotSource = scatterPlotSource;
            o.sourceDescription = sourceDescription;
            return o;
        }
    }
}
