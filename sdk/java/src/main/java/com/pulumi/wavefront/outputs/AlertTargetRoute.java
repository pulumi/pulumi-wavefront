// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class AlertTargetRoute {
    private @Nullable Map<String,String> filter;
    /**
     * @return The notification method used for notification target. One of `WEBHOOK`, `EMAIL`, `PAGERDUTY`.
     * 
     */
    private String method;
    private String target;

    private AlertTargetRoute() {}
    public Map<String,String> filter() {
        return this.filter == null ? Map.of() : this.filter;
    }
    /**
     * @return The notification method used for notification target. One of `WEBHOOK`, `EMAIL`, `PAGERDUTY`.
     * 
     */
    public String method() {
        return this.method;
    }
    public String target() {
        return this.target;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AlertTargetRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> filter;
        private String method;
        private String target;
        public Builder() {}
        public Builder(AlertTargetRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.method = defaults.method;
    	      this.target = defaults.target;
        }

        @CustomType.Setter
        public Builder filter(@Nullable Map<String,String> filter) {
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder method(String method) {
            this.method = Objects.requireNonNull(method);
            return this;
        }
        @CustomType.Setter
        public Builder target(String target) {
            this.target = Objects.requireNonNull(target);
            return this;
        }
        public AlertTargetRoute build() {
            final var o = new AlertTargetRoute();
            o.filter = filter;
            o.method = method;
            o.target = target;
            return o;
        }
    }
}
