// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.wavefront.outputs.GetDerivedMetricsDerivedMetric;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDerivedMetricsResult {
    /**
     * @return List of all derived metrics in Wavefront. For each derived metric you will see a list of attributes.
     * 
     */
    private List<GetDerivedMetricsDerivedMetric> derivedMetrics;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Integer limit;
    private @Nullable Integer offset;

    private GetDerivedMetricsResult() {}
    /**
     * @return List of all derived metrics in Wavefront. For each derived metric you will see a list of attributes.
     * 
     */
    public List<GetDerivedMetricsDerivedMetric> derivedMetrics() {
        return this.derivedMetrics;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Integer> limit() {
        return Optional.ofNullable(this.limit);
    }
    public Optional<Integer> offset() {
        return Optional.ofNullable(this.offset);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDerivedMetricsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDerivedMetricsDerivedMetric> derivedMetrics;
        private String id;
        private @Nullable Integer limit;
        private @Nullable Integer offset;
        public Builder() {}
        public Builder(GetDerivedMetricsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.derivedMetrics = defaults.derivedMetrics;
    	      this.id = defaults.id;
    	      this.limit = defaults.limit;
    	      this.offset = defaults.offset;
        }

        @CustomType.Setter
        public Builder derivedMetrics(List<GetDerivedMetricsDerivedMetric> derivedMetrics) {
            if (derivedMetrics == null) {
              throw new MissingRequiredPropertyException("GetDerivedMetricsResult", "derivedMetrics");
            }
            this.derivedMetrics = derivedMetrics;
            return this;
        }
        public Builder derivedMetrics(GetDerivedMetricsDerivedMetric... derivedMetrics) {
            return derivedMetrics(List.of(derivedMetrics));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDerivedMetricsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder limit(@Nullable Integer limit) {

            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder offset(@Nullable Integer offset) {

            this.offset = offset;
            return this;
        }
        public GetDerivedMetricsResult build() {
            final var _resultValue = new GetDerivedMetricsResult();
            _resultValue.derivedMetrics = derivedMetrics;
            _resultValue.id = id;
            _resultValue.limit = limit;
            _resultValue.offset = offset;
            return _resultValue;
        }
    }
}
