// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.wavefront.outputs.GetDashboardSectionRow;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDashboardSection {
    /**
     * @return The name of the parameters.
     * 
     */
    private String name;
    private List<GetDashboardSectionRow> rows;

    private GetDashboardSection() {}
    /**
     * @return The name of the parameters.
     * 
     */
    public String name() {
        return this.name;
    }
    public List<GetDashboardSectionRow> rows() {
        return this.rows;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDashboardSection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private List<GetDashboardSectionRow> rows;
        public Builder() {}
        public Builder(GetDashboardSection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.rows = defaults.rows;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDashboardSection", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder rows(List<GetDashboardSectionRow> rows) {
            if (rows == null) {
              throw new MissingRequiredPropertyException("GetDashboardSection", "rows");
            }
            this.rows = rows;
            return this;
        }
        public Builder rows(GetDashboardSectionRow... rows) {
            return rows(List.of(rows));
        }
        public GetDashboardSection build() {
            final var _resultValue = new GetDashboardSection();
            _resultValue.name = name;
            _resultValue.rows = rows;
            return _resultValue;
        }
    }
}
