// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.wavefront.outputs.GetExternalLinksExternalLink;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExternalLinksResult {
    /**
     * @return List of all external links in Wavefront. For each external link you will see a list of attributes.
     * 
     */
    private List<GetExternalLinksExternalLink> externalLinks;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Integer limit;
    private @Nullable Integer offset;

    private GetExternalLinksResult() {}
    /**
     * @return List of all external links in Wavefront. For each external link you will see a list of attributes.
     * 
     */
    public List<GetExternalLinksExternalLink> externalLinks() {
        return this.externalLinks;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Integer> limit() {
        return Optional.ofNullable(this.limit);
    }
    public Optional<Integer> offset() {
        return Optional.ofNullable(this.offset);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalLinksResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetExternalLinksExternalLink> externalLinks;
        private String id;
        private @Nullable Integer limit;
        private @Nullable Integer offset;
        public Builder() {}
        public Builder(GetExternalLinksResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.externalLinks = defaults.externalLinks;
    	      this.id = defaults.id;
    	      this.limit = defaults.limit;
    	      this.offset = defaults.offset;
        }

        @CustomType.Setter
        public Builder externalLinks(List<GetExternalLinksExternalLink> externalLinks) {
            if (externalLinks == null) {
              throw new MissingRequiredPropertyException("GetExternalLinksResult", "externalLinks");
            }
            this.externalLinks = externalLinks;
            return this;
        }
        public Builder externalLinks(GetExternalLinksExternalLink... externalLinks) {
            return externalLinks(List.of(externalLinks));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetExternalLinksResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder limit(@Nullable Integer limit) {

            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder offset(@Nullable Integer offset) {

            this.offset = offset;
            return this;
        }
        public GetExternalLinksResult build() {
            final var _resultValue = new GetExternalLinksResult();
            _resultValue.externalLinks = externalLinks;
            _resultValue.id = id;
            _resultValue.limit = limit;
            _resultValue.offset = offset;
            return _resultValue;
        }
    }
}
