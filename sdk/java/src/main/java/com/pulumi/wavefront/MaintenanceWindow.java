// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.wavefront.MaintenanceWindowArgs;
import com.pulumi.wavefront.Utilities;
import com.pulumi.wavefront.inputs.MaintenanceWindowState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Wavefront Maintenance Window Resource. This allows maintenance windows to be created, updated, and deleted.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.wavefront.MaintenanceWindow;
 * import com.pulumi.wavefront.MaintenanceWindowArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basic = new MaintenanceWindow("basic", MaintenanceWindowArgs.builder()
 *             .reason("Routine maintenance for 2020")
 *             .title("Routine maintenance")
 *             .startTimeInSeconds(1600123456)
 *             .endTimeInSeconds(1601123456)
 *             .relevantHostNames(            
 *                 "my_hostname",
 *                 "my_other_hostname")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Maintenance windows can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import wavefront:index/maintenanceWindow:MaintenanceWindow basic 1600383357095
 * ```
 * 
 */
@ResourceType(type="wavefront:index/maintenanceWindow:MaintenanceWindow")
public class MaintenanceWindow extends com.pulumi.resources.CustomResource {
    /**
     * end time in seconds after 1 Jan 1970 GMT.
     * 
     */
    @Export(name="endTimeInSeconds", refs={Integer.class}, tree="[0]")
    private Output<Integer> endTimeInSeconds;

    /**
     * @return end time in seconds after 1 Jan 1970 GMT.
     * 
     */
    public Output<Integer> endTimeInSeconds() {
        return this.endTimeInSeconds;
    }
    /**
     * If `true`, a source/host must be in `relevant_host_names`
     * and have tags matching the specification formed by `relevant_host_tags` and `relevant_host_tags_anded` in
     * order for this maintenance window to apply. If `false`, a source/host must either be in `relevant_host_names`
     * or match `relevant_host_tags` and `relevant_host_tags_anded`. Default: `false`.
     * 
     */
    @Export(name="hostTagGroupHostNamesGroupAnded", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> hostTagGroupHostNamesGroupAnded;

    /**
     * @return If `true`, a source/host must be in `relevant_host_names`
     * and have tags matching the specification formed by `relevant_host_tags` and `relevant_host_tags_anded` in
     * order for this maintenance window to apply. If `false`, a source/host must either be in `relevant_host_names`
     * or match `relevant_host_tags` and `relevant_host_tags_anded`. Default: `false`.
     * 
     */
    public Output<Optional<Boolean>> hostTagGroupHostNamesGroupAnded() {
        return Codegen.optional(this.hostTagGroupHostNamesGroupAnded);
    }
    /**
     * The reason for the maintenance window.
     * 
     */
    @Export(name="reason", refs={String.class}, tree="[0]")
    private Output<String> reason;

    /**
     * @return The reason for the maintenance window.
     * 
     */
    public Output<String> reason() {
        return this.reason;
    }
    /**
     * List of alert tags whose matching alerts will be put into maintenance because
     * of this maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or `relevant_host_names`
     * is required.
     * 
     */
    @Export(name="relevantCustomerTags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> relevantCustomerTags;

    /**
     * @return List of alert tags whose matching alerts will be put into maintenance because
     * of this maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or `relevant_host_names`
     * is required.
     * 
     */
    public Output<Optional<List<String>>> relevantCustomerTags() {
        return Codegen.optional(this.relevantCustomerTags);
    }
    /**
     * List of source/host names that will be put into maintenance because of this
     * maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or `relevant_host_names`
     * is required.
     * 
     */
    @Export(name="relevantHostNames", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> relevantHostNames;

    /**
     * @return List of source/host names that will be put into maintenance because of this
     * maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or `relevant_host_names`
     * is required.
     * 
     */
    public Output<Optional<List<String>>> relevantHostNames() {
        return Codegen.optional(this.relevantHostNames);
    }
    /**
     * List of source/host tags whose matching sources/hosts will be put into maintenance
     * because of this maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or
     * `relevant_host_names` is required.
     * 
     */
    @Export(name="relevantHostTags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> relevantHostTags;

    /**
     * @return List of source/host tags whose matching sources/hosts will be put into maintenance
     * because of this maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or
     * `relevant_host_names` is required.
     * 
     */
    public Output<Optional<List<String>>> relevantHostTags() {
        return Codegen.optional(this.relevantHostTags);
    }
    /**
     * Whether to AND source/host tags listed in `relevant_host_tags`.
     * If `true`, a source/host must contain all tags in order for the maintenance window to apply. If `false`,
     * the tags are OR&#39;ed, and a source/host must contain one of the tags. Default: `false`.
     * 
     */
    @Export(name="relevantHostTagsAnded", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> relevantHostTagsAnded;

    /**
     * @return Whether to AND source/host tags listed in `relevant_host_tags`.
     * If `true`, a source/host must contain all tags in order for the maintenance window to apply. If `false`,
     * the tags are OR&#39;ed, and a source/host must contain one of the tags. Default: `false`.
     * 
     */
    public Output<Optional<Boolean>> relevantHostTagsAnded() {
        return Codegen.optional(this.relevantHostTagsAnded);
    }
    /**
     * start time in seconds after 1 Jan 1970 GMT.
     * 
     */
    @Export(name="startTimeInSeconds", refs={Integer.class}, tree="[0]")
    private Output<Integer> startTimeInSeconds;

    /**
     * @return start time in seconds after 1 Jan 1970 GMT.
     * 
     */
    public Output<Integer> startTimeInSeconds() {
        return this.startTimeInSeconds;
    }
    /**
     * The title of the maintenance window.
     * 
     */
    @Export(name="title", refs={String.class}, tree="[0]")
    private Output<String> title;

    /**
     * @return The title of the maintenance window.
     * 
     */
    public Output<String> title() {
        return this.title;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MaintenanceWindow(String name) {
        this(name, MaintenanceWindowArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MaintenanceWindow(String name, MaintenanceWindowArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MaintenanceWindow(String name, MaintenanceWindowArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/maintenanceWindow:MaintenanceWindow", name, args == null ? MaintenanceWindowArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MaintenanceWindow(String name, Output<String> id, @Nullable MaintenanceWindowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/maintenanceWindow:MaintenanceWindow", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MaintenanceWindow get(String name, Output<String> id, @Nullable MaintenanceWindowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MaintenanceWindow(name, id, state, options);
    }
}
