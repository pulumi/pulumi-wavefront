// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.wavefront.outputs.MetricsPolicyPolicyRuleTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class MetricsPolicyPolicyRule {
    /**
     * @return Valid options are `ALLOW` and `BLOCK`.
     * 
     */
    private String accessType;
    /**
     * @return List of account ids to apply Metrics Policy to. Must have at least one associated account_id, user_group_id, or role_id.
     * 
     */
    private @Nullable List<String> accountIds;
    /**
     * @return A detailed description of the Metrics Policy. The description is visible only when you edit the rule.
     * 
     */
    private String description;
    /**
     * @return The unique name identifier for a Metrics Policy. The name is visible on the Metrics Security Policy page.
     * 
     */
    private String name;
    /**
     * @return List of prefixes to match metrics on. You can specify the full metric name or use a wildcard character in metric names, sources, or point tags. The wildcard character alone (*) means all metrics.
     * 
     */
    private List<String> prefixes;
    /**
     * @return -(Optional) List of role ids to apply Metrics Policy to. Must have at least one associated account_id, user_group_id, or role_id.
     * 
     */
    private @Nullable List<String> roleIds;
    /**
     * @return List of Key/Value tags to select target metrics for policy.
     * 
     */
    private @Nullable List<MetricsPolicyPolicyRuleTag> tags;
    /**
     * @return Bool where `true` require all tags are met by selected metrics, else `false` select metrics that match any give tag.
     * 
     */
    private Boolean tagsAnded;
    /**
     * @return List of user group ids to apply Metrics Policy to. Must have at least one associated account_id, user_group_id, or role_id.
     * 
     */
    private @Nullable List<String> userGroupIds;

    private MetricsPolicyPolicyRule() {}
    /**
     * @return Valid options are `ALLOW` and `BLOCK`.
     * 
     */
    public String accessType() {
        return this.accessType;
    }
    /**
     * @return List of account ids to apply Metrics Policy to. Must have at least one associated account_id, user_group_id, or role_id.
     * 
     */
    public List<String> accountIds() {
        return this.accountIds == null ? List.of() : this.accountIds;
    }
    /**
     * @return A detailed description of the Metrics Policy. The description is visible only when you edit the rule.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The unique name identifier for a Metrics Policy. The name is visible on the Metrics Security Policy page.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of prefixes to match metrics on. You can specify the full metric name or use a wildcard character in metric names, sources, or point tags. The wildcard character alone (*) means all metrics.
     * 
     */
    public List<String> prefixes() {
        return this.prefixes;
    }
    /**
     * @return -(Optional) List of role ids to apply Metrics Policy to. Must have at least one associated account_id, user_group_id, or role_id.
     * 
     */
    public List<String> roleIds() {
        return this.roleIds == null ? List.of() : this.roleIds;
    }
    /**
     * @return List of Key/Value tags to select target metrics for policy.
     * 
     */
    public List<MetricsPolicyPolicyRuleTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Bool where `true` require all tags are met by selected metrics, else `false` select metrics that match any give tag.
     * 
     */
    public Boolean tagsAnded() {
        return this.tagsAnded;
    }
    /**
     * @return List of user group ids to apply Metrics Policy to. Must have at least one associated account_id, user_group_id, or role_id.
     * 
     */
    public List<String> userGroupIds() {
        return this.userGroupIds == null ? List.of() : this.userGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricsPolicyPolicyRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessType;
        private @Nullable List<String> accountIds;
        private String description;
        private String name;
        private List<String> prefixes;
        private @Nullable List<String> roleIds;
        private @Nullable List<MetricsPolicyPolicyRuleTag> tags;
        private Boolean tagsAnded;
        private @Nullable List<String> userGroupIds;
        public Builder() {}
        public Builder(MetricsPolicyPolicyRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessType = defaults.accessType;
    	      this.accountIds = defaults.accountIds;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.prefixes = defaults.prefixes;
    	      this.roleIds = defaults.roleIds;
    	      this.tags = defaults.tags;
    	      this.tagsAnded = defaults.tagsAnded;
    	      this.userGroupIds = defaults.userGroupIds;
        }

        @CustomType.Setter
        public Builder accessType(String accessType) {
            this.accessType = Objects.requireNonNull(accessType);
            return this;
        }
        @CustomType.Setter
        public Builder accountIds(@Nullable List<String> accountIds) {
            this.accountIds = accountIds;
            return this;
        }
        public Builder accountIds(String... accountIds) {
            return accountIds(List.of(accountIds));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder prefixes(List<String> prefixes) {
            this.prefixes = Objects.requireNonNull(prefixes);
            return this;
        }
        public Builder prefixes(String... prefixes) {
            return prefixes(List.of(prefixes));
        }
        @CustomType.Setter
        public Builder roleIds(@Nullable List<String> roleIds) {
            this.roleIds = roleIds;
            return this;
        }
        public Builder roleIds(String... roleIds) {
            return roleIds(List.of(roleIds));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<MetricsPolicyPolicyRuleTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(MetricsPolicyPolicyRuleTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tagsAnded(Boolean tagsAnded) {
            this.tagsAnded = Objects.requireNonNull(tagsAnded);
            return this;
        }
        @CustomType.Setter
        public Builder userGroupIds(@Nullable List<String> userGroupIds) {
            this.userGroupIds = userGroupIds;
            return this;
        }
        public Builder userGroupIds(String... userGroupIds) {
            return userGroupIds(List.of(userGroupIds));
        }
        public MetricsPolicyPolicyRule build() {
            final var o = new MetricsPolicyPolicyRule();
            o.accessType = accessType;
            o.accountIds = accountIds;
            o.description = description;
            o.name = name;
            o.prefixes = prefixes;
            o.roleIds = roleIds;
            o.tags = tags;
            o.tagsAnded = tagsAnded;
            o.userGroupIds = userGroupIds;
            return o;
        }
    }
}
