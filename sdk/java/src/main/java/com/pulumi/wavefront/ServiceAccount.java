// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.wavefront.ServiceAccountArgs;
import com.pulumi.wavefront.Utilities;
import com.pulumi.wavefront.inputs.ServiceAccountState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Wavefront Service Account Resource. This allows service accounts to be created, updated, and deleted.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.wavefront.ServiceAccount;
 * import com.pulumi.wavefront.ServiceAccountArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basic = new ServiceAccount("basic", ServiceAccountArgs.builder()
 *             .identifier("sa::tftesting")
 *             .active(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Service accounts can be imported by using `identifier`, e.g.:
 * 
 * ```sh
 * $ pulumi import wavefront:index/serviceAccount:ServiceAccount basic sa::tftesting
 * ```
 * 
 */
@ResourceType(type="wavefront:index/serviceAccount:ServiceAccount")
public class ServiceAccount extends com.pulumi.resources.CustomResource {
    /**
     * Whether or not the service account is active.
     * 
     */
    @Export(name="active", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> active;

    /**
     * @return Whether or not the service account is active.
     * 
     */
    public Output<Optional<Boolean>> active() {
        return Codegen.optional(this.active);
    }
    /**
     * The description of the service account.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the service account.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The unique identifier of the service account to create. Must have the prefix `sa::`.
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return The unique identifier of the service account to create. Must have the prefix `sa::`.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * ID of ingestion policy.
     * 
     */
    @Export(name="ingestionPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ingestionPolicy;

    /**
     * @return ID of ingestion policy.
     * 
     */
    public Output<Optional<String>> ingestionPolicy() {
        return Codegen.optional(this.ingestionPolicy);
    }
    /**
     * List of permission to grant to this service account. Valid options are
     * `agentManagement`, `alertsManagement`, `dashboardManagement`, `embeddedCharts`, `eventsManagement`, `externalLinksManagement`,
     * `hostTagManagement`, `metricsManagement`, and `userManagement`.
     * 
     */
    @Export(name="permissions", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> permissions;

    /**
     * @return List of permission to grant to this service account. Valid options are
     * `agentManagement`, `alertsManagement`, `dashboardManagement`, `embeddedCharts`, `eventsManagement`, `externalLinksManagement`,
     * `hostTagManagement`, `metricsManagement`, and `userManagement`.
     * 
     */
    public Output<List<String>> permissions() {
        return this.permissions;
    }
    /**
     * List of user groups for this service account.
     * 
     */
    @Export(name="userGroups", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> userGroups;

    /**
     * @return List of user groups for this service account.
     * 
     */
    public Output<List<String>> userGroups() {
        return this.userGroups;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceAccount(java.lang.String name) {
        this(name, ServiceAccountArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceAccount(java.lang.String name, ServiceAccountArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceAccount(java.lang.String name, ServiceAccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/serviceAccount:ServiceAccount", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServiceAccount(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/serviceAccount:ServiceAccount", name, state, makeResourceOptions(options, id), false);
    }

    private static ServiceAccountArgs makeArgs(ServiceAccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServiceAccountArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceAccount get(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceAccount(name, id, state, options);
    }
}
