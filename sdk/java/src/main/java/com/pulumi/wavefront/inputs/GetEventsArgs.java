// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEventsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEventsArgs Empty = new GetEventsArgs();

    /**
     * The earliest start time in epoch milliseconds.
     * 
     */
    @Import(name="earliestStartTimeEpochMillis", required=true)
    private Output<Integer> earliestStartTimeEpochMillis;

    /**
     * @return The earliest start time in epoch milliseconds.
     * 
     */
    public Output<Integer> earliestStartTimeEpochMillis() {
        return this.earliestStartTimeEpochMillis;
    }

    /**
     * The latest start time in epoch milliseconds.
     * 
     */
    @Import(name="latestStartTimeEpochMillis", required=true)
    private Output<Integer> latestStartTimeEpochMillis;

    /**
     * @return The latest start time in epoch milliseconds.
     * 
     */
    public Output<Integer> latestStartTimeEpochMillis() {
        return this.latestStartTimeEpochMillis;
    }

    /**
     * Limit is the maximum number of results to be returned. Defaults to 100.
     * 
     */
    @Import(name="limit")
    private @Nullable Output<Integer> limit;

    /**
     * @return Limit is the maximum number of results to be returned. Defaults to 100.
     * 
     */
    public Optional<Output<Integer>> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * Offset is the offset from the first result to be returned. Defaults to 0.
     * 
     */
    @Import(name="offset")
    private @Nullable Output<Integer> offset;

    /**
     * @return Offset is the offset from the first result to be returned. Defaults to 0.
     * 
     */
    public Optional<Output<Integer>> offset() {
        return Optional.ofNullable(this.offset);
    }

    private GetEventsArgs() {}

    private GetEventsArgs(GetEventsArgs $) {
        this.earliestStartTimeEpochMillis = $.earliestStartTimeEpochMillis;
        this.latestStartTimeEpochMillis = $.latestStartTimeEpochMillis;
        this.limit = $.limit;
        this.offset = $.offset;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEventsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEventsArgs $;

        public Builder() {
            $ = new GetEventsArgs();
        }

        public Builder(GetEventsArgs defaults) {
            $ = new GetEventsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param earliestStartTimeEpochMillis The earliest start time in epoch milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder earliestStartTimeEpochMillis(Output<Integer> earliestStartTimeEpochMillis) {
            $.earliestStartTimeEpochMillis = earliestStartTimeEpochMillis;
            return this;
        }

        /**
         * @param earliestStartTimeEpochMillis The earliest start time in epoch milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder earliestStartTimeEpochMillis(Integer earliestStartTimeEpochMillis) {
            return earliestStartTimeEpochMillis(Output.of(earliestStartTimeEpochMillis));
        }

        /**
         * @param latestStartTimeEpochMillis The latest start time in epoch milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder latestStartTimeEpochMillis(Output<Integer> latestStartTimeEpochMillis) {
            $.latestStartTimeEpochMillis = latestStartTimeEpochMillis;
            return this;
        }

        /**
         * @param latestStartTimeEpochMillis The latest start time in epoch milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder latestStartTimeEpochMillis(Integer latestStartTimeEpochMillis) {
            return latestStartTimeEpochMillis(Output.of(latestStartTimeEpochMillis));
        }

        /**
         * @param limit Limit is the maximum number of results to be returned. Defaults to 100.
         * 
         * @return builder
         * 
         */
        public Builder limit(@Nullable Output<Integer> limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param limit Limit is the maximum number of results to be returned. Defaults to 100.
         * 
         * @return builder
         * 
         */
        public Builder limit(Integer limit) {
            return limit(Output.of(limit));
        }

        /**
         * @param offset Offset is the offset from the first result to be returned. Defaults to 0.
         * 
         * @return builder
         * 
         */
        public Builder offset(@Nullable Output<Integer> offset) {
            $.offset = offset;
            return this;
        }

        /**
         * @param offset Offset is the offset from the first result to be returned. Defaults to 0.
         * 
         * @return builder
         * 
         */
        public Builder offset(Integer offset) {
            return offset(Output.of(offset));
        }

        public GetEventsArgs build() {
            $.earliestStartTimeEpochMillis = Objects.requireNonNull($.earliestStartTimeEpochMillis, "expected parameter 'earliestStartTimeEpochMillis' to be non-null");
            $.latestStartTimeEpochMillis = Objects.requireNonNull($.latestStartTimeEpochMillis, "expected parameter 'latestStartTimeEpochMillis' to be non-null");
            return $;
        }
    }

}
