// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.wavefront.outputs.GetDashboardsDashboardSectionRowChart;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDashboardsDashboardSectionRow {
    private List<GetDashboardsDashboardSectionRowChart> charts;
    private Integer heightFactor;
    /**
     * @return The name of the parameters.
     * 
     */
    private String name;

    private GetDashboardsDashboardSectionRow() {}
    public List<GetDashboardsDashboardSectionRowChart> charts() {
        return this.charts;
    }
    public Integer heightFactor() {
        return this.heightFactor;
    }
    /**
     * @return The name of the parameters.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDashboardsDashboardSectionRow defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDashboardsDashboardSectionRowChart> charts;
        private Integer heightFactor;
        private String name;
        public Builder() {}
        public Builder(GetDashboardsDashboardSectionRow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.charts = defaults.charts;
    	      this.heightFactor = defaults.heightFactor;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder charts(List<GetDashboardsDashboardSectionRowChart> charts) {
            if (charts == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboardSectionRow", "charts");
            }
            this.charts = charts;
            return this;
        }
        public Builder charts(GetDashboardsDashboardSectionRowChart... charts) {
            return charts(List.of(charts));
        }
        @CustomType.Setter
        public Builder heightFactor(Integer heightFactor) {
            if (heightFactor == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboardSectionRow", "heightFactor");
            }
            this.heightFactor = heightFactor;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboardSectionRow", "name");
            }
            this.name = name;
            return this;
        }
        public GetDashboardsDashboardSectionRow build() {
            final var _resultValue = new GetDashboardsDashboardSectionRow();
            _resultValue.charts = charts;
            _resultValue.heightFactor = heightFactor;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
