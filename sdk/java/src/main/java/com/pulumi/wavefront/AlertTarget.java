// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.wavefront.AlertTargetArgs;
import com.pulumi.wavefront.Utilities;
import com.pulumi.wavefront.inputs.AlertTargetState;
import com.pulumi.wavefront.outputs.AlertTargetRoute;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a wavefront Alert Target resource. This allows alert targets to created, updated, and deleted.
 * 
 * ## Example Usage
 * ## Attributes Reference
 * 
 * * `target_id` - The target ID prefixed with `target:` for interpolating into a Wavefront Alert.
 * 
 * ### Route
 * 
 * The `route` mapping supports the following:
 * 
 * * `method` - (Required)  The notification method used for notification target. One of `WEBHOOK`, `EMAIL`, `PAGERDUTY`.
 * * `target` - (Required) The endpoint for the alert route. `EMAIL`: email address. `PAGERDUTY`: PagerDuty routing
 *   key. `WEBHOOK`: URL endpoint.
 * * `filter` - (Required) String that filters the route. Space delimited.  Currently only allows a single key value pair.
 *   (e.g. `env prod`)
 * 
 * ### Example
 * 
 * ## Import
 * 
 * Alert Targets can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import wavefront:index/alertTarget:AlertTarget alert_target abcdEFGhijKLMNO
 * ```
 * 
 */
@ResourceType(type="wavefront:index/alertTarget:AlertTarget")
public class AlertTarget extends com.pulumi.resources.CustomResource {
    /**
     * The value of the `Content-Type` header of the webhook.
     * 
     */
    @Export(name="contentType", type=String.class, parameters={})
    private Output</* @Nullable */ String> contentType;

    /**
     * @return The value of the `Content-Type` header of the webhook.
     * 
     */
    public Output<Optional<String>> contentType() {
        return Codegen.optional(this.contentType);
    }
    /**
     * A `string-&gt;string` map specifying the custom HTTP header key/value pairs that will be
     * sent in the requests with a method of `WEBHOOK`.
     * 
     */
    @Export(name="customHeaders", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> customHeaders;

    /**
     * @return A `string-&gt;string` map specifying the custom HTTP header key/value pairs that will be
     * sent in the requests with a method of `WEBHOOK`.
     * 
     */
    public Output<Optional<Map<String,String>>> customHeaders() {
        return Codegen.optional(this.customHeaders);
    }
    /**
     * Description describing this alert target.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return Description describing this alert target.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The subject title of an email notification target.
     * 
     */
    @Export(name="emailSubject", type=String.class, parameters={})
    private Output</* @Nullable */ String> emailSubject;

    /**
     * @return The subject title of an email notification target.
     * 
     */
    public Output<Optional<String>> emailSubject() {
        return Codegen.optional(this.emailSubject);
    }
    /**
     * Determine whether the email alert content is sent as HTML or text.
     * 
     */
    @Export(name="isHtmlContent", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isHtmlContent;

    /**
     * @return Determine whether the email alert content is sent as HTML or text.
     * 
     */
    public Output<Optional<Boolean>> isHtmlContent() {
        return Codegen.optional(this.isHtmlContent);
    }
    /**
     * The notification method used for notification target. One of `WEBHOOK`, `EMAIL`, `PAGERDUTY`.
     * 
     */
    @Export(name="method", type=String.class, parameters={})
    private Output</* @Nullable */ String> method;

    /**
     * @return The notification method used for notification target. One of `WEBHOOK`, `EMAIL`, `PAGERDUTY`.
     * 
     */
    public Output<Optional<String>> method() {
        return Codegen.optional(this.method);
    }
    /**
     * The name of the alert target as it is displayed in Wavefront.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the alert target as it is displayed in Wavefront.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The end point for the notification Target.  `EMAIL`: email address. `PAGERDUTY`: PagerDuty
     * routing key. `WEBHOOK`: URL endpoint.
     * 
     */
    @Export(name="recipient", type=String.class, parameters={})
    private Output<String> recipient;

    /**
     * @return The end point for the notification Target.  `EMAIL`: email address. `PAGERDUTY`: PagerDuty
     * routing key. `WEBHOOK`: URL endpoint.
     * 
     */
    public Output<String> recipient() {
        return this.recipient;
    }
    /**
     * List of routing targets that this alert target will notify. See Route
     * 
     */
    @Export(name="routes", type=List.class, parameters={AlertTargetRoute.class})
    private Output</* @Nullable */ List<AlertTargetRoute>> routes;

    /**
     * @return List of routing targets that this alert target will notify. See Route
     * 
     */
    public Output<Optional<List<AlertTargetRoute>>> routes() {
        return Codegen.optional(this.routes);
    }
    @Export(name="targetId", type=String.class, parameters={})
    private Output<String> targetId;

    public Output<String> targetId() {
        return this.targetId;
    }
    /**
     * A mustache template that will form the body of the POST request, email, and summary of the PagerDuty.
     * 
     */
    @Export(name="template", type=String.class, parameters={})
    private Output<String> template;

    /**
     * @return A mustache template that will form the body of the POST request, email, and summary of the PagerDuty.
     * 
     */
    public Output<String> template() {
        return this.template;
    }
    /**
     * A list of occurrences on which this webhook will be fired. Valid values are `ALERT_OPENED`,
     * `ALERT_UPDATED`, `ALERT_RESOLVED`, `ALERT_MAINTENANCE`, `ALERT_SNOOZED`, `ALERT_NO_DATA`, `ALERT_NO_DATA_RESOLVED`, `ALERT_NO_DATA_MAINTENANCE`.
     * 
     */
    @Export(name="triggers", type=List.class, parameters={String.class})
    private Output<List<String>> triggers;

    /**
     * @return A list of occurrences on which this webhook will be fired. Valid values are `ALERT_OPENED`,
     * `ALERT_UPDATED`, `ALERT_RESOLVED`, `ALERT_MAINTENANCE`, `ALERT_SNOOZED`, `ALERT_NO_DATA`, `ALERT_NO_DATA_RESOLVED`, `ALERT_NO_DATA_MAINTENANCE`.
     * 
     */
    public Output<List<String>> triggers() {
        return this.triggers;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AlertTarget(String name) {
        this(name, AlertTargetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AlertTarget(String name, AlertTargetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AlertTarget(String name, AlertTargetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/alertTarget:AlertTarget", name, args == null ? AlertTargetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AlertTarget(String name, Output<String> id, @Nullable AlertTargetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/alertTarget:AlertTarget", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AlertTarget get(String name, Output<String> id, @Nullable AlertTargetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AlertTarget(name, id, state, options);
    }
}
