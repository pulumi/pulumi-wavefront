// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.wavefront.inputs.MetricsPolicyPolicyRuleArgs;
import java.util.List;
import java.util.Objects;


public final class MetricsPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricsPolicyArgs Empty = new MetricsPolicyArgs();

    /**
     * List of Metrics Policies, must have at least one entry.
     * 
     */
    @Import(name="policyRules", required=true)
    private Output<List<MetricsPolicyPolicyRuleArgs>> policyRules;

    /**
     * @return List of Metrics Policies, must have at least one entry.
     * 
     */
    public Output<List<MetricsPolicyPolicyRuleArgs>> policyRules() {
        return this.policyRules;
    }

    private MetricsPolicyArgs() {}

    private MetricsPolicyArgs(MetricsPolicyArgs $) {
        this.policyRules = $.policyRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricsPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricsPolicyArgs $;

        public Builder() {
            $ = new MetricsPolicyArgs();
        }

        public Builder(MetricsPolicyArgs defaults) {
            $ = new MetricsPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policyRules List of Metrics Policies, must have at least one entry.
         * 
         * @return builder
         * 
         */
        public Builder policyRules(Output<List<MetricsPolicyPolicyRuleArgs>> policyRules) {
            $.policyRules = policyRules;
            return this;
        }

        /**
         * @param policyRules List of Metrics Policies, must have at least one entry.
         * 
         * @return builder
         * 
         */
        public Builder policyRules(List<MetricsPolicyPolicyRuleArgs> policyRules) {
            return policyRules(Output.of(policyRules));
        }

        /**
         * @param policyRules List of Metrics Policies, must have at least one entry.
         * 
         * @return builder
         * 
         */
        public Builder policyRules(MetricsPolicyPolicyRuleArgs... policyRules) {
            return policyRules(List.of(policyRules));
        }

        public MetricsPolicyArgs build() {
            if ($.policyRules == null) {
                throw new MissingRequiredPropertyException("MetricsPolicyArgs", "policyRules");
            }
            return $;
        }
    }

}
