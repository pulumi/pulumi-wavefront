// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMaintenanceWindowAllMaintenanceWindow {
    private Integer createdEpochMillis;
    private String creatorId;
    private String customerId;
    private Integer endTimeInSeconds;
    private String eventName;
    private Boolean hostTagGroupHostNamesGroupAnded;
    private String id;
    private String reason;
    private List<String> relevantCustomerTags;
    private List<String> relevantHostNames;
    private List<String> relevantHostTags;
    private Boolean relevantHostTagsAnded;
    private String runningState;
    private Integer sortAttr;
    private Integer startTimeInSeconds;
    private String title;
    private Integer updatedEpochMillis;
    private String updaterId;

    private GetMaintenanceWindowAllMaintenanceWindow() {}
    public Integer createdEpochMillis() {
        return this.createdEpochMillis;
    }
    public String creatorId() {
        return this.creatorId;
    }
    public String customerId() {
        return this.customerId;
    }
    public Integer endTimeInSeconds() {
        return this.endTimeInSeconds;
    }
    public String eventName() {
        return this.eventName;
    }
    public Boolean hostTagGroupHostNamesGroupAnded() {
        return this.hostTagGroupHostNamesGroupAnded;
    }
    public String id() {
        return this.id;
    }
    public String reason() {
        return this.reason;
    }
    public List<String> relevantCustomerTags() {
        return this.relevantCustomerTags;
    }
    public List<String> relevantHostNames() {
        return this.relevantHostNames;
    }
    public List<String> relevantHostTags() {
        return this.relevantHostTags;
    }
    public Boolean relevantHostTagsAnded() {
        return this.relevantHostTagsAnded;
    }
    public String runningState() {
        return this.runningState;
    }
    public Integer sortAttr() {
        return this.sortAttr;
    }
    public Integer startTimeInSeconds() {
        return this.startTimeInSeconds;
    }
    public String title() {
        return this.title;
    }
    public Integer updatedEpochMillis() {
        return this.updatedEpochMillis;
    }
    public String updaterId() {
        return this.updaterId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMaintenanceWindowAllMaintenanceWindow defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer createdEpochMillis;
        private String creatorId;
        private String customerId;
        private Integer endTimeInSeconds;
        private String eventName;
        private Boolean hostTagGroupHostNamesGroupAnded;
        private String id;
        private String reason;
        private List<String> relevantCustomerTags;
        private List<String> relevantHostNames;
        private List<String> relevantHostTags;
        private Boolean relevantHostTagsAnded;
        private String runningState;
        private Integer sortAttr;
        private Integer startTimeInSeconds;
        private String title;
        private Integer updatedEpochMillis;
        private String updaterId;
        public Builder() {}
        public Builder(GetMaintenanceWindowAllMaintenanceWindow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdEpochMillis = defaults.createdEpochMillis;
    	      this.creatorId = defaults.creatorId;
    	      this.customerId = defaults.customerId;
    	      this.endTimeInSeconds = defaults.endTimeInSeconds;
    	      this.eventName = defaults.eventName;
    	      this.hostTagGroupHostNamesGroupAnded = defaults.hostTagGroupHostNamesGroupAnded;
    	      this.id = defaults.id;
    	      this.reason = defaults.reason;
    	      this.relevantCustomerTags = defaults.relevantCustomerTags;
    	      this.relevantHostNames = defaults.relevantHostNames;
    	      this.relevantHostTags = defaults.relevantHostTags;
    	      this.relevantHostTagsAnded = defaults.relevantHostTagsAnded;
    	      this.runningState = defaults.runningState;
    	      this.sortAttr = defaults.sortAttr;
    	      this.startTimeInSeconds = defaults.startTimeInSeconds;
    	      this.title = defaults.title;
    	      this.updatedEpochMillis = defaults.updatedEpochMillis;
    	      this.updaterId = defaults.updaterId;
        }

        @CustomType.Setter
        public Builder createdEpochMillis(Integer createdEpochMillis) {
            if (createdEpochMillis == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "createdEpochMillis");
            }
            this.createdEpochMillis = createdEpochMillis;
            return this;
        }
        @CustomType.Setter
        public Builder creatorId(String creatorId) {
            if (creatorId == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "creatorId");
            }
            this.creatorId = creatorId;
            return this;
        }
        @CustomType.Setter
        public Builder customerId(String customerId) {
            if (customerId == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "customerId");
            }
            this.customerId = customerId;
            return this;
        }
        @CustomType.Setter
        public Builder endTimeInSeconds(Integer endTimeInSeconds) {
            if (endTimeInSeconds == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "endTimeInSeconds");
            }
            this.endTimeInSeconds = endTimeInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder eventName(String eventName) {
            if (eventName == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "eventName");
            }
            this.eventName = eventName;
            return this;
        }
        @CustomType.Setter
        public Builder hostTagGroupHostNamesGroupAnded(Boolean hostTagGroupHostNamesGroupAnded) {
            if (hostTagGroupHostNamesGroupAnded == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "hostTagGroupHostNamesGroupAnded");
            }
            this.hostTagGroupHostNamesGroupAnded = hostTagGroupHostNamesGroupAnded;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder reason(String reason) {
            if (reason == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "reason");
            }
            this.reason = reason;
            return this;
        }
        @CustomType.Setter
        public Builder relevantCustomerTags(List<String> relevantCustomerTags) {
            if (relevantCustomerTags == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "relevantCustomerTags");
            }
            this.relevantCustomerTags = relevantCustomerTags;
            return this;
        }
        public Builder relevantCustomerTags(String... relevantCustomerTags) {
            return relevantCustomerTags(List.of(relevantCustomerTags));
        }
        @CustomType.Setter
        public Builder relevantHostNames(List<String> relevantHostNames) {
            if (relevantHostNames == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "relevantHostNames");
            }
            this.relevantHostNames = relevantHostNames;
            return this;
        }
        public Builder relevantHostNames(String... relevantHostNames) {
            return relevantHostNames(List.of(relevantHostNames));
        }
        @CustomType.Setter
        public Builder relevantHostTags(List<String> relevantHostTags) {
            if (relevantHostTags == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "relevantHostTags");
            }
            this.relevantHostTags = relevantHostTags;
            return this;
        }
        public Builder relevantHostTags(String... relevantHostTags) {
            return relevantHostTags(List.of(relevantHostTags));
        }
        @CustomType.Setter
        public Builder relevantHostTagsAnded(Boolean relevantHostTagsAnded) {
            if (relevantHostTagsAnded == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "relevantHostTagsAnded");
            }
            this.relevantHostTagsAnded = relevantHostTagsAnded;
            return this;
        }
        @CustomType.Setter
        public Builder runningState(String runningState) {
            if (runningState == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "runningState");
            }
            this.runningState = runningState;
            return this;
        }
        @CustomType.Setter
        public Builder sortAttr(Integer sortAttr) {
            if (sortAttr == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "sortAttr");
            }
            this.sortAttr = sortAttr;
            return this;
        }
        @CustomType.Setter
        public Builder startTimeInSeconds(Integer startTimeInSeconds) {
            if (startTimeInSeconds == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "startTimeInSeconds");
            }
            this.startTimeInSeconds = startTimeInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder title(String title) {
            if (title == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "title");
            }
            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder updatedEpochMillis(Integer updatedEpochMillis) {
            if (updatedEpochMillis == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "updatedEpochMillis");
            }
            this.updatedEpochMillis = updatedEpochMillis;
            return this;
        }
        @CustomType.Setter
        public Builder updaterId(String updaterId) {
            if (updaterId == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowAllMaintenanceWindow", "updaterId");
            }
            this.updaterId = updaterId;
            return this;
        }
        public GetMaintenanceWindowAllMaintenanceWindow build() {
            final var _resultValue = new GetMaintenanceWindowAllMaintenanceWindow();
            _resultValue.createdEpochMillis = createdEpochMillis;
            _resultValue.creatorId = creatorId;
            _resultValue.customerId = customerId;
            _resultValue.endTimeInSeconds = endTimeInSeconds;
            _resultValue.eventName = eventName;
            _resultValue.hostTagGroupHostNamesGroupAnded = hostTagGroupHostNamesGroupAnded;
            _resultValue.id = id;
            _resultValue.reason = reason;
            _resultValue.relevantCustomerTags = relevantCustomerTags;
            _resultValue.relevantHostNames = relevantHostNames;
            _resultValue.relevantHostTags = relevantHostTags;
            _resultValue.relevantHostTagsAnded = relevantHostTagsAnded;
            _resultValue.runningState = runningState;
            _resultValue.sortAttr = sortAttr;
            _resultValue.startTimeInSeconds = startTimeInSeconds;
            _resultValue.title = title;
            _resultValue.updatedEpochMillis = updatedEpochMillis;
            _resultValue.updaterId = updaterId;
            return _resultValue;
        }
    }
}
