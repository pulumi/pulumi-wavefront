// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventArgs Empty = new EventArgs();

    /**
     * The annotations associated with the event.
     * 
     */
    @Import(name="annotations", required=true)
    private Output<Map<String,String>> annotations;

    /**
     * @return The annotations associated with the event.
     * 
     */
    public Output<Map<String,String>> annotations() {
        return this.annotations;
    }

    @Import(name="endtimeKey")
    private @Nullable Output<Integer> endtimeKey;

    public Optional<Output<Integer>> endtimeKey() {
        return Optional.ofNullable(this.endtimeKey);
    }

    /**
     * The name of the event as it is displayed in Wavefront.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the event as it is displayed in Wavefront.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The start time of the event in epoch milliseconds.
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<Integer> startTime;

    /**
     * @return The start time of the event in epoch milliseconds.
     * 
     */
    public Optional<Output<Integer>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    /**
     * A set of tags to assign to this resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return A set of tags to assign to this resource.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private EventArgs() {}

    private EventArgs(EventArgs $) {
        this.annotations = $.annotations;
        this.endtimeKey = $.endtimeKey;
        this.name = $.name;
        this.startTime = $.startTime;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventArgs $;

        public Builder() {
            $ = new EventArgs();
        }

        public Builder(EventArgs defaults) {
            $ = new EventArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations The annotations associated with the event.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations The annotations associated with the event.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        public Builder endtimeKey(@Nullable Output<Integer> endtimeKey) {
            $.endtimeKey = endtimeKey;
            return this;
        }

        public Builder endtimeKey(Integer endtimeKey) {
            return endtimeKey(Output.of(endtimeKey));
        }

        /**
         * @param name The name of the event as it is displayed in Wavefront.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the event as it is displayed in Wavefront.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param startTime The start time of the event in epoch milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder startTime(@Nullable Output<Integer> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime The start time of the event in epoch milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder startTime(Integer startTime) {
            return startTime(Output.of(startTime));
        }

        /**
         * @param tags A set of tags to assign to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A set of tags to assign to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A set of tags to assign to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public EventArgs build() {
            if ($.annotations == null) {
                throw new MissingRequiredPropertyException("EventArgs", "annotations");
            }
            return $;
        }
    }

}
