// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMaintenanceWindowAllArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMaintenanceWindowAllArgs Empty = new GetMaintenanceWindowAllArgs();

    @Import(name="limit")
    private @Nullable Output<Integer> limit;

    public Optional<Output<Integer>> limit() {
        return Optional.ofNullable(this.limit);
    }

    @Import(name="offset")
    private @Nullable Output<Integer> offset;

    public Optional<Output<Integer>> offset() {
        return Optional.ofNullable(this.offset);
    }

    private GetMaintenanceWindowAllArgs() {}

    private GetMaintenanceWindowAllArgs(GetMaintenanceWindowAllArgs $) {
        this.limit = $.limit;
        this.offset = $.offset;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMaintenanceWindowAllArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMaintenanceWindowAllArgs $;

        public Builder() {
            $ = new GetMaintenanceWindowAllArgs();
        }

        public Builder(GetMaintenanceWindowAllArgs defaults) {
            $ = new GetMaintenanceWindowAllArgs(Objects.requireNonNull(defaults));
        }

        public Builder limit(@Nullable Output<Integer> limit) {
            $.limit = limit;
            return this;
        }

        public Builder limit(Integer limit) {
            return limit(Output.of(limit));
        }

        public Builder offset(@Nullable Output<Integer> offset) {
            $.offset = offset;
            return this;
        }

        public Builder offset(Integer offset) {
            return offset(Output.of(offset));
        }

        public GetMaintenanceWindowAllArgs build() {
            return $;
        }
    }

}
