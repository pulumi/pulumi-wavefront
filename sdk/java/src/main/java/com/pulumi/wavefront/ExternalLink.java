// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.wavefront.ExternalLinkArgs;
import com.pulumi.wavefront.Utilities;
import com.pulumi.wavefront.inputs.ExternalLinkState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Wavefront External Link Resource. This allows external links to be created, updated, and deleted.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.wavefront.ExternalLink;
 * import com.pulumi.wavefront.ExternalLinkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basic = new ExternalLink("basic", ExternalLinkArgs.builder()
 *             .name("External Link")
 *             .description("An external link description")
 *             .template("https://example.com/source={{{source}}}&startTime={{startEpochMillis}}")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Maintenance windows can be imported by using the `id`, e.g.:
 * 
 * ```sh
 * $ pulumi import wavefront:index/externalLink:ExternalLink basic fVj6fz6zYC4aBkID
 * ```
 * 
 */
@ResourceType(type="wavefront:index/externalLink:ExternalLink")
public class ExternalLink extends com.pulumi.resources.CustomResource {
    /**
     * Human-readable description for this link.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return Human-readable description for this link.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Whether this is a &#34;Log Integration&#34; subType of external link.
     * 
     */
    @Export(name="isLogIntegration", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isLogIntegration;

    /**
     * @return Whether this is a &#34;Log Integration&#34; subType of external link.
     * 
     */
    public Output<Optional<Boolean>> isLogIntegration() {
        return Codegen.optional(this.isLogIntegration);
    }
    /**
     * Controls whether a link is displayed in the context menu of a highlighted series. If present, the metric name of the highlighted series must match this regular expression in order for the link to be displayed.
     * 
     */
    @Export(name="metricFilterRegex", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> metricFilterRegex;

    /**
     * @return Controls whether a link is displayed in the context menu of a highlighted series. If present, the metric name of the highlighted series must match this regular expression in order for the link to be displayed.
     * 
     */
    public Output<Optional<String>> metricFilterRegex() {
        return Codegen.optional(this.metricFilterRegex);
    }
    /**
     * The name of the external link.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the external link.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Controls whether a link is displayed in the context menu of a highlighted
     * series. This is a map from string to regular expression. The highlighted series must contain point tags whose
     * keys are present in the keys of this map and whose values match the regular expressions associated with those
     * keys in order for the link to be displayed.
     * 
     */
    @Export(name="pointTagFilterRegexes", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> pointTagFilterRegexes;

    /**
     * @return Controls whether a link is displayed in the context menu of a highlighted
     * series. This is a map from string to regular expression. The highlighted series must contain point tags whose
     * keys are present in the keys of this map and whose values match the regular expressions associated with those
     * keys in order for the link to be displayed.
     * 
     */
    public Output<Optional<Map<String,String>>> pointTagFilterRegexes() {
        return Codegen.optional(this.pointTagFilterRegexes);
    }
    /**
     * Controls whether a link is displayed in the context menu of a highlighted series. If present, the source name of the highlighted series must match this regular expression in order for the link to be displayed.
     * 
     */
    @Export(name="sourceFilterRegex", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceFilterRegex;

    /**
     * @return Controls whether a link is displayed in the context menu of a highlighted series. If present, the source name of the highlighted series must match this regular expression in order for the link to be displayed.
     * 
     */
    public Output<Optional<String>> sourceFilterRegex() {
        return Codegen.optional(this.sourceFilterRegex);
    }
    /**
     * The mustache template for this link. The template must expand to a full URL, including scheme, origin, etc.
     * 
     */
    @Export(name="template", refs={String.class}, tree="[0]")
    private Output<String> template;

    /**
     * @return The mustache template for this link. The template must expand to a full URL, including scheme, origin, etc.
     * 
     */
    public Output<String> template() {
        return this.template;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExternalLink(String name) {
        this(name, ExternalLinkArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExternalLink(String name, ExternalLinkArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExternalLink(String name, ExternalLinkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/externalLink:ExternalLink", name, args == null ? ExternalLinkArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ExternalLink(String name, Output<String> id, @Nullable ExternalLinkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("wavefront:index/externalLink:ExternalLink", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExternalLink get(String name, Output<String> id, @Nullable ExternalLinkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExternalLink(name, id, state, options);
    }
}
