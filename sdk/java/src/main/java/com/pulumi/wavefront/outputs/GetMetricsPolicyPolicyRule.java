// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.wavefront.outputs.GetMetricsPolicyPolicyRuleTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMetricsPolicyPolicyRule {
    private String accessType;
    private List<String> accountIds;
    private String description;
    private String name;
    private List<String> prefixes;
    private List<String> roleIds;
    private List<GetMetricsPolicyPolicyRuleTag> tags;
    private Boolean tagsAnded;
    private List<String> userGroupIds;

    private GetMetricsPolicyPolicyRule() {}
    public String accessType() {
        return this.accessType;
    }
    public List<String> accountIds() {
        return this.accountIds;
    }
    public String description() {
        return this.description;
    }
    public String name() {
        return this.name;
    }
    public List<String> prefixes() {
        return this.prefixes;
    }
    public List<String> roleIds() {
        return this.roleIds;
    }
    public List<GetMetricsPolicyPolicyRuleTag> tags() {
        return this.tags;
    }
    public Boolean tagsAnded() {
        return this.tagsAnded;
    }
    public List<String> userGroupIds() {
        return this.userGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMetricsPolicyPolicyRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessType;
        private List<String> accountIds;
        private String description;
        private String name;
        private List<String> prefixes;
        private List<String> roleIds;
        private List<GetMetricsPolicyPolicyRuleTag> tags;
        private Boolean tagsAnded;
        private List<String> userGroupIds;
        public Builder() {}
        public Builder(GetMetricsPolicyPolicyRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessType = defaults.accessType;
    	      this.accountIds = defaults.accountIds;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.prefixes = defaults.prefixes;
    	      this.roleIds = defaults.roleIds;
    	      this.tags = defaults.tags;
    	      this.tagsAnded = defaults.tagsAnded;
    	      this.userGroupIds = defaults.userGroupIds;
        }

        @CustomType.Setter
        public Builder accessType(String accessType) {
            if (accessType == null) {
              throw new MissingRequiredPropertyException("GetMetricsPolicyPolicyRule", "accessType");
            }
            this.accessType = accessType;
            return this;
        }
        @CustomType.Setter
        public Builder accountIds(List<String> accountIds) {
            if (accountIds == null) {
              throw new MissingRequiredPropertyException("GetMetricsPolicyPolicyRule", "accountIds");
            }
            this.accountIds = accountIds;
            return this;
        }
        public Builder accountIds(String... accountIds) {
            return accountIds(List.of(accountIds));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetMetricsPolicyPolicyRule", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetMetricsPolicyPolicyRule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder prefixes(List<String> prefixes) {
            if (prefixes == null) {
              throw new MissingRequiredPropertyException("GetMetricsPolicyPolicyRule", "prefixes");
            }
            this.prefixes = prefixes;
            return this;
        }
        public Builder prefixes(String... prefixes) {
            return prefixes(List.of(prefixes));
        }
        @CustomType.Setter
        public Builder roleIds(List<String> roleIds) {
            if (roleIds == null) {
              throw new MissingRequiredPropertyException("GetMetricsPolicyPolicyRule", "roleIds");
            }
            this.roleIds = roleIds;
            return this;
        }
        public Builder roleIds(String... roleIds) {
            return roleIds(List.of(roleIds));
        }
        @CustomType.Setter
        public Builder tags(List<GetMetricsPolicyPolicyRuleTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetMetricsPolicyPolicyRule", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetMetricsPolicyPolicyRuleTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tagsAnded(Boolean tagsAnded) {
            if (tagsAnded == null) {
              throw new MissingRequiredPropertyException("GetMetricsPolicyPolicyRule", "tagsAnded");
            }
            this.tagsAnded = tagsAnded;
            return this;
        }
        @CustomType.Setter
        public Builder userGroupIds(List<String> userGroupIds) {
            if (userGroupIds == null) {
              throw new MissingRequiredPropertyException("GetMetricsPolicyPolicyRule", "userGroupIds");
            }
            this.userGroupIds = userGroupIds;
            return this;
        }
        public Builder userGroupIds(String... userGroupIds) {
            return userGroupIds(List.of(userGroupIds));
        }
        public GetMetricsPolicyPolicyRule build() {
            final var _resultValue = new GetMetricsPolicyPolicyRule();
            _resultValue.accessType = accessType;
            _resultValue.accountIds = accountIds;
            _resultValue.description = description;
            _resultValue.name = name;
            _resultValue.prefixes = prefixes;
            _resultValue.roleIds = roleIds;
            _resultValue.tags = tags;
            _resultValue.tagsAnded = tagsAnded;
            _resultValue.userGroupIds = userGroupIds;
            return _resultValue;
        }
    }
}
