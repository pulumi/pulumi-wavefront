// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.wavefront.inputs.DashboardSectionRowChartArgs;
import java.util.List;
import java.util.Objects;


public final class DashboardSectionRowArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardSectionRowArgs Empty = new DashboardSectionRowArgs();

    /**
     * Charts in this section. See dashboard chart.
     * 
     */
    @Import(name="charts", required=true)
    private Output<List<DashboardSectionRowChartArgs>> charts;

    /**
     * @return Charts in this section. See dashboard chart.
     * 
     */
    public Output<List<DashboardSectionRowChartArgs>> charts() {
        return this.charts;
    }

    private DashboardSectionRowArgs() {}

    private DashboardSectionRowArgs(DashboardSectionRowArgs $) {
        this.charts = $.charts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardSectionRowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardSectionRowArgs $;

        public Builder() {
            $ = new DashboardSectionRowArgs();
        }

        public Builder(DashboardSectionRowArgs defaults) {
            $ = new DashboardSectionRowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param charts Charts in this section. See dashboard chart.
         * 
         * @return builder
         * 
         */
        public Builder charts(Output<List<DashboardSectionRowChartArgs>> charts) {
            $.charts = charts;
            return this;
        }

        /**
         * @param charts Charts in this section. See dashboard chart.
         * 
         * @return builder
         * 
         */
        public Builder charts(List<DashboardSectionRowChartArgs> charts) {
            return charts(Output.of(charts));
        }

        /**
         * @param charts Charts in this section. See dashboard chart.
         * 
         * @return builder
         * 
         */
        public Builder charts(DashboardSectionRowChartArgs... charts) {
            return charts(List.of(charts));
        }

        public DashboardSectionRowArgs build() {
            if ($.charts == null) {
                throw new MissingRequiredPropertyException("DashboardSectionRowArgs", "charts");
            }
            return $;
        }
    }

}
