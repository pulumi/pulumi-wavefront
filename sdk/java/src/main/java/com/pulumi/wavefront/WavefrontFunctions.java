// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.resources.InvokeArgs;
import com.pulumi.wavefront.Utilities;
import com.pulumi.wavefront.inputs.GetAlertArgs;
import com.pulumi.wavefront.inputs.GetAlertPlainArgs;
import com.pulumi.wavefront.inputs.GetAlertsArgs;
import com.pulumi.wavefront.inputs.GetAlertsPlainArgs;
import com.pulumi.wavefront.inputs.GetDashboardArgs;
import com.pulumi.wavefront.inputs.GetDashboardPlainArgs;
import com.pulumi.wavefront.inputs.GetDashboardsArgs;
import com.pulumi.wavefront.inputs.GetDashboardsPlainArgs;
import com.pulumi.wavefront.inputs.GetDerivedMetricArgs;
import com.pulumi.wavefront.inputs.GetDerivedMetricPlainArgs;
import com.pulumi.wavefront.inputs.GetDerivedMetricsArgs;
import com.pulumi.wavefront.inputs.GetDerivedMetricsPlainArgs;
import com.pulumi.wavefront.inputs.GetEventArgs;
import com.pulumi.wavefront.inputs.GetEventPlainArgs;
import com.pulumi.wavefront.inputs.GetEventsArgs;
import com.pulumi.wavefront.inputs.GetEventsPlainArgs;
import com.pulumi.wavefront.inputs.GetExternalLinkArgs;
import com.pulumi.wavefront.inputs.GetExternalLinkPlainArgs;
import com.pulumi.wavefront.inputs.GetExternalLinksArgs;
import com.pulumi.wavefront.inputs.GetExternalLinksPlainArgs;
import com.pulumi.wavefront.inputs.GetMaintenanceWindowAllArgs;
import com.pulumi.wavefront.inputs.GetMaintenanceWindowAllPlainArgs;
import com.pulumi.wavefront.inputs.GetMaintenanceWindowArgs;
import com.pulumi.wavefront.inputs.GetMaintenanceWindowPlainArgs;
import com.pulumi.wavefront.inputs.GetRoleArgs;
import com.pulumi.wavefront.inputs.GetRolePlainArgs;
import com.pulumi.wavefront.inputs.GetRolesArgs;
import com.pulumi.wavefront.inputs.GetRolesPlainArgs;
import com.pulumi.wavefront.inputs.GetUserArgs;
import com.pulumi.wavefront.inputs.GetUserGroupArgs;
import com.pulumi.wavefront.inputs.GetUserGroupPlainArgs;
import com.pulumi.wavefront.inputs.GetUserGroupsArgs;
import com.pulumi.wavefront.inputs.GetUserGroupsPlainArgs;
import com.pulumi.wavefront.inputs.GetUserPlainArgs;
import com.pulumi.wavefront.outputs.GetAlertResult;
import com.pulumi.wavefront.outputs.GetAlertsResult;
import com.pulumi.wavefront.outputs.GetDashboardResult;
import com.pulumi.wavefront.outputs.GetDashboardsResult;
import com.pulumi.wavefront.outputs.GetDefaultUserGroupResult;
import com.pulumi.wavefront.outputs.GetDerivedMetricResult;
import com.pulumi.wavefront.outputs.GetDerivedMetricsResult;
import com.pulumi.wavefront.outputs.GetEventResult;
import com.pulumi.wavefront.outputs.GetEventsResult;
import com.pulumi.wavefront.outputs.GetExternalLinkResult;
import com.pulumi.wavefront.outputs.GetExternalLinksResult;
import com.pulumi.wavefront.outputs.GetMaintenanceWindowAllResult;
import com.pulumi.wavefront.outputs.GetMaintenanceWindowResult;
import com.pulumi.wavefront.outputs.GetMetricsPolicyResult;
import com.pulumi.wavefront.outputs.GetRoleResult;
import com.pulumi.wavefront.outputs.GetRolesResult;
import com.pulumi.wavefront.outputs.GetUserGroupResult;
import com.pulumi.wavefront.outputs.GetUserGroupsResult;
import com.pulumi.wavefront.outputs.GetUserResult;
import com.pulumi.wavefront.outputs.GetUsersResult;
import java.util.concurrent.CompletableFuture;

public final class WavefrontFunctions {
    /**
     * Use this data source to get information about a Wavefront alert by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetAlertArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the alert.
     *         final var example = WavefrontFunctions.getAlert(GetAlertArgs.builder()
     *             .id("alert-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAlertResult> getAlert(GetAlertArgs args) {
        return getAlert(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Wavefront alert by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetAlertArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the alert.
     *         final var example = WavefrontFunctions.getAlert(GetAlertArgs.builder()
     *             .id("alert-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAlertResult> getAlertPlain(GetAlertPlainArgs args) {
        return getAlertPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Wavefront alert by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetAlertArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the alert.
     *         final var example = WavefrontFunctions.getAlert(GetAlertArgs.builder()
     *             .id("alert-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAlertResult> getAlert(GetAlertArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getAlert:getAlert", TypeShape.of(GetAlertResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront alert by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetAlertArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the alert.
     *         final var example = WavefrontFunctions.getAlert(GetAlertArgs.builder()
     *             .id("alert-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAlertResult> getAlert(GetAlertArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getAlert:getAlert", TypeShape.of(GetAlertResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront alert by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetAlertArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the alert.
     *         final var example = WavefrontFunctions.getAlert(GetAlertArgs.builder()
     *             .id("alert-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAlertResult> getAlertPlain(GetAlertPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getAlert:getAlert", TypeShape.of(GetAlertResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront alerts.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all alerts.
     *         final var example = WavefrontFunctions.getAlerts(GetAlertsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAlertsResult> getAlerts() {
        return getAlerts(GetAlertsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront alerts.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all alerts.
     *         final var example = WavefrontFunctions.getAlerts(GetAlertsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAlertsResult> getAlertsPlain() {
        return getAlertsPlain(GetAlertsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront alerts.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all alerts.
     *         final var example = WavefrontFunctions.getAlerts(GetAlertsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAlertsResult> getAlerts(GetAlertsArgs args) {
        return getAlerts(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront alerts.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all alerts.
     *         final var example = WavefrontFunctions.getAlerts(GetAlertsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAlertsResult> getAlertsPlain(GetAlertsPlainArgs args) {
        return getAlertsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront alerts.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all alerts.
     *         final var example = WavefrontFunctions.getAlerts(GetAlertsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAlertsResult> getAlerts(GetAlertsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getAlerts:getAlerts", TypeShape.of(GetAlertsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront alerts.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all alerts.
     *         final var example = WavefrontFunctions.getAlerts(GetAlertsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAlertsResult> getAlerts(GetAlertsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getAlerts:getAlerts", TypeShape.of(GetAlertsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront alerts.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all alerts.
     *         final var example = WavefrontFunctions.getAlerts(GetAlertsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAlertsResult> getAlertsPlain(GetAlertsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getAlerts:getAlerts", TypeShape.of(GetAlertsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a certain Wavefront dashboard by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDashboardArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a dashboard.
     *         final var example = WavefrontFunctions.getDashboard(GetDashboardArgs.builder()
     *             .id("dashboard-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDashboardResult> getDashboard(GetDashboardArgs args) {
        return getDashboard(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a certain Wavefront dashboard by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDashboardArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a dashboard.
     *         final var example = WavefrontFunctions.getDashboard(GetDashboardArgs.builder()
     *             .id("dashboard-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDashboardResult> getDashboardPlain(GetDashboardPlainArgs args) {
        return getDashboardPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a certain Wavefront dashboard by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDashboardArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a dashboard.
     *         final var example = WavefrontFunctions.getDashboard(GetDashboardArgs.builder()
     *             .id("dashboard-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDashboardResult> getDashboard(GetDashboardArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getDashboard:getDashboard", TypeShape.of(GetDashboardResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a certain Wavefront dashboard by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDashboardArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a dashboard.
     *         final var example = WavefrontFunctions.getDashboard(GetDashboardArgs.builder()
     *             .id("dashboard-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDashboardResult> getDashboard(GetDashboardArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getDashboard:getDashboard", TypeShape.of(GetDashboardResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a certain Wavefront dashboard by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDashboardArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a dashboard.
     *         final var example = WavefrontFunctions.getDashboard(GetDashboardArgs.builder()
     *             .id("dashboard-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDashboardResult> getDashboardPlain(GetDashboardPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getDashboard:getDashboard", TypeShape.of(GetDashboardResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront dashboards.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDashboardsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all dashboards.
     *         final var example = WavefrontFunctions.getDashboards(GetDashboardsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDashboardsResult> getDashboards() {
        return getDashboards(GetDashboardsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront dashboards.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDashboardsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all dashboards.
     *         final var example = WavefrontFunctions.getDashboards(GetDashboardsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDashboardsResult> getDashboardsPlain() {
        return getDashboardsPlain(GetDashboardsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront dashboards.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDashboardsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all dashboards.
     *         final var example = WavefrontFunctions.getDashboards(GetDashboardsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDashboardsResult> getDashboards(GetDashboardsArgs args) {
        return getDashboards(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront dashboards.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDashboardsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all dashboards.
     *         final var example = WavefrontFunctions.getDashboards(GetDashboardsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDashboardsResult> getDashboardsPlain(GetDashboardsPlainArgs args) {
        return getDashboardsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront dashboards.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDashboardsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all dashboards.
     *         final var example = WavefrontFunctions.getDashboards(GetDashboardsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDashboardsResult> getDashboards(GetDashboardsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getDashboards:getDashboards", TypeShape.of(GetDashboardsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront dashboards.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDashboardsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all dashboards.
     *         final var example = WavefrontFunctions.getDashboards(GetDashboardsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDashboardsResult> getDashboards(GetDashboardsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getDashboards:getDashboards", TypeShape.of(GetDashboardsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront dashboards.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDashboardsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all dashboards.
     *         final var example = WavefrontFunctions.getDashboards(GetDashboardsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDashboardsResult> getDashboardsPlain(GetDashboardsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getDashboards:getDashboards", TypeShape.of(GetDashboardsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the Group ID of the `Everyone` group in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the default user group "Everyone"
     *         final var everyoneGroup = WavefrontFunctions.getDefaultUserGroup(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDefaultUserGroupResult> getDefaultUserGroup() {
        return getDefaultUserGroup(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the Group ID of the `Everyone` group in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the default user group "Everyone"
     *         final var everyoneGroup = WavefrontFunctions.getDefaultUserGroup(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDefaultUserGroupResult> getDefaultUserGroupPlain() {
        return getDefaultUserGroupPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the Group ID of the `Everyone` group in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the default user group "Everyone"
     *         final var everyoneGroup = WavefrontFunctions.getDefaultUserGroup(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDefaultUserGroupResult> getDefaultUserGroup(InvokeArgs args) {
        return getDefaultUserGroup(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the Group ID of the `Everyone` group in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the default user group "Everyone"
     *         final var everyoneGroup = WavefrontFunctions.getDefaultUserGroup(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDefaultUserGroupResult> getDefaultUserGroupPlain(InvokeArgs args) {
        return getDefaultUserGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the Group ID of the `Everyone` group in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the default user group "Everyone"
     *         final var everyoneGroup = WavefrontFunctions.getDefaultUserGroup(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDefaultUserGroupResult> getDefaultUserGroup(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getDefaultUserGroup:getDefaultUserGroup", TypeShape.of(GetDefaultUserGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the Group ID of the `Everyone` group in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the default user group "Everyone"
     *         final var everyoneGroup = WavefrontFunctions.getDefaultUserGroup(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDefaultUserGroupResult> getDefaultUserGroup(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getDefaultUserGroup:getDefaultUserGroup", TypeShape.of(GetDefaultUserGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the Group ID of the `Everyone` group in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the default user group "Everyone"
     *         final var everyoneGroup = WavefrontFunctions.getDefaultUserGroup(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDefaultUserGroupResult> getDefaultUserGroupPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getDefaultUserGroup:getDefaultUserGroup", TypeShape.of(GetDefaultUserGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a certain Wavefront derived metric by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDerivedMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         //Get the information about a derived metric.
     *         final var example = WavefrontFunctions.getDerivedMetric(GetDerivedMetricArgs.builder()
     *             .id("derived_metric_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDerivedMetricResult> getDerivedMetric(GetDerivedMetricArgs args) {
        return getDerivedMetric(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a certain Wavefront derived metric by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDerivedMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         //Get the information about a derived metric.
     *         final var example = WavefrontFunctions.getDerivedMetric(GetDerivedMetricArgs.builder()
     *             .id("derived_metric_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDerivedMetricResult> getDerivedMetricPlain(GetDerivedMetricPlainArgs args) {
        return getDerivedMetricPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a certain Wavefront derived metric by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDerivedMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         //Get the information about a derived metric.
     *         final var example = WavefrontFunctions.getDerivedMetric(GetDerivedMetricArgs.builder()
     *             .id("derived_metric_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDerivedMetricResult> getDerivedMetric(GetDerivedMetricArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getDerivedMetric:getDerivedMetric", TypeShape.of(GetDerivedMetricResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a certain Wavefront derived metric by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDerivedMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         //Get the information about a derived metric.
     *         final var example = WavefrontFunctions.getDerivedMetric(GetDerivedMetricArgs.builder()
     *             .id("derived_metric_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDerivedMetricResult> getDerivedMetric(GetDerivedMetricArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getDerivedMetric:getDerivedMetric", TypeShape.of(GetDerivedMetricResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a certain Wavefront derived metric by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDerivedMetricArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         //Get the information about a derived metric.
     *         final var example = WavefrontFunctions.getDerivedMetric(GetDerivedMetricArgs.builder()
     *             .id("derived_metric_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDerivedMetricResult> getDerivedMetricPlain(GetDerivedMetricPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getDerivedMetric:getDerivedMetric", TypeShape.of(GetDerivedMetricResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront derived metrics.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDerivedMetricsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all derived metrics.
     *         final var example = WavefrontFunctions.getDerivedMetrics(GetDerivedMetricsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDerivedMetricsResult> getDerivedMetrics() {
        return getDerivedMetrics(GetDerivedMetricsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront derived metrics.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDerivedMetricsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all derived metrics.
     *         final var example = WavefrontFunctions.getDerivedMetrics(GetDerivedMetricsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDerivedMetricsResult> getDerivedMetricsPlain() {
        return getDerivedMetricsPlain(GetDerivedMetricsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront derived metrics.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDerivedMetricsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all derived metrics.
     *         final var example = WavefrontFunctions.getDerivedMetrics(GetDerivedMetricsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDerivedMetricsResult> getDerivedMetrics(GetDerivedMetricsArgs args) {
        return getDerivedMetrics(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront derived metrics.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDerivedMetricsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all derived metrics.
     *         final var example = WavefrontFunctions.getDerivedMetrics(GetDerivedMetricsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDerivedMetricsResult> getDerivedMetricsPlain(GetDerivedMetricsPlainArgs args) {
        return getDerivedMetricsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront derived metrics.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDerivedMetricsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all derived metrics.
     *         final var example = WavefrontFunctions.getDerivedMetrics(GetDerivedMetricsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDerivedMetricsResult> getDerivedMetrics(GetDerivedMetricsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getDerivedMetrics:getDerivedMetrics", TypeShape.of(GetDerivedMetricsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront derived metrics.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDerivedMetricsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all derived metrics.
     *         final var example = WavefrontFunctions.getDerivedMetrics(GetDerivedMetricsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDerivedMetricsResult> getDerivedMetrics(GetDerivedMetricsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getDerivedMetrics:getDerivedMetrics", TypeShape.of(GetDerivedMetricsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront derived metrics.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetDerivedMetricsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all derived metrics.
     *         final var example = WavefrontFunctions.getDerivedMetrics(GetDerivedMetricsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDerivedMetricsResult> getDerivedMetricsPlain(GetDerivedMetricsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getDerivedMetrics:getDerivedMetrics", TypeShape.of(GetDerivedMetricsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a certain Wavefront event.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetEventArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a Wavefront event by its ID.
     *         final var example = WavefrontFunctions.getEvent(GetEventArgs.builder()
     *             .id("sample-event-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEventResult> getEvent(GetEventArgs args) {
        return getEvent(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a certain Wavefront event.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetEventArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a Wavefront event by its ID.
     *         final var example = WavefrontFunctions.getEvent(GetEventArgs.builder()
     *             .id("sample-event-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEventResult> getEventPlain(GetEventPlainArgs args) {
        return getEventPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a certain Wavefront event.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetEventArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a Wavefront event by its ID.
     *         final var example = WavefrontFunctions.getEvent(GetEventArgs.builder()
     *             .id("sample-event-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEventResult> getEvent(GetEventArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getEvent:getEvent", TypeShape.of(GetEventResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a certain Wavefront event.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetEventArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a Wavefront event by its ID.
     *         final var example = WavefrontFunctions.getEvent(GetEventArgs.builder()
     *             .id("sample-event-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEventResult> getEvent(GetEventArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getEvent:getEvent", TypeShape.of(GetEventResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a certain Wavefront event.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetEventArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a Wavefront event by its ID.
     *         final var example = WavefrontFunctions.getEvent(GetEventArgs.builder()
     *             .id("sample-event-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEventResult> getEventPlain(GetEventPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getEvent:getEvent", TypeShape.of(GetEventResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront events.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all events
     *         final var example = WavefrontFunctions.getEvents(GetEventsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .latestStartTimeEpochMillis(1665427195)
     *             .earliestStartTimeEpochMillis(1665427195)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEventsResult> getEvents(GetEventsArgs args) {
        return getEvents(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront events.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all events
     *         final var example = WavefrontFunctions.getEvents(GetEventsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .latestStartTimeEpochMillis(1665427195)
     *             .earliestStartTimeEpochMillis(1665427195)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEventsResult> getEventsPlain(GetEventsPlainArgs args) {
        return getEventsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront events.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all events
     *         final var example = WavefrontFunctions.getEvents(GetEventsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .latestStartTimeEpochMillis(1665427195)
     *             .earliestStartTimeEpochMillis(1665427195)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEventsResult> getEvents(GetEventsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getEvents:getEvents", TypeShape.of(GetEventsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront events.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all events
     *         final var example = WavefrontFunctions.getEvents(GetEventsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .latestStartTimeEpochMillis(1665427195)
     *             .earliestStartTimeEpochMillis(1665427195)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEventsResult> getEvents(GetEventsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getEvents:getEvents", TypeShape.of(GetEventsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront events.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetEventsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all events
     *         final var example = WavefrontFunctions.getEvents(GetEventsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .latestStartTimeEpochMillis(1665427195)
     *             .earliestStartTimeEpochMillis(1665427195)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEventsResult> getEventsPlain(GetEventsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getEvents:getEvents", TypeShape.of(GetEventsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront external link by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetExternalLinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a specific external links.
     *         final var example = WavefrontFunctions.getExternalLink(GetExternalLinkArgs.builder()
     *             .id("sample-external-link-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExternalLinkResult> getExternalLink(GetExternalLinkArgs args) {
        return getExternalLink(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Wavefront external link by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetExternalLinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a specific external links.
     *         final var example = WavefrontFunctions.getExternalLink(GetExternalLinkArgs.builder()
     *             .id("sample-external-link-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExternalLinkResult> getExternalLinkPlain(GetExternalLinkPlainArgs args) {
        return getExternalLinkPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Wavefront external link by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetExternalLinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a specific external links.
     *         final var example = WavefrontFunctions.getExternalLink(GetExternalLinkArgs.builder()
     *             .id("sample-external-link-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExternalLinkResult> getExternalLink(GetExternalLinkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getExternalLink:getExternalLink", TypeShape.of(GetExternalLinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront external link by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetExternalLinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a specific external links.
     *         final var example = WavefrontFunctions.getExternalLink(GetExternalLinkArgs.builder()
     *             .id("sample-external-link-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExternalLinkResult> getExternalLink(GetExternalLinkArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getExternalLink:getExternalLink", TypeShape.of(GetExternalLinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront external link by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetExternalLinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about a specific external links.
     *         final var example = WavefrontFunctions.getExternalLink(GetExternalLinkArgs.builder()
     *             .id("sample-external-link-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExternalLinkResult> getExternalLinkPlain(GetExternalLinkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getExternalLink:getExternalLink", TypeShape.of(GetExternalLinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront external links.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetExternalLinksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all external links.
     *         final var example = WavefrontFunctions.getExternalLinks(GetExternalLinksArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExternalLinksResult> getExternalLinks() {
        return getExternalLinks(GetExternalLinksArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront external links.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetExternalLinksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all external links.
     *         final var example = WavefrontFunctions.getExternalLinks(GetExternalLinksArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExternalLinksResult> getExternalLinksPlain() {
        return getExternalLinksPlain(GetExternalLinksPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront external links.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetExternalLinksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all external links.
     *         final var example = WavefrontFunctions.getExternalLinks(GetExternalLinksArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExternalLinksResult> getExternalLinks(GetExternalLinksArgs args) {
        return getExternalLinks(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront external links.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetExternalLinksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all external links.
     *         final var example = WavefrontFunctions.getExternalLinks(GetExternalLinksArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExternalLinksResult> getExternalLinksPlain(GetExternalLinksPlainArgs args) {
        return getExternalLinksPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about all Wavefront external links.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetExternalLinksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all external links.
     *         final var example = WavefrontFunctions.getExternalLinks(GetExternalLinksArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExternalLinksResult> getExternalLinks(GetExternalLinksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getExternalLinks:getExternalLinks", TypeShape.of(GetExternalLinksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront external links.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetExternalLinksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all external links.
     *         final var example = WavefrontFunctions.getExternalLinks(GetExternalLinksArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExternalLinksResult> getExternalLinks(GetExternalLinksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getExternalLinks:getExternalLinks", TypeShape.of(GetExternalLinksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about all Wavefront external links.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetExternalLinksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about all external links.
     *         final var example = WavefrontFunctions.getExternalLinks(GetExternalLinksArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExternalLinksResult> getExternalLinksPlain(GetExternalLinksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getExternalLinks:getExternalLinks", TypeShape.of(GetExternalLinksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront maintenance window by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetMaintenanceWindowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about specific maintenance window.
     *         final var example = WavefrontFunctions.getMaintenanceWindow(GetMaintenanceWindowArgs.builder()
     *             .id("sample-maintenance-window-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMaintenanceWindowResult> getMaintenanceWindow(GetMaintenanceWindowArgs args) {
        return getMaintenanceWindow(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Wavefront maintenance window by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetMaintenanceWindowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about specific maintenance window.
     *         final var example = WavefrontFunctions.getMaintenanceWindow(GetMaintenanceWindowArgs.builder()
     *             .id("sample-maintenance-window-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMaintenanceWindowResult> getMaintenanceWindowPlain(GetMaintenanceWindowPlainArgs args) {
        return getMaintenanceWindowPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Wavefront maintenance window by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetMaintenanceWindowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about specific maintenance window.
     *         final var example = WavefrontFunctions.getMaintenanceWindow(GetMaintenanceWindowArgs.builder()
     *             .id("sample-maintenance-window-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMaintenanceWindowResult> getMaintenanceWindow(GetMaintenanceWindowArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getMaintenanceWindow:getMaintenanceWindow", TypeShape.of(GetMaintenanceWindowResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront maintenance window by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetMaintenanceWindowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about specific maintenance window.
     *         final var example = WavefrontFunctions.getMaintenanceWindow(GetMaintenanceWindowArgs.builder()
     *             .id("sample-maintenance-window-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMaintenanceWindowResult> getMaintenanceWindow(GetMaintenanceWindowArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getMaintenanceWindow:getMaintenanceWindow", TypeShape.of(GetMaintenanceWindowResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront maintenance window by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetMaintenanceWindowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about specific maintenance window.
     *         final var example = WavefrontFunctions.getMaintenanceWindow(GetMaintenanceWindowArgs.builder()
     *             .id("sample-maintenance-window-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMaintenanceWindowResult> getMaintenanceWindowPlain(GetMaintenanceWindowPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getMaintenanceWindow:getMaintenanceWindow", TypeShape.of(GetMaintenanceWindowResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetMaintenanceWindowAllResult> getMaintenanceWindowAll() {
        return getMaintenanceWindowAll(GetMaintenanceWindowAllArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMaintenanceWindowAllResult> getMaintenanceWindowAllPlain() {
        return getMaintenanceWindowAllPlain(GetMaintenanceWindowAllPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetMaintenanceWindowAllResult> getMaintenanceWindowAll(GetMaintenanceWindowAllArgs args) {
        return getMaintenanceWindowAll(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMaintenanceWindowAllResult> getMaintenanceWindowAllPlain(GetMaintenanceWindowAllPlainArgs args) {
        return getMaintenanceWindowAllPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetMaintenanceWindowAllResult> getMaintenanceWindowAll(GetMaintenanceWindowAllArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getMaintenanceWindowAll:getMaintenanceWindowAll", TypeShape.of(GetMaintenanceWindowAllResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetMaintenanceWindowAllResult> getMaintenanceWindowAll(GetMaintenanceWindowAllArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getMaintenanceWindowAll:getMaintenanceWindowAll", TypeShape.of(GetMaintenanceWindowAllResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetMaintenanceWindowAllResult> getMaintenanceWindowAllPlain(GetMaintenanceWindowAllPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getMaintenanceWindowAll:getMaintenanceWindowAll", TypeShape.of(GetMaintenanceWindowAllResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetMetricsPolicyResult> getMetricsPolicy() {
        return getMetricsPolicy(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMetricsPolicyResult> getMetricsPolicyPlain() {
        return getMetricsPolicyPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetMetricsPolicyResult> getMetricsPolicy(InvokeArgs args) {
        return getMetricsPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMetricsPolicyResult> getMetricsPolicyPlain(InvokeArgs args) {
        return getMetricsPolicyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetMetricsPolicyResult> getMetricsPolicy(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getMetricsPolicy:getMetricsPolicy", TypeShape.of(GetMetricsPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetMetricsPolicyResult> getMetricsPolicy(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getMetricsPolicy:getMetricsPolicy", TypeShape.of(GetMetricsPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetMetricsPolicyResult> getMetricsPolicyPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getMetricsPolicy:getMetricsPolicy", TypeShape.of(GetMetricsPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront role by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the role.
     *         final var example = WavefrontFunctions.getRole(GetRoleArgs.builder()
     *             .id("role-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRoleResult> getRole(GetRoleArgs args) {
        return getRole(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Wavefront role by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the role.
     *         final var example = WavefrontFunctions.getRole(GetRoleArgs.builder()
     *             .id("role-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRoleResult> getRolePlain(GetRolePlainArgs args) {
        return getRolePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Wavefront role by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the role.
     *         final var example = WavefrontFunctions.getRole(GetRoleArgs.builder()
     *             .id("role-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRoleResult> getRole(GetRoleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getRole:getRole", TypeShape.of(GetRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront role by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the role.
     *         final var example = WavefrontFunctions.getRole(GetRoleArgs.builder()
     *             .id("role-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRoleResult> getRole(GetRoleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getRole:getRole", TypeShape.of(GetRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront role by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the role.
     *         final var example = WavefrontFunctions.getRole(GetRoleArgs.builder()
     *             .id("role-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRoleResult> getRolePlain(GetRolePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getRole:getRole", TypeShape.of(GetRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get all Roles in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all Roles
     *         final var roles = WavefrontFunctions.getRoles(GetRolesArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRolesResult> getRoles() {
        return getRoles(GetRolesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get all Roles in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all Roles
     *         final var roles = WavefrontFunctions.getRoles(GetRolesArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain() {
        return getRolesPlain(GetRolesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get all Roles in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all Roles
     *         final var roles = WavefrontFunctions.getRoles(GetRolesArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args) {
        return getRoles(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get all Roles in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all Roles
     *         final var roles = WavefrontFunctions.getRoles(GetRolesArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args) {
        return getRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get all Roles in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all Roles
     *         final var roles = WavefrontFunctions.getRoles(GetRolesArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get all Roles in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all Roles
     *         final var roles = WavefrontFunctions.getRoles(GetRolesArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get all Roles in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all Roles
     *         final var roles = WavefrontFunctions.getRoles(GetRolesArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information for a given user by email from Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         // Get the info for user "example.user}{@literal @}{@code example.com"
     *         final var example = WavefrontFunctions.getUser(GetUserArgs.builder()
     *             .email("example.user}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args) {
        return getUser(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information for a given user by email from Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         // Get the info for user "example.user}{@literal @}{@code example.com"
     *         final var example = WavefrontFunctions.getUser(GetUserArgs.builder()
     *             .email("example.user}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args) {
        return getUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information for a given user by email from Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         // Get the info for user "example.user}{@literal @}{@code example.com"
     *         final var example = WavefrontFunctions.getUser(GetUserArgs.builder()
     *             .email("example.user}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information for a given user by email from Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         // Get the info for user "example.user}{@literal @}{@code example.com"
     *         final var example = WavefrontFunctions.getUser(GetUserArgs.builder()
     *             .email("example.user}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information for a given user by email from Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         // Get the info for user "example.user}{@literal @}{@code example.com"
     *         final var example = WavefrontFunctions.getUser(GetUserArgs.builder()
     *             .email("example.user}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront user group by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the user group.
     *         final var example = WavefrontFunctions.getUserGroup(GetUserGroupArgs.builder()
     *             .id("user-group-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserGroupResult> getUserGroup(GetUserGroupArgs args) {
        return getUserGroup(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Wavefront user group by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the user group.
     *         final var example = WavefrontFunctions.getUserGroup(GetUserGroupArgs.builder()
     *             .id("user-group-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserGroupResult> getUserGroupPlain(GetUserGroupPlainArgs args) {
        return getUserGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Wavefront user group by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the user group.
     *         final var example = WavefrontFunctions.getUserGroup(GetUserGroupArgs.builder()
     *             .id("user-group-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserGroupResult> getUserGroup(GetUserGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getUserGroup:getUserGroup", TypeShape.of(GetUserGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront user group by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the user group.
     *         final var example = WavefrontFunctions.getUserGroup(GetUserGroupArgs.builder()
     *             .id("user-group-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserGroupResult> getUserGroup(GetUserGroupArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getUserGroup:getUserGroup", TypeShape.of(GetUserGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Wavefront user group by its ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get the information about the user group.
     *         final var example = WavefrontFunctions.getUserGroup(GetUserGroupArgs.builder()
     *             .id("user-group-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserGroupResult> getUserGroupPlain(GetUserGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getUserGroup:getUserGroup", TypeShape.of(GetUserGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get all User Groups in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all user groups
     *         final var groups = WavefrontFunctions.getUserGroups(GetUserGroupsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserGroupsResult> getUserGroups() {
        return getUserGroups(GetUserGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get all User Groups in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all user groups
     *         final var groups = WavefrontFunctions.getUserGroups(GetUserGroupsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserGroupsResult> getUserGroupsPlain() {
        return getUserGroupsPlain(GetUserGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get all User Groups in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all user groups
     *         final var groups = WavefrontFunctions.getUserGroups(GetUserGroupsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserGroupsResult> getUserGroups(GetUserGroupsArgs args) {
        return getUserGroups(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get all User Groups in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all user groups
     *         final var groups = WavefrontFunctions.getUserGroups(GetUserGroupsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserGroupsResult> getUserGroupsPlain(GetUserGroupsPlainArgs args) {
        return getUserGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get all User Groups in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all user groups
     *         final var groups = WavefrontFunctions.getUserGroups(GetUserGroupsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserGroupsResult> getUserGroups(GetUserGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getUserGroups:getUserGroups", TypeShape.of(GetUserGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get all User Groups in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all user groups
     *         final var groups = WavefrontFunctions.getUserGroups(GetUserGroupsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUserGroupsResult> getUserGroups(GetUserGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getUserGroups:getUserGroups", TypeShape.of(GetUserGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get all User Groups in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import com.pulumi.wavefront.inputs.GetUserGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all user groups
     *         final var groups = WavefrontFunctions.getUserGroups(GetUserGroupsArgs.builder()
     *             .limit(10)
     *             .offset(0)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUserGroupsResult> getUserGroupsPlain(GetUserGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getUserGroups:getUserGroups", TypeShape.of(GetUserGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get all users in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all users
     *         final var users = WavefrontFunctions.getUsers(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsersResult> getUsers() {
        return getUsers(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get all users in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all users
     *         final var users = WavefrontFunctions.getUsers(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain() {
        return getUsersPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get all users in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all users
     *         final var users = WavefrontFunctions.getUsers(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsersResult> getUsers(InvokeArgs args) {
        return getUsers(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get all users in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all users
     *         final var users = WavefrontFunctions.getUsers(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(InvokeArgs args) {
        return getUsersPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get all users in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all users
     *         final var users = WavefrontFunctions.getUsers(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsersResult> getUsers(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get all users in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all users
     *         final var users = WavefrontFunctions.getUsers(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsersResult> getUsers(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("wavefront:index/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get all users in Wavefront.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.wavefront.WavefrontFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Get all users
     *         final var users = WavefrontFunctions.getUsers(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("wavefront:index/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
}
