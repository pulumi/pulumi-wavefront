// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudIntegrationAzureActivityLogState extends com.pulumi.resources.ResourceArgs {

    public static final CloudIntegrationAzureActivityLogState Empty = new CloudIntegrationAzureActivityLogState();

    /**
     * A list of point tag key-values to add to every point ingested using this integration.
     * 
     */
    @Import(name="additionalTags")
    private @Nullable Output<Map<String,String>> additionalTags;

    /**
     * @return A list of point tag key-values to add to every point ingested using this integration.
     * 
     */
    public Optional<Output<Map<String,String>>> additionalTags() {
        return Optional.ofNullable(this.additionalTags);
    }

    /**
     * A list of Azure services (such as Microsoft.Compute/virtualMachines) from which to pull metrics.
     * 
     */
    @Import(name="categoryFilters")
    private @Nullable Output<List<String>> categoryFilters;

    /**
     * @return A list of Azure services (such as Microsoft.Compute/virtualMachines) from which to pull metrics.
     * 
     */
    public Optional<Output<List<String>>> categoryFilters() {
        return Optional.ofNullable(this.categoryFilters);
    }

    /**
     * Client ID for an Azure service account within your project.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return Client ID for an Azure service account within your project.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Client secret for an Azure service account within your project.
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return Client secret for an Azure service account within your project.
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * Forces this resource to save, even if errors are present.
     * 
     */
    @Import(name="forceSave")
    private @Nullable Output<Boolean> forceSave;

    /**
     * @return Forces this resource to save, even if errors are present.
     * 
     */
    public Optional<Output<Boolean>> forceSave() {
        return Optional.ofNullable(this.forceSave);
    }

    /**
     * The human-readable name of this integration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The human-readable name of this integration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A value denoting which cloud service this service integrates with.
     * 
     */
    @Import(name="service")
    private @Nullable Output<String> service;

    /**
     * @return A value denoting which cloud service this service integrates with.
     * 
     */
    public Optional<Output<String>> service() {
        return Optional.ofNullable(this.service);
    }

    /**
     * How often, in minutes, to refresh the service.
     * 
     */
    @Import(name="serviceRefreshRateInMinutes")
    private @Nullable Output<Integer> serviceRefreshRateInMinutes;

    /**
     * @return How often, in minutes, to refresh the service.
     * 
     */
    public Optional<Output<Integer>> serviceRefreshRateInMinutes() {
        return Optional.ofNullable(this.serviceRefreshRateInMinutes);
    }

    /**
     * Tenant ID for an Azure service account within your project.
     * 
     */
    @Import(name="tenant")
    private @Nullable Output<String> tenant;

    /**
     * @return Tenant ID for an Azure service account within your project.
     * 
     */
    public Optional<Output<String>> tenant() {
        return Optional.ofNullable(this.tenant);
    }

    private CloudIntegrationAzureActivityLogState() {}

    private CloudIntegrationAzureActivityLogState(CloudIntegrationAzureActivityLogState $) {
        this.additionalTags = $.additionalTags;
        this.categoryFilters = $.categoryFilters;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.forceSave = $.forceSave;
        this.name = $.name;
        this.service = $.service;
        this.serviceRefreshRateInMinutes = $.serviceRefreshRateInMinutes;
        this.tenant = $.tenant;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudIntegrationAzureActivityLogState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudIntegrationAzureActivityLogState $;

        public Builder() {
            $ = new CloudIntegrationAzureActivityLogState();
        }

        public Builder(CloudIntegrationAzureActivityLogState defaults) {
            $ = new CloudIntegrationAzureActivityLogState(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalTags A list of point tag key-values to add to every point ingested using this integration.
         * 
         * @return builder
         * 
         */
        public Builder additionalTags(@Nullable Output<Map<String,String>> additionalTags) {
            $.additionalTags = additionalTags;
            return this;
        }

        /**
         * @param additionalTags A list of point tag key-values to add to every point ingested using this integration.
         * 
         * @return builder
         * 
         */
        public Builder additionalTags(Map<String,String> additionalTags) {
            return additionalTags(Output.of(additionalTags));
        }

        /**
         * @param categoryFilters A list of Azure services (such as Microsoft.Compute/virtualMachines) from which to pull metrics.
         * 
         * @return builder
         * 
         */
        public Builder categoryFilters(@Nullable Output<List<String>> categoryFilters) {
            $.categoryFilters = categoryFilters;
            return this;
        }

        /**
         * @param categoryFilters A list of Azure services (such as Microsoft.Compute/virtualMachines) from which to pull metrics.
         * 
         * @return builder
         * 
         */
        public Builder categoryFilters(List<String> categoryFilters) {
            return categoryFilters(Output.of(categoryFilters));
        }

        /**
         * @param categoryFilters A list of Azure services (such as Microsoft.Compute/virtualMachines) from which to pull metrics.
         * 
         * @return builder
         * 
         */
        public Builder categoryFilters(String... categoryFilters) {
            return categoryFilters(List.of(categoryFilters));
        }

        /**
         * @param clientId Client ID for an Azure service account within your project.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId Client ID for an Azure service account within your project.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret Client secret for an Azure service account within your project.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret Client secret for an Azure service account within your project.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param forceSave Forces this resource to save, even if errors are present.
         * 
         * @return builder
         * 
         */
        public Builder forceSave(@Nullable Output<Boolean> forceSave) {
            $.forceSave = forceSave;
            return this;
        }

        /**
         * @param forceSave Forces this resource to save, even if errors are present.
         * 
         * @return builder
         * 
         */
        public Builder forceSave(Boolean forceSave) {
            return forceSave(Output.of(forceSave));
        }

        /**
         * @param name The human-readable name of this integration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The human-readable name of this integration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param service A value denoting which cloud service this service integrates with.
         * 
         * @return builder
         * 
         */
        public Builder service(@Nullable Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service A value denoting which cloud service this service integrates with.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        /**
         * @param serviceRefreshRateInMinutes How often, in minutes, to refresh the service.
         * 
         * @return builder
         * 
         */
        public Builder serviceRefreshRateInMinutes(@Nullable Output<Integer> serviceRefreshRateInMinutes) {
            $.serviceRefreshRateInMinutes = serviceRefreshRateInMinutes;
            return this;
        }

        /**
         * @param serviceRefreshRateInMinutes How often, in minutes, to refresh the service.
         * 
         * @return builder
         * 
         */
        public Builder serviceRefreshRateInMinutes(Integer serviceRefreshRateInMinutes) {
            return serviceRefreshRateInMinutes(Output.of(serviceRefreshRateInMinutes));
        }

        /**
         * @param tenant Tenant ID for an Azure service account within your project.
         * 
         * @return builder
         * 
         */
        public Builder tenant(@Nullable Output<String> tenant) {
            $.tenant = tenant;
            return this;
        }

        /**
         * @param tenant Tenant ID for an Azure service account within your project.
         * 
         * @return builder
         * 
         */
        public Builder tenant(String tenant) {
            return tenant(Output.of(tenant));
        }

        public CloudIntegrationAzureActivityLogState build() {
            return $;
        }
    }

}
