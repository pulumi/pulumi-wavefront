// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDashboardsDashboardSectionRowChartSource {
    /**
     * @return Whether the source is disabled.
     * 
     */
    private Boolean disabled;
    /**
     * @return The name of the parameters.
     * 
     */
    private String name;
    /**
     * @return Query expression to plot on the chart.
     * 
     */
    private String query;
    private Boolean querybuilderEnabled;
    /**
     * @return For scatter plots, does this query source the X-axis or the Y-axis, `X`, or `Y`.
     * 
     */
    private String scatterPlotSource;
    private Boolean secondaryAxis;
    private String sourceColor;
    /**
     * @return A description for the purpose of this source.
     * 
     */
    private String sourceDescription;

    private GetDashboardsDashboardSectionRowChartSource() {}
    /**
     * @return Whether the source is disabled.
     * 
     */
    public Boolean disabled() {
        return this.disabled;
    }
    /**
     * @return The name of the parameters.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Query expression to plot on the chart.
     * 
     */
    public String query() {
        return this.query;
    }
    public Boolean querybuilderEnabled() {
        return this.querybuilderEnabled;
    }
    /**
     * @return For scatter plots, does this query source the X-axis or the Y-axis, `X`, or `Y`.
     * 
     */
    public String scatterPlotSource() {
        return this.scatterPlotSource;
    }
    public Boolean secondaryAxis() {
        return this.secondaryAxis;
    }
    public String sourceColor() {
        return this.sourceColor;
    }
    /**
     * @return A description for the purpose of this source.
     * 
     */
    public String sourceDescription() {
        return this.sourceDescription;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDashboardsDashboardSectionRowChartSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean disabled;
        private String name;
        private String query;
        private Boolean querybuilderEnabled;
        private String scatterPlotSource;
        private Boolean secondaryAxis;
        private String sourceColor;
        private String sourceDescription;
        public Builder() {}
        public Builder(GetDashboardsDashboardSectionRowChartSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disabled = defaults.disabled;
    	      this.name = defaults.name;
    	      this.query = defaults.query;
    	      this.querybuilderEnabled = defaults.querybuilderEnabled;
    	      this.scatterPlotSource = defaults.scatterPlotSource;
    	      this.secondaryAxis = defaults.secondaryAxis;
    	      this.sourceColor = defaults.sourceColor;
    	      this.sourceDescription = defaults.sourceDescription;
        }

        @CustomType.Setter
        public Builder disabled(Boolean disabled) {
            if (disabled == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboardSectionRowChartSource", "disabled");
            }
            this.disabled = disabled;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboardSectionRowChartSource", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            if (query == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboardSectionRowChartSource", "query");
            }
            this.query = query;
            return this;
        }
        @CustomType.Setter
        public Builder querybuilderEnabled(Boolean querybuilderEnabled) {
            if (querybuilderEnabled == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboardSectionRowChartSource", "querybuilderEnabled");
            }
            this.querybuilderEnabled = querybuilderEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder scatterPlotSource(String scatterPlotSource) {
            if (scatterPlotSource == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboardSectionRowChartSource", "scatterPlotSource");
            }
            this.scatterPlotSource = scatterPlotSource;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryAxis(Boolean secondaryAxis) {
            if (secondaryAxis == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboardSectionRowChartSource", "secondaryAxis");
            }
            this.secondaryAxis = secondaryAxis;
            return this;
        }
        @CustomType.Setter
        public Builder sourceColor(String sourceColor) {
            if (sourceColor == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboardSectionRowChartSource", "sourceColor");
            }
            this.sourceColor = sourceColor;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDescription(String sourceDescription) {
            if (sourceDescription == null) {
              throw new MissingRequiredPropertyException("GetDashboardsDashboardSectionRowChartSource", "sourceDescription");
            }
            this.sourceDescription = sourceDescription;
            return this;
        }
        public GetDashboardsDashboardSectionRowChartSource build() {
            final var _resultValue = new GetDashboardsDashboardSectionRowChartSource();
            _resultValue.disabled = disabled;
            _resultValue.name = name;
            _resultValue.query = query;
            _resultValue.querybuilderEnabled = querybuilderEnabled;
            _resultValue.scatterPlotSource = scatterPlotSource;
            _resultValue.secondaryAxis = secondaryAxis;
            _resultValue.sourceColor = sourceColor;
            _resultValue.sourceDescription = sourceDescription;
            return _resultValue;
        }
    }
}
