// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.wavefront.outputs.GetMetricsPolicyPolicyRule;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMetricsPolicyResult {
    private String customer;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<GetMetricsPolicyPolicyRule> policyRules;
    private Integer updatedEpochMillis;
    private String updaterId;

    private GetMetricsPolicyResult() {}
    public String customer() {
        return this.customer;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetMetricsPolicyPolicyRule> policyRules() {
        return this.policyRules;
    }
    public Integer updatedEpochMillis() {
        return this.updatedEpochMillis;
    }
    public String updaterId() {
        return this.updaterId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMetricsPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String customer;
        private String id;
        private List<GetMetricsPolicyPolicyRule> policyRules;
        private Integer updatedEpochMillis;
        private String updaterId;
        public Builder() {}
        public Builder(GetMetricsPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customer = defaults.customer;
    	      this.id = defaults.id;
    	      this.policyRules = defaults.policyRules;
    	      this.updatedEpochMillis = defaults.updatedEpochMillis;
    	      this.updaterId = defaults.updaterId;
        }

        @CustomType.Setter
        public Builder customer(String customer) {
            this.customer = Objects.requireNonNull(customer);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder policyRules(List<GetMetricsPolicyPolicyRule> policyRules) {
            this.policyRules = Objects.requireNonNull(policyRules);
            return this;
        }
        public Builder policyRules(GetMetricsPolicyPolicyRule... policyRules) {
            return policyRules(List.of(policyRules));
        }
        @CustomType.Setter
        public Builder updatedEpochMillis(Integer updatedEpochMillis) {
            this.updatedEpochMillis = Objects.requireNonNull(updatedEpochMillis);
            return this;
        }
        @CustomType.Setter
        public Builder updaterId(String updaterId) {
            this.updaterId = Objects.requireNonNull(updaterId);
            return this;
        }
        public GetMetricsPolicyResult build() {
            final var o = new GetMetricsPolicyResult();
            o.customer = customer;
            o.id = id;
            o.policyRules = policyRules;
            o.updatedEpochMillis = updatedEpochMillis;
            o.updaterId = updaterId;
            return o;
        }
    }
}
