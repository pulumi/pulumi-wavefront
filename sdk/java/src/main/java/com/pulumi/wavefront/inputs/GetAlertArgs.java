// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.wavefront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAlertArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAlertArgs Empty = new GetAlertArgs();

    /**
     * The ID associated with the alert data to be fetched.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The ID associated with the alert data to be fetched.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * A comma-separated list of the email addresses or integration endpoints (such as PagerDuty or webhook) to notify when the alert status changes. Multiple target types can be in the list.
     * 
     */
    @Import(name="targets")
    private @Nullable Output<Map<String,String>> targets;

    /**
     * @return A comma-separated list of the email addresses or integration endpoints (such as PagerDuty or webhook) to notify when the alert status changes. Multiple target types can be in the list.
     * 
     */
    public Optional<Output<Map<String,String>>> targets() {
        return Optional.ofNullable(this.targets);
    }

    private GetAlertArgs() {}

    private GetAlertArgs(GetAlertArgs $) {
        this.id = $.id;
        this.targets = $.targets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAlertArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAlertArgs $;

        public Builder() {
            $ = new GetAlertArgs();
        }

        public Builder(GetAlertArgs defaults) {
            $ = new GetAlertArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID associated with the alert data to be fetched.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID associated with the alert data to be fetched.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param targets A comma-separated list of the email addresses or integration endpoints (such as PagerDuty or webhook) to notify when the alert status changes. Multiple target types can be in the list.
         * 
         * @return builder
         * 
         */
        public Builder targets(@Nullable Output<Map<String,String>> targets) {
            $.targets = targets;
            return this;
        }

        /**
         * @param targets A comma-separated list of the email addresses or integration endpoints (such as PagerDuty or webhook) to notify when the alert status changes. Multiple target types can be in the list.
         * 
         * @return builder
         * 
         */
        public Builder targets(Map<String,String> targets) {
            return targets(Output.of(targets));
        }

        public GetAlertArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetAlertArgs", "id");
            }
            return $;
        }
    }

}
