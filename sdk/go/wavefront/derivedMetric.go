// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DerivedMetric struct {
	pulumi.CustomResourceState

	AdditionalInformation pulumi.StringPtrOutput   `pulumi:"additionalInformation"`
	Minutes               pulumi.IntOutput         `pulumi:"minutes"`
	Name                  pulumi.StringOutput      `pulumi:"name"`
	Query                 pulumi.StringOutput      `pulumi:"query"`
	Tags                  pulumi.StringArrayOutput `pulumi:"tags"`
}

// NewDerivedMetric registers a new resource with the given unique name, arguments, and options.
func NewDerivedMetric(ctx *pulumi.Context,
	name string, args *DerivedMetricArgs, opts ...pulumi.ResourceOption) (*DerivedMetric, error) {
	if args == nil || args.Minutes == nil {
		return nil, errors.New("missing required argument 'Minutes'")
	}
	if args == nil || args.Query == nil {
		return nil, errors.New("missing required argument 'Query'")
	}
	if args == nil {
		args = &DerivedMetricArgs{}
	}
	var resource DerivedMetric
	err := ctx.RegisterResource("wavefront:index/derivedMetric:DerivedMetric", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDerivedMetric gets an existing DerivedMetric resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDerivedMetric(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DerivedMetricState, opts ...pulumi.ResourceOption) (*DerivedMetric, error) {
	var resource DerivedMetric
	err := ctx.ReadResource("wavefront:index/derivedMetric:DerivedMetric", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DerivedMetric resources.
type derivedMetricState struct {
	AdditionalInformation *string  `pulumi:"additionalInformation"`
	Minutes               *int     `pulumi:"minutes"`
	Name                  *string  `pulumi:"name"`
	Query                 *string  `pulumi:"query"`
	Tags                  []string `pulumi:"tags"`
}

type DerivedMetricState struct {
	AdditionalInformation pulumi.StringPtrInput
	Minutes               pulumi.IntPtrInput
	Name                  pulumi.StringPtrInput
	Query                 pulumi.StringPtrInput
	Tags                  pulumi.StringArrayInput
}

func (DerivedMetricState) ElementType() reflect.Type {
	return reflect.TypeOf((*derivedMetricState)(nil)).Elem()
}

type derivedMetricArgs struct {
	AdditionalInformation *string  `pulumi:"additionalInformation"`
	Minutes               int      `pulumi:"minutes"`
	Name                  *string  `pulumi:"name"`
	Query                 string   `pulumi:"query"`
	Tags                  []string `pulumi:"tags"`
}

// The set of arguments for constructing a DerivedMetric resource.
type DerivedMetricArgs struct {
	AdditionalInformation pulumi.StringPtrInput
	Minutes               pulumi.IntInput
	Name                  pulumi.StringPtrInput
	Query                 pulumi.StringInput
	Tags                  pulumi.StringArrayInput
}

func (DerivedMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*derivedMetricArgs)(nil)).Elem()
}
