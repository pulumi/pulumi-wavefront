// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get all User Groups in Wavefront.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Get all user groups
//			_, err := wavefront.GetUserGroups(ctx, &wavefront.GetUserGroupsArgs{
//				Limit:  pulumi.IntRef(10),
//				Offset: pulumi.IntRef(0),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUserGroups(ctx *pulumi.Context, args *GetUserGroupsArgs, opts ...pulumi.InvokeOption) (*GetUserGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserGroupsResult
	err := ctx.Invoke("wavefront:index/getUserGroups:getUserGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserGroups.
type GetUserGroupsArgs struct {
	// Limit is the maximum number of results to be returned. Defaults to 100.
	Limit *int `pulumi:"limit"`
	// Offset is the offset from the first result to be returned. Defaults to 0.
	Offset *int `pulumi:"offset"`
}

// A collection of values returned by getUserGroups.
type GetUserGroupsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Limit  *int   `pulumi:"limit"`
	Offset *int   `pulumi:"offset"`
	// List of user groups.
	UserGroups []GetUserGroupsUserGroup `pulumi:"userGroups"`
}

func GetUserGroupsOutput(ctx *pulumi.Context, args GetUserGroupsOutputArgs, opts ...pulumi.InvokeOption) GetUserGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUserGroupsResult, error) {
			args := v.(GetUserGroupsArgs)
			r, err := GetUserGroups(ctx, &args, opts...)
			var s GetUserGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUserGroupsResultOutput)
}

// A collection of arguments for invoking getUserGroups.
type GetUserGroupsOutputArgs struct {
	// Limit is the maximum number of results to be returned. Defaults to 100.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// Offset is the offset from the first result to be returned. Defaults to 0.
	Offset pulumi.IntPtrInput `pulumi:"offset"`
}

func (GetUserGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getUserGroups.
type GetUserGroupsResultOutput struct{ *pulumi.OutputState }

func (GetUserGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsResult)(nil)).Elem()
}

func (o GetUserGroupsResultOutput) ToGetUserGroupsResultOutput() GetUserGroupsResultOutput {
	return o
}

func (o GetUserGroupsResultOutput) ToGetUserGroupsResultOutputWithContext(ctx context.Context) GetUserGroupsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUserGroupsResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetUserGroupsResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetUserGroupsResultOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetUserGroupsResult) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

// List of user groups.
func (o GetUserGroupsResultOutput) UserGroups() GetUserGroupsUserGroupArrayOutput {
	return o.ApplyT(func(v GetUserGroupsResult) []GetUserGroupsUserGroup { return v.UserGroups }).(GetUserGroupsUserGroupArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserGroupsResultOutput{})
}
