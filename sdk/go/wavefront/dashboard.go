// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Wavefront Dashboard resource.  This allows dashboards to be created, updated, and deleted.
type Dashboard struct {
	pulumi.CustomResourceState

	// A list of users that have modify ACL access to the dashboard
	CanModifies pulumi.StringArrayOutput `pulumi:"canModifies"`
	// A list of users that have view ACL access to the dashboard
	CanViews pulumi.StringArrayOutput `pulumi:"canViews"`
	// Human-readable description of the dashboard
	Description pulumi.StringOutput `pulumi:"description"`
	// Whether the dashboard parameters section is opened by default when the dashboard
	// is shown
	DisplayQueryParameters pulumi.BoolPtrOutput `pulumi:"displayQueryParameters"`
	// Whether the "pills" quick-linked the sections of the dashboard are
	// displayed by default when the dashboard is shown
	DisplaySectionTableOfContents pulumi.BoolPtrOutput `pulumi:"displaySectionTableOfContents"`
	// How charts belonging to this dashboard should display events. BYCHART is default if
	// unspecified; Valid options are: `BYCHART`, `AUTOMATIC`, `ALL`, `NONE`, `BYDASHBOARD`, and `BYCHARTANDDASHBOARD`
	EventFilterType pulumi.StringPtrOutput `pulumi:"eventFilterType"`
	// Name of the dashboard
	Name pulumi.StringOutput `pulumi:"name"`
	// The current JSON representation of dashboard parameters. See parameter details
	ParameterDetails DashboardParameterDetailArrayOutput `pulumi:"parameterDetails"`
	// Dashboard chart sections. See dashboard sections
	Sections DashboardSectionArrayOutput `pulumi:"sections"`
	// A set of tags to assign to this resource.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Unique identifier, also URL slug, of the dashboard
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewDashboard registers a new resource with the given unique name, arguments, and options.
func NewDashboard(ctx *pulumi.Context,
	name string, args *DashboardArgs, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	if args == nil || args.Description == nil {
		return nil, errors.New("missing required argument 'Description'")
	}
	if args == nil || args.Sections == nil {
		return nil, errors.New("missing required argument 'Sections'")
	}
	if args == nil || args.Tags == nil {
		return nil, errors.New("missing required argument 'Tags'")
	}
	if args == nil || args.Url == nil {
		return nil, errors.New("missing required argument 'Url'")
	}
	if args == nil {
		args = &DashboardArgs{}
	}
	var resource Dashboard
	err := ctx.RegisterResource("wavefront:index/dashboard:Dashboard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDashboard gets an existing Dashboard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDashboard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DashboardState, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	var resource Dashboard
	err := ctx.ReadResource("wavefront:index/dashboard:Dashboard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dashboard resources.
type dashboardState struct {
	// A list of users that have modify ACL access to the dashboard
	CanModifies []string `pulumi:"canModifies"`
	// A list of users that have view ACL access to the dashboard
	CanViews []string `pulumi:"canViews"`
	// Human-readable description of the dashboard
	Description *string `pulumi:"description"`
	// Whether the dashboard parameters section is opened by default when the dashboard
	// is shown
	DisplayQueryParameters *bool `pulumi:"displayQueryParameters"`
	// Whether the "pills" quick-linked the sections of the dashboard are
	// displayed by default when the dashboard is shown
	DisplaySectionTableOfContents *bool `pulumi:"displaySectionTableOfContents"`
	// How charts belonging to this dashboard should display events. BYCHART is default if
	// unspecified; Valid options are: `BYCHART`, `AUTOMATIC`, `ALL`, `NONE`, `BYDASHBOARD`, and `BYCHARTANDDASHBOARD`
	EventFilterType *string `pulumi:"eventFilterType"`
	// Name of the dashboard
	Name *string `pulumi:"name"`
	// The current JSON representation of dashboard parameters. See parameter details
	ParameterDetails []DashboardParameterDetail `pulumi:"parameterDetails"`
	// Dashboard chart sections. See dashboard sections
	Sections []DashboardSection `pulumi:"sections"`
	// A set of tags to assign to this resource.
	Tags []string `pulumi:"tags"`
	// Unique identifier, also URL slug, of the dashboard
	Url *string `pulumi:"url"`
}

type DashboardState struct {
	// A list of users that have modify ACL access to the dashboard
	CanModifies pulumi.StringArrayInput
	// A list of users that have view ACL access to the dashboard
	CanViews pulumi.StringArrayInput
	// Human-readable description of the dashboard
	Description pulumi.StringPtrInput
	// Whether the dashboard parameters section is opened by default when the dashboard
	// is shown
	DisplayQueryParameters pulumi.BoolPtrInput
	// Whether the "pills" quick-linked the sections of the dashboard are
	// displayed by default when the dashboard is shown
	DisplaySectionTableOfContents pulumi.BoolPtrInput
	// How charts belonging to this dashboard should display events. BYCHART is default if
	// unspecified; Valid options are: `BYCHART`, `AUTOMATIC`, `ALL`, `NONE`, `BYDASHBOARD`, and `BYCHARTANDDASHBOARD`
	EventFilterType pulumi.StringPtrInput
	// Name of the dashboard
	Name pulumi.StringPtrInput
	// The current JSON representation of dashboard parameters. See parameter details
	ParameterDetails DashboardParameterDetailArrayInput
	// Dashboard chart sections. See dashboard sections
	Sections DashboardSectionArrayInput
	// A set of tags to assign to this resource.
	Tags pulumi.StringArrayInput
	// Unique identifier, also URL slug, of the dashboard
	Url pulumi.StringPtrInput
}

func (DashboardState) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardState)(nil)).Elem()
}

type dashboardArgs struct {
	// A list of users that have modify ACL access to the dashboard
	CanModifies []string `pulumi:"canModifies"`
	// A list of users that have view ACL access to the dashboard
	CanViews []string `pulumi:"canViews"`
	// Human-readable description of the dashboard
	Description string `pulumi:"description"`
	// Whether the dashboard parameters section is opened by default when the dashboard
	// is shown
	DisplayQueryParameters *bool `pulumi:"displayQueryParameters"`
	// Whether the "pills" quick-linked the sections of the dashboard are
	// displayed by default when the dashboard is shown
	DisplaySectionTableOfContents *bool `pulumi:"displaySectionTableOfContents"`
	// How charts belonging to this dashboard should display events. BYCHART is default if
	// unspecified; Valid options are: `BYCHART`, `AUTOMATIC`, `ALL`, `NONE`, `BYDASHBOARD`, and `BYCHARTANDDASHBOARD`
	EventFilterType *string `pulumi:"eventFilterType"`
	// Name of the dashboard
	Name *string `pulumi:"name"`
	// The current JSON representation of dashboard parameters. See parameter details
	ParameterDetails []DashboardParameterDetail `pulumi:"parameterDetails"`
	// Dashboard chart sections. See dashboard sections
	Sections []DashboardSection `pulumi:"sections"`
	// A set of tags to assign to this resource.
	Tags []string `pulumi:"tags"`
	// Unique identifier, also URL slug, of the dashboard
	Url string `pulumi:"url"`
}

// The set of arguments for constructing a Dashboard resource.
type DashboardArgs struct {
	// A list of users that have modify ACL access to the dashboard
	CanModifies pulumi.StringArrayInput
	// A list of users that have view ACL access to the dashboard
	CanViews pulumi.StringArrayInput
	// Human-readable description of the dashboard
	Description pulumi.StringInput
	// Whether the dashboard parameters section is opened by default when the dashboard
	// is shown
	DisplayQueryParameters pulumi.BoolPtrInput
	// Whether the "pills" quick-linked the sections of the dashboard are
	// displayed by default when the dashboard is shown
	DisplaySectionTableOfContents pulumi.BoolPtrInput
	// How charts belonging to this dashboard should display events. BYCHART is default if
	// unspecified; Valid options are: `BYCHART`, `AUTOMATIC`, `ALL`, `NONE`, `BYDASHBOARD`, and `BYCHARTANDDASHBOARD`
	EventFilterType pulumi.StringPtrInput
	// Name of the dashboard
	Name pulumi.StringPtrInput
	// The current JSON representation of dashboard parameters. See parameter details
	ParameterDetails DashboardParameterDetailArrayInput
	// Dashboard chart sections. See dashboard sections
	Sections DashboardSectionArrayInput
	// A set of tags to assign to this resource.
	Tags pulumi.StringArrayInput
	// Unique identifier, also URL slug, of the dashboard
	Url pulumi.StringInput
}

func (DashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardArgs)(nil)).Elem()
}
