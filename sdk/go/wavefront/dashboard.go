// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Dashboard struct {
	pulumi.CustomResourceState

	CanModifies                   pulumi.StringArrayOutput            `pulumi:"canModifies"`
	CanViews                      pulumi.StringArrayOutput            `pulumi:"canViews"`
	Description                   pulumi.StringOutput                 `pulumi:"description"`
	DisplayQueryParameters        pulumi.BoolPtrOutput                `pulumi:"displayQueryParameters"`
	DisplaySectionTableOfContents pulumi.BoolPtrOutput                `pulumi:"displaySectionTableOfContents"`
	EventFilterType               pulumi.StringPtrOutput              `pulumi:"eventFilterType"`
	Name                          pulumi.StringOutput                 `pulumi:"name"`
	ParameterDetails              DashboardParameterDetailArrayOutput `pulumi:"parameterDetails"`
	// Sections of a Dashboard
	Sections DashboardSectionArrayOutput `pulumi:"sections"`
	Tags     pulumi.StringArrayOutput    `pulumi:"tags"`
	Url      pulumi.StringOutput         `pulumi:"url"`
}

// NewDashboard registers a new resource with the given unique name, arguments, and options.
func NewDashboard(ctx *pulumi.Context,
	name string, args *DashboardArgs, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	if args == nil || args.Description == nil {
		return nil, errors.New("missing required argument 'Description'")
	}
	if args == nil || args.Sections == nil {
		return nil, errors.New("missing required argument 'Sections'")
	}
	if args == nil || args.Tags == nil {
		return nil, errors.New("missing required argument 'Tags'")
	}
	if args == nil || args.Url == nil {
		return nil, errors.New("missing required argument 'Url'")
	}
	if args == nil {
		args = &DashboardArgs{}
	}
	var resource Dashboard
	err := ctx.RegisterResource("wavefront:index/dashboard:Dashboard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDashboard gets an existing Dashboard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDashboard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DashboardState, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	var resource Dashboard
	err := ctx.ReadResource("wavefront:index/dashboard:Dashboard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dashboard resources.
type dashboardState struct {
	CanModifies                   []string                   `pulumi:"canModifies"`
	CanViews                      []string                   `pulumi:"canViews"`
	Description                   *string                    `pulumi:"description"`
	DisplayQueryParameters        *bool                      `pulumi:"displayQueryParameters"`
	DisplaySectionTableOfContents *bool                      `pulumi:"displaySectionTableOfContents"`
	EventFilterType               *string                    `pulumi:"eventFilterType"`
	Name                          *string                    `pulumi:"name"`
	ParameterDetails              []DashboardParameterDetail `pulumi:"parameterDetails"`
	// Sections of a Dashboard
	Sections []DashboardSection `pulumi:"sections"`
	Tags     []string           `pulumi:"tags"`
	Url      *string            `pulumi:"url"`
}

type DashboardState struct {
	CanModifies                   pulumi.StringArrayInput
	CanViews                      pulumi.StringArrayInput
	Description                   pulumi.StringPtrInput
	DisplayQueryParameters        pulumi.BoolPtrInput
	DisplaySectionTableOfContents pulumi.BoolPtrInput
	EventFilterType               pulumi.StringPtrInput
	Name                          pulumi.StringPtrInput
	ParameterDetails              DashboardParameterDetailArrayInput
	// Sections of a Dashboard
	Sections DashboardSectionArrayInput
	Tags     pulumi.StringArrayInput
	Url      pulumi.StringPtrInput
}

func (DashboardState) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardState)(nil)).Elem()
}

type dashboardArgs struct {
	CanModifies                   []string                   `pulumi:"canModifies"`
	CanViews                      []string                   `pulumi:"canViews"`
	Description                   string                     `pulumi:"description"`
	DisplayQueryParameters        *bool                      `pulumi:"displayQueryParameters"`
	DisplaySectionTableOfContents *bool                      `pulumi:"displaySectionTableOfContents"`
	EventFilterType               *string                    `pulumi:"eventFilterType"`
	Name                          *string                    `pulumi:"name"`
	ParameterDetails              []DashboardParameterDetail `pulumi:"parameterDetails"`
	// Sections of a Dashboard
	Sections []DashboardSection `pulumi:"sections"`
	Tags     []string           `pulumi:"tags"`
	Url      string             `pulumi:"url"`
}

// The set of arguments for constructing a Dashboard resource.
type DashboardArgs struct {
	CanModifies                   pulumi.StringArrayInput
	CanViews                      pulumi.StringArrayInput
	Description                   pulumi.StringInput
	DisplayQueryParameters        pulumi.BoolPtrInput
	DisplaySectionTableOfContents pulumi.BoolPtrInput
	EventFilterType               pulumi.StringPtrInput
	Name                          pulumi.StringPtrInput
	ParameterDetails              DashboardParameterDetailArrayInput
	// Sections of a Dashboard
	Sections DashboardSectionArrayInput
	Tags     pulumi.StringArrayInput
	Url      pulumi.StringInput
}

func (DashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardArgs)(nil)).Elem()
}
