// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CloudIntegrationGcp struct {
	pulumi.CustomResourceState

	AdditionalTags              pulumi.StringMapOutput   `pulumi:"additionalTags"`
	Categories                  pulumi.StringArrayOutput `pulumi:"categories"`
	ForceSave                   pulumi.BoolPtrOutput     `pulumi:"forceSave"`
	JsonKey                     pulumi.StringOutput      `pulumi:"jsonKey"`
	MetricFilterRegex           pulumi.StringPtrOutput   `pulumi:"metricFilterRegex"`
	Name                        pulumi.StringOutput      `pulumi:"name"`
	ProjectId                   pulumi.StringOutput      `pulumi:"projectId"`
	Service                     pulumi.StringOutput      `pulumi:"service"`
	ServiceRefreshRateInMinutes pulumi.IntPtrOutput      `pulumi:"serviceRefreshRateInMinutes"`
}

// NewCloudIntegrationGcp registers a new resource with the given unique name, arguments, and options.
func NewCloudIntegrationGcp(ctx *pulumi.Context,
	name string, args *CloudIntegrationGcpArgs, opts ...pulumi.ResourceOption) (*CloudIntegrationGcp, error) {
	if args == nil || args.JsonKey == nil {
		return nil, errors.New("missing required argument 'JsonKey'")
	}
	if args == nil || args.ProjectId == nil {
		return nil, errors.New("missing required argument 'ProjectId'")
	}
	if args == nil || args.Service == nil {
		return nil, errors.New("missing required argument 'Service'")
	}
	if args == nil {
		args = &CloudIntegrationGcpArgs{}
	}
	var resource CloudIntegrationGcp
	err := ctx.RegisterResource("wavefront:index/cloudIntegrationGcp:CloudIntegrationGcp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudIntegrationGcp gets an existing CloudIntegrationGcp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudIntegrationGcp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudIntegrationGcpState, opts ...pulumi.ResourceOption) (*CloudIntegrationGcp, error) {
	var resource CloudIntegrationGcp
	err := ctx.ReadResource("wavefront:index/cloudIntegrationGcp:CloudIntegrationGcp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudIntegrationGcp resources.
type cloudIntegrationGcpState struct {
	AdditionalTags              map[string]string `pulumi:"additionalTags"`
	Categories                  []string          `pulumi:"categories"`
	ForceSave                   *bool             `pulumi:"forceSave"`
	JsonKey                     *string           `pulumi:"jsonKey"`
	MetricFilterRegex           *string           `pulumi:"metricFilterRegex"`
	Name                        *string           `pulumi:"name"`
	ProjectId                   *string           `pulumi:"projectId"`
	Service                     *string           `pulumi:"service"`
	ServiceRefreshRateInMinutes *int              `pulumi:"serviceRefreshRateInMinutes"`
}

type CloudIntegrationGcpState struct {
	AdditionalTags              pulumi.StringMapInput
	Categories                  pulumi.StringArrayInput
	ForceSave                   pulumi.BoolPtrInput
	JsonKey                     pulumi.StringPtrInput
	MetricFilterRegex           pulumi.StringPtrInput
	Name                        pulumi.StringPtrInput
	ProjectId                   pulumi.StringPtrInput
	Service                     pulumi.StringPtrInput
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
}

func (CloudIntegrationGcpState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationGcpState)(nil)).Elem()
}

type cloudIntegrationGcpArgs struct {
	AdditionalTags              map[string]string `pulumi:"additionalTags"`
	Categories                  []string          `pulumi:"categories"`
	ForceSave                   *bool             `pulumi:"forceSave"`
	JsonKey                     string            `pulumi:"jsonKey"`
	MetricFilterRegex           *string           `pulumi:"metricFilterRegex"`
	Name                        *string           `pulumi:"name"`
	ProjectId                   string            `pulumi:"projectId"`
	Service                     string            `pulumi:"service"`
	ServiceRefreshRateInMinutes *int              `pulumi:"serviceRefreshRateInMinutes"`
}

// The set of arguments for constructing a CloudIntegrationGcp resource.
type CloudIntegrationGcpArgs struct {
	AdditionalTags              pulumi.StringMapInput
	Categories                  pulumi.StringArrayInput
	ForceSave                   pulumi.BoolPtrInput
	JsonKey                     pulumi.StringInput
	MetricFilterRegex           pulumi.StringPtrInput
	Name                        pulumi.StringPtrInput
	ProjectId                   pulumi.StringInput
	Service                     pulumi.StringInput
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
}

func (CloudIntegrationGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationGcpArgs)(nil)).Elem()
}
