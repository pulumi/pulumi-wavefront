// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CloudIntegrationNewRelic struct {
	pulumi.CustomResourceState

	AdditionalTags              pulumi.StringMapOutput                          `pulumi:"additionalTags"`
	ApiKey                      pulumi.StringOutput                             `pulumi:"apiKey"`
	AppFilterRegex              pulumi.StringPtrOutput                          `pulumi:"appFilterRegex"`
	ForceSave                   pulumi.BoolPtrOutput                            `pulumi:"forceSave"`
	HostFilterRegex             pulumi.StringPtrOutput                          `pulumi:"hostFilterRegex"`
	MetricFilters               CloudIntegrationNewRelicMetricFilterArrayOutput `pulumi:"metricFilters"`
	Name                        pulumi.StringOutput                             `pulumi:"name"`
	Service                     pulumi.StringOutput                             `pulumi:"service"`
	ServiceRefreshRateInMinutes pulumi.IntPtrOutput                             `pulumi:"serviceRefreshRateInMinutes"`
}

// NewCloudIntegrationNewRelic registers a new resource with the given unique name, arguments, and options.
func NewCloudIntegrationNewRelic(ctx *pulumi.Context,
	name string, args *CloudIntegrationNewRelicArgs, opts ...pulumi.ResourceOption) (*CloudIntegrationNewRelic, error) {
	if args == nil || args.ApiKey == nil {
		return nil, errors.New("missing required argument 'ApiKey'")
	}
	if args == nil || args.Service == nil {
		return nil, errors.New("missing required argument 'Service'")
	}
	if args == nil {
		args = &CloudIntegrationNewRelicArgs{}
	}
	var resource CloudIntegrationNewRelic
	err := ctx.RegisterResource("wavefront:index/cloudIntegrationNewRelic:CloudIntegrationNewRelic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudIntegrationNewRelic gets an existing CloudIntegrationNewRelic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudIntegrationNewRelic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudIntegrationNewRelicState, opts ...pulumi.ResourceOption) (*CloudIntegrationNewRelic, error) {
	var resource CloudIntegrationNewRelic
	err := ctx.ReadResource("wavefront:index/cloudIntegrationNewRelic:CloudIntegrationNewRelic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudIntegrationNewRelic resources.
type cloudIntegrationNewRelicState struct {
	AdditionalTags              map[string]string                      `pulumi:"additionalTags"`
	ApiKey                      *string                                `pulumi:"apiKey"`
	AppFilterRegex              *string                                `pulumi:"appFilterRegex"`
	ForceSave                   *bool                                  `pulumi:"forceSave"`
	HostFilterRegex             *string                                `pulumi:"hostFilterRegex"`
	MetricFilters               []CloudIntegrationNewRelicMetricFilter `pulumi:"metricFilters"`
	Name                        *string                                `pulumi:"name"`
	Service                     *string                                `pulumi:"service"`
	ServiceRefreshRateInMinutes *int                                   `pulumi:"serviceRefreshRateInMinutes"`
}

type CloudIntegrationNewRelicState struct {
	AdditionalTags              pulumi.StringMapInput
	ApiKey                      pulumi.StringPtrInput
	AppFilterRegex              pulumi.StringPtrInput
	ForceSave                   pulumi.BoolPtrInput
	HostFilterRegex             pulumi.StringPtrInput
	MetricFilters               CloudIntegrationNewRelicMetricFilterArrayInput
	Name                        pulumi.StringPtrInput
	Service                     pulumi.StringPtrInput
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
}

func (CloudIntegrationNewRelicState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationNewRelicState)(nil)).Elem()
}

type cloudIntegrationNewRelicArgs struct {
	AdditionalTags              map[string]string                      `pulumi:"additionalTags"`
	ApiKey                      string                                 `pulumi:"apiKey"`
	AppFilterRegex              *string                                `pulumi:"appFilterRegex"`
	ForceSave                   *bool                                  `pulumi:"forceSave"`
	HostFilterRegex             *string                                `pulumi:"hostFilterRegex"`
	MetricFilters               []CloudIntegrationNewRelicMetricFilter `pulumi:"metricFilters"`
	Name                        *string                                `pulumi:"name"`
	Service                     string                                 `pulumi:"service"`
	ServiceRefreshRateInMinutes *int                                   `pulumi:"serviceRefreshRateInMinutes"`
}

// The set of arguments for constructing a CloudIntegrationNewRelic resource.
type CloudIntegrationNewRelicArgs struct {
	AdditionalTags              pulumi.StringMapInput
	ApiKey                      pulumi.StringInput
	AppFilterRegex              pulumi.StringPtrInput
	ForceSave                   pulumi.BoolPtrInput
	HostFilterRegex             pulumi.StringPtrInput
	MetricFilters               CloudIntegrationNewRelicMetricFilterArrayInput
	Name                        pulumi.StringPtrInput
	Service                     pulumi.StringInput
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
}

func (CloudIntegrationNewRelicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationNewRelicArgs)(nil)).Elem()
}
