// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CloudIntegrationCloudTrail struct {
	pulumi.CustomResourceState

	AdditionalTags              pulumi.StringMapOutput `pulumi:"additionalTags"`
	BucketName                  pulumi.StringOutput    `pulumi:"bucketName"`
	ExternalId                  pulumi.StringOutput    `pulumi:"externalId"`
	FilterRule                  pulumi.StringPtrOutput `pulumi:"filterRule"`
	ForceSave                   pulumi.BoolPtrOutput   `pulumi:"forceSave"`
	Name                        pulumi.StringOutput    `pulumi:"name"`
	Prefix                      pulumi.StringPtrOutput `pulumi:"prefix"`
	Region                      pulumi.StringOutput    `pulumi:"region"`
	RoleArn                     pulumi.StringOutput    `pulumi:"roleArn"`
	Service                     pulumi.StringOutput    `pulumi:"service"`
	ServiceRefreshRateInMinutes pulumi.IntPtrOutput    `pulumi:"serviceRefreshRateInMinutes"`
}

// NewCloudIntegrationCloudTrail registers a new resource with the given unique name, arguments, and options.
func NewCloudIntegrationCloudTrail(ctx *pulumi.Context,
	name string, args *CloudIntegrationCloudTrailArgs, opts ...pulumi.ResourceOption) (*CloudIntegrationCloudTrail, error) {
	if args == nil || args.BucketName == nil {
		return nil, errors.New("missing required argument 'BucketName'")
	}
	if args == nil || args.ExternalId == nil {
		return nil, errors.New("missing required argument 'ExternalId'")
	}
	if args == nil || args.Region == nil {
		return nil, errors.New("missing required argument 'Region'")
	}
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	if args == nil || args.Service == nil {
		return nil, errors.New("missing required argument 'Service'")
	}
	if args == nil {
		args = &CloudIntegrationCloudTrailArgs{}
	}
	var resource CloudIntegrationCloudTrail
	err := ctx.RegisterResource("wavefront:index/cloudIntegrationCloudTrail:CloudIntegrationCloudTrail", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudIntegrationCloudTrail gets an existing CloudIntegrationCloudTrail resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudIntegrationCloudTrail(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudIntegrationCloudTrailState, opts ...pulumi.ResourceOption) (*CloudIntegrationCloudTrail, error) {
	var resource CloudIntegrationCloudTrail
	err := ctx.ReadResource("wavefront:index/cloudIntegrationCloudTrail:CloudIntegrationCloudTrail", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudIntegrationCloudTrail resources.
type cloudIntegrationCloudTrailState struct {
	AdditionalTags              map[string]string `pulumi:"additionalTags"`
	BucketName                  *string           `pulumi:"bucketName"`
	ExternalId                  *string           `pulumi:"externalId"`
	FilterRule                  *string           `pulumi:"filterRule"`
	ForceSave                   *bool             `pulumi:"forceSave"`
	Name                        *string           `pulumi:"name"`
	Prefix                      *string           `pulumi:"prefix"`
	Region                      *string           `pulumi:"region"`
	RoleArn                     *string           `pulumi:"roleArn"`
	Service                     *string           `pulumi:"service"`
	ServiceRefreshRateInMinutes *int              `pulumi:"serviceRefreshRateInMinutes"`
}

type CloudIntegrationCloudTrailState struct {
	AdditionalTags              pulumi.StringMapInput
	BucketName                  pulumi.StringPtrInput
	ExternalId                  pulumi.StringPtrInput
	FilterRule                  pulumi.StringPtrInput
	ForceSave                   pulumi.BoolPtrInput
	Name                        pulumi.StringPtrInput
	Prefix                      pulumi.StringPtrInput
	Region                      pulumi.StringPtrInput
	RoleArn                     pulumi.StringPtrInput
	Service                     pulumi.StringPtrInput
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
}

func (CloudIntegrationCloudTrailState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationCloudTrailState)(nil)).Elem()
}

type cloudIntegrationCloudTrailArgs struct {
	AdditionalTags              map[string]string `pulumi:"additionalTags"`
	BucketName                  string            `pulumi:"bucketName"`
	ExternalId                  string            `pulumi:"externalId"`
	FilterRule                  *string           `pulumi:"filterRule"`
	ForceSave                   *bool             `pulumi:"forceSave"`
	Name                        *string           `pulumi:"name"`
	Prefix                      *string           `pulumi:"prefix"`
	Region                      string            `pulumi:"region"`
	RoleArn                     string            `pulumi:"roleArn"`
	Service                     string            `pulumi:"service"`
	ServiceRefreshRateInMinutes *int              `pulumi:"serviceRefreshRateInMinutes"`
}

// The set of arguments for constructing a CloudIntegrationCloudTrail resource.
type CloudIntegrationCloudTrailArgs struct {
	AdditionalTags              pulumi.StringMapInput
	BucketName                  pulumi.StringInput
	ExternalId                  pulumi.StringInput
	FilterRule                  pulumi.StringPtrInput
	ForceSave                   pulumi.BoolPtrInput
	Name                        pulumi.StringPtrInput
	Prefix                      pulumi.StringPtrInput
	Region                      pulumi.StringInput
	RoleArn                     pulumi.StringInput
	Service                     pulumi.StringInput
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
}

func (CloudIntegrationCloudTrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationCloudTrailArgs)(nil)).Elem()
}
