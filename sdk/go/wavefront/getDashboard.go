// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a certain Wavefront dashboard by its ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Get the information about a dashboard.
//			_, err := wavefront.LookupDashboard(ctx, &wavefront.LookupDashboardArgs{
//				Id: "dashboard-id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDashboard(ctx *pulumi.Context, args *LookupDashboardArgs, opts ...pulumi.InvokeOption) (*LookupDashboardResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDashboardResult
	err := ctx.Invoke("wavefront:index/getDashboard:getDashboard", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDashboard.
type LookupDashboardArgs struct {
	// The ID associated with the dashboard data to be fetched.
	Id string `pulumi:"id"`
}

// A collection of values returned by getDashboard.
type LookupDashboardResult struct {
	// A list of users that have modify ACL access to the dashboard.
	CanModifies []string `pulumi:"canModifies"`
	// A list of users that have view ACL access to the dashboard.
	CanViews           []string `pulumi:"canViews"`
	ChartTitleBgColor  string   `pulumi:"chartTitleBgColor"`
	ChartTitleColor    string   `pulumi:"chartTitleColor"`
	ChartTitleScalar   int      `pulumi:"chartTitleScalar"`
	CreatedEpochMillis int      `pulumi:"createdEpochMillis"`
	CreatorId          string   `pulumi:"creatorId"`
	Customer           string   `pulumi:"customer"`
	DefaultEndTime     int      `pulumi:"defaultEndTime"`
	DefaultStartTime   int      `pulumi:"defaultStartTime"`
	DefaultTimeWindow  string   `pulumi:"defaultTimeWindow"`
	Deleted            bool     `pulumi:"deleted"`
	// Description of the chart.
	Description        string `pulumi:"description"`
	DisplayDescription bool   `pulumi:"displayDescription"`
	// Whether the dashboard parameters section is opened by default when the dashboard
	// is shown.
	DisplayQueryParameters bool `pulumi:"displayQueryParameters"`
	// Whether the "pills" quick-linked the sections of the dashboard are
	// displayed by default when the dashboard is shown.
	DisplaySectionTableOfContents bool `pulumi:"displaySectionTableOfContents"`
	// How charts belonging to this dashboard should display events. `BYCHART` is default if
	// unspecified. Valid options are: `BYCHART`, `AUTOMATIC`, `ALL`, `NONE`, `BYDASHBOARD`, and `BYCHARTANDDASHBOARD`.
	EventFilterType string `pulumi:"eventFilterType"`
	EventQuery      string `pulumi:"eventQuery"`
	Favorite        bool   `pulumi:"favorite"`
	Hidden          bool   `pulumi:"hidden"`
	Id              string `pulumi:"id"`
	// The name of the parameters.
	Name         string `pulumi:"name"`
	NumCharts    int    `pulumi:"numCharts"`
	NumFavorites int    `pulumi:"numFavorites"`
	// The current JSON representation of dashboard parameters. See parameter details.
	ParameterDetails []GetDashboardParameterDetail `pulumi:"parameterDetails"`
	Parameters       map[string]interface{}        `pulumi:"parameters"`
	Sections         []GetDashboardSection         `pulumi:"sections"`
	SystemOwned      bool                          `pulumi:"systemOwned"`
	// A set of tags to assign to this resource.
	Tags               []string `pulumi:"tags"`
	UpdatedEpochMillis int      `pulumi:"updatedEpochMillis"`
	UpdaterId          string   `pulumi:"updaterId"`
	// Unique identifier, also a URL slug of the dashboard.
	Url            string `pulumi:"url"`
	ViewsLastDay   int    `pulumi:"viewsLastDay"`
	ViewsLastMonth int    `pulumi:"viewsLastMonth"`
	ViewsLastWeek  int    `pulumi:"viewsLastWeek"`
}

func LookupDashboardOutput(ctx *pulumi.Context, args LookupDashboardOutputArgs, opts ...pulumi.InvokeOption) LookupDashboardResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDashboardResult, error) {
			args := v.(LookupDashboardArgs)
			r, err := LookupDashboard(ctx, &args, opts...)
			var s LookupDashboardResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDashboardResultOutput)
}

// A collection of arguments for invoking getDashboard.
type LookupDashboardOutputArgs struct {
	// The ID associated with the dashboard data to be fetched.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupDashboardOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDashboardArgs)(nil)).Elem()
}

// A collection of values returned by getDashboard.
type LookupDashboardResultOutput struct{ *pulumi.OutputState }

func (LookupDashboardResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDashboardResult)(nil)).Elem()
}

func (o LookupDashboardResultOutput) ToLookupDashboardResultOutput() LookupDashboardResultOutput {
	return o
}

func (o LookupDashboardResultOutput) ToLookupDashboardResultOutputWithContext(ctx context.Context) LookupDashboardResultOutput {
	return o
}

// A list of users that have modify ACL access to the dashboard.
func (o LookupDashboardResultOutput) CanModifies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDashboardResult) []string { return v.CanModifies }).(pulumi.StringArrayOutput)
}

// A list of users that have view ACL access to the dashboard.
func (o LookupDashboardResultOutput) CanViews() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDashboardResult) []string { return v.CanViews }).(pulumi.StringArrayOutput)
}

func (o LookupDashboardResultOutput) ChartTitleBgColor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.ChartTitleBgColor }).(pulumi.StringOutput)
}

func (o LookupDashboardResultOutput) ChartTitleColor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.ChartTitleColor }).(pulumi.StringOutput)
}

func (o LookupDashboardResultOutput) ChartTitleScalar() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDashboardResult) int { return v.ChartTitleScalar }).(pulumi.IntOutput)
}

func (o LookupDashboardResultOutput) CreatedEpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDashboardResult) int { return v.CreatedEpochMillis }).(pulumi.IntOutput)
}

func (o LookupDashboardResultOutput) CreatorId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.CreatorId }).(pulumi.StringOutput)
}

func (o LookupDashboardResultOutput) Customer() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.Customer }).(pulumi.StringOutput)
}

func (o LookupDashboardResultOutput) DefaultEndTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDashboardResult) int { return v.DefaultEndTime }).(pulumi.IntOutput)
}

func (o LookupDashboardResultOutput) DefaultStartTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDashboardResult) int { return v.DefaultStartTime }).(pulumi.IntOutput)
}

func (o LookupDashboardResultOutput) DefaultTimeWindow() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.DefaultTimeWindow }).(pulumi.StringOutput)
}

func (o LookupDashboardResultOutput) Deleted() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDashboardResult) bool { return v.Deleted }).(pulumi.BoolOutput)
}

// Description of the chart.
func (o LookupDashboardResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupDashboardResultOutput) DisplayDescription() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDashboardResult) bool { return v.DisplayDescription }).(pulumi.BoolOutput)
}

// Whether the dashboard parameters section is opened by default when the dashboard
// is shown.
func (o LookupDashboardResultOutput) DisplayQueryParameters() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDashboardResult) bool { return v.DisplayQueryParameters }).(pulumi.BoolOutput)
}

// Whether the "pills" quick-linked the sections of the dashboard are
// displayed by default when the dashboard is shown.
func (o LookupDashboardResultOutput) DisplaySectionTableOfContents() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDashboardResult) bool { return v.DisplaySectionTableOfContents }).(pulumi.BoolOutput)
}

// How charts belonging to this dashboard should display events. `BYCHART` is default if
// unspecified. Valid options are: `BYCHART`, `AUTOMATIC`, `ALL`, `NONE`, `BYDASHBOARD`, and `BYCHARTANDDASHBOARD`.
func (o LookupDashboardResultOutput) EventFilterType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.EventFilterType }).(pulumi.StringOutput)
}

func (o LookupDashboardResultOutput) EventQuery() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.EventQuery }).(pulumi.StringOutput)
}

func (o LookupDashboardResultOutput) Favorite() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDashboardResult) bool { return v.Favorite }).(pulumi.BoolOutput)
}

func (o LookupDashboardResultOutput) Hidden() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDashboardResult) bool { return v.Hidden }).(pulumi.BoolOutput)
}

func (o LookupDashboardResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the parameters.
func (o LookupDashboardResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDashboardResultOutput) NumCharts() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDashboardResult) int { return v.NumCharts }).(pulumi.IntOutput)
}

func (o LookupDashboardResultOutput) NumFavorites() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDashboardResult) int { return v.NumFavorites }).(pulumi.IntOutput)
}

// The current JSON representation of dashboard parameters. See parameter details.
func (o LookupDashboardResultOutput) ParameterDetails() GetDashboardParameterDetailArrayOutput {
	return o.ApplyT(func(v LookupDashboardResult) []GetDashboardParameterDetail { return v.ParameterDetails }).(GetDashboardParameterDetailArrayOutput)
}

func (o LookupDashboardResultOutput) Parameters() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDashboardResult) map[string]interface{} { return v.Parameters }).(pulumi.MapOutput)
}

func (o LookupDashboardResultOutput) Sections() GetDashboardSectionArrayOutput {
	return o.ApplyT(func(v LookupDashboardResult) []GetDashboardSection { return v.Sections }).(GetDashboardSectionArrayOutput)
}

func (o LookupDashboardResultOutput) SystemOwned() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDashboardResult) bool { return v.SystemOwned }).(pulumi.BoolOutput)
}

// A set of tags to assign to this resource.
func (o LookupDashboardResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDashboardResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupDashboardResultOutput) UpdatedEpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDashboardResult) int { return v.UpdatedEpochMillis }).(pulumi.IntOutput)
}

func (o LookupDashboardResultOutput) UpdaterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.UpdaterId }).(pulumi.StringOutput)
}

// Unique identifier, also a URL slug of the dashboard.
func (o LookupDashboardResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.Url }).(pulumi.StringOutput)
}

func (o LookupDashboardResultOutput) ViewsLastDay() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDashboardResult) int { return v.ViewsLastDay }).(pulumi.IntOutput)
}

func (o LookupDashboardResultOutput) ViewsLastMonth() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDashboardResult) int { return v.ViewsLastMonth }).(pulumi.IntOutput)
}

func (o LookupDashboardResultOutput) ViewsLastWeek() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDashboardResult) int { return v.ViewsLastWeek }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDashboardResultOutput{})
}
