// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AlertTargetRoute struct {
	Filter map[string]string `pulumi:"filter"`
	Method string            `pulumi:"method"`
	Target string            `pulumi:"target"`
}

// AlertTargetRouteInput is an input type that accepts AlertTargetRouteArgs and AlertTargetRouteOutput values.
// You can construct a concrete instance of `AlertTargetRouteInput` via:
//
//          AlertTargetRouteArgs{...}
type AlertTargetRouteInput interface {
	pulumi.Input

	ToAlertTargetRouteOutput() AlertTargetRouteOutput
	ToAlertTargetRouteOutputWithContext(context.Context) AlertTargetRouteOutput
}

type AlertTargetRouteArgs struct {
	Filter pulumi.StringMapInput `pulumi:"filter"`
	Method pulumi.StringInput    `pulumi:"method"`
	Target pulumi.StringInput    `pulumi:"target"`
}

func (AlertTargetRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertTargetRoute)(nil)).Elem()
}

func (i AlertTargetRouteArgs) ToAlertTargetRouteOutput() AlertTargetRouteOutput {
	return i.ToAlertTargetRouteOutputWithContext(context.Background())
}

func (i AlertTargetRouteArgs) ToAlertTargetRouteOutputWithContext(ctx context.Context) AlertTargetRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertTargetRouteOutput)
}

// AlertTargetRouteArrayInput is an input type that accepts AlertTargetRouteArray and AlertTargetRouteArrayOutput values.
// You can construct a concrete instance of `AlertTargetRouteArrayInput` via:
//
//          AlertTargetRouteArray{ AlertTargetRouteArgs{...} }
type AlertTargetRouteArrayInput interface {
	pulumi.Input

	ToAlertTargetRouteArrayOutput() AlertTargetRouteArrayOutput
	ToAlertTargetRouteArrayOutputWithContext(context.Context) AlertTargetRouteArrayOutput
}

type AlertTargetRouteArray []AlertTargetRouteInput

func (AlertTargetRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertTargetRoute)(nil)).Elem()
}

func (i AlertTargetRouteArray) ToAlertTargetRouteArrayOutput() AlertTargetRouteArrayOutput {
	return i.ToAlertTargetRouteArrayOutputWithContext(context.Background())
}

func (i AlertTargetRouteArray) ToAlertTargetRouteArrayOutputWithContext(ctx context.Context) AlertTargetRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertTargetRouteArrayOutput)
}

type AlertTargetRouteOutput struct{ *pulumi.OutputState }

func (AlertTargetRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertTargetRoute)(nil)).Elem()
}

func (o AlertTargetRouteOutput) ToAlertTargetRouteOutput() AlertTargetRouteOutput {
	return o
}

func (o AlertTargetRouteOutput) ToAlertTargetRouteOutputWithContext(ctx context.Context) AlertTargetRouteOutput {
	return o
}

func (o AlertTargetRouteOutput) Filter() pulumi.StringMapOutput {
	return o.ApplyT(func(v AlertTargetRoute) map[string]string { return v.Filter }).(pulumi.StringMapOutput)
}

func (o AlertTargetRouteOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v AlertTargetRoute) string { return v.Method }).(pulumi.StringOutput)
}

func (o AlertTargetRouteOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v AlertTargetRoute) string { return v.Target }).(pulumi.StringOutput)
}

type AlertTargetRouteArrayOutput struct{ *pulumi.OutputState }

func (AlertTargetRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertTargetRoute)(nil)).Elem()
}

func (o AlertTargetRouteArrayOutput) ToAlertTargetRouteArrayOutput() AlertTargetRouteArrayOutput {
	return o
}

func (o AlertTargetRouteArrayOutput) ToAlertTargetRouteArrayOutputWithContext(ctx context.Context) AlertTargetRouteArrayOutput {
	return o
}

func (o AlertTargetRouteArrayOutput) Index(i pulumi.IntInput) AlertTargetRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertTargetRoute {
		return vs[0].([]AlertTargetRoute)[vs[1].(int)]
	}).(AlertTargetRouteOutput)
}

type CloudIntegrationNewRelicMetricFilter struct {
	AppName           string `pulumi:"appName"`
	MetricFilterRegex string `pulumi:"metricFilterRegex"`
}

// CloudIntegrationNewRelicMetricFilterInput is an input type that accepts CloudIntegrationNewRelicMetricFilterArgs and CloudIntegrationNewRelicMetricFilterOutput values.
// You can construct a concrete instance of `CloudIntegrationNewRelicMetricFilterInput` via:
//
//          CloudIntegrationNewRelicMetricFilterArgs{...}
type CloudIntegrationNewRelicMetricFilterInput interface {
	pulumi.Input

	ToCloudIntegrationNewRelicMetricFilterOutput() CloudIntegrationNewRelicMetricFilterOutput
	ToCloudIntegrationNewRelicMetricFilterOutputWithContext(context.Context) CloudIntegrationNewRelicMetricFilterOutput
}

type CloudIntegrationNewRelicMetricFilterArgs struct {
	AppName           pulumi.StringInput `pulumi:"appName"`
	MetricFilterRegex pulumi.StringInput `pulumi:"metricFilterRegex"`
}

func (CloudIntegrationNewRelicMetricFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudIntegrationNewRelicMetricFilter)(nil)).Elem()
}

func (i CloudIntegrationNewRelicMetricFilterArgs) ToCloudIntegrationNewRelicMetricFilterOutput() CloudIntegrationNewRelicMetricFilterOutput {
	return i.ToCloudIntegrationNewRelicMetricFilterOutputWithContext(context.Background())
}

func (i CloudIntegrationNewRelicMetricFilterArgs) ToCloudIntegrationNewRelicMetricFilterOutputWithContext(ctx context.Context) CloudIntegrationNewRelicMetricFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudIntegrationNewRelicMetricFilterOutput)
}

// CloudIntegrationNewRelicMetricFilterArrayInput is an input type that accepts CloudIntegrationNewRelicMetricFilterArray and CloudIntegrationNewRelicMetricFilterArrayOutput values.
// You can construct a concrete instance of `CloudIntegrationNewRelicMetricFilterArrayInput` via:
//
//          CloudIntegrationNewRelicMetricFilterArray{ CloudIntegrationNewRelicMetricFilterArgs{...} }
type CloudIntegrationNewRelicMetricFilterArrayInput interface {
	pulumi.Input

	ToCloudIntegrationNewRelicMetricFilterArrayOutput() CloudIntegrationNewRelicMetricFilterArrayOutput
	ToCloudIntegrationNewRelicMetricFilterArrayOutputWithContext(context.Context) CloudIntegrationNewRelicMetricFilterArrayOutput
}

type CloudIntegrationNewRelicMetricFilterArray []CloudIntegrationNewRelicMetricFilterInput

func (CloudIntegrationNewRelicMetricFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudIntegrationNewRelicMetricFilter)(nil)).Elem()
}

func (i CloudIntegrationNewRelicMetricFilterArray) ToCloudIntegrationNewRelicMetricFilterArrayOutput() CloudIntegrationNewRelicMetricFilterArrayOutput {
	return i.ToCloudIntegrationNewRelicMetricFilterArrayOutputWithContext(context.Background())
}

func (i CloudIntegrationNewRelicMetricFilterArray) ToCloudIntegrationNewRelicMetricFilterArrayOutputWithContext(ctx context.Context) CloudIntegrationNewRelicMetricFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudIntegrationNewRelicMetricFilterArrayOutput)
}

type CloudIntegrationNewRelicMetricFilterOutput struct{ *pulumi.OutputState }

func (CloudIntegrationNewRelicMetricFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudIntegrationNewRelicMetricFilter)(nil)).Elem()
}

func (o CloudIntegrationNewRelicMetricFilterOutput) ToCloudIntegrationNewRelicMetricFilterOutput() CloudIntegrationNewRelicMetricFilterOutput {
	return o
}

func (o CloudIntegrationNewRelicMetricFilterOutput) ToCloudIntegrationNewRelicMetricFilterOutputWithContext(ctx context.Context) CloudIntegrationNewRelicMetricFilterOutput {
	return o
}

func (o CloudIntegrationNewRelicMetricFilterOutput) AppName() pulumi.StringOutput {
	return o.ApplyT(func(v CloudIntegrationNewRelicMetricFilter) string { return v.AppName }).(pulumi.StringOutput)
}

func (o CloudIntegrationNewRelicMetricFilterOutput) MetricFilterRegex() pulumi.StringOutput {
	return o.ApplyT(func(v CloudIntegrationNewRelicMetricFilter) string { return v.MetricFilterRegex }).(pulumi.StringOutput)
}

type CloudIntegrationNewRelicMetricFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudIntegrationNewRelicMetricFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudIntegrationNewRelicMetricFilter)(nil)).Elem()
}

func (o CloudIntegrationNewRelicMetricFilterArrayOutput) ToCloudIntegrationNewRelicMetricFilterArrayOutput() CloudIntegrationNewRelicMetricFilterArrayOutput {
	return o
}

func (o CloudIntegrationNewRelicMetricFilterArrayOutput) ToCloudIntegrationNewRelicMetricFilterArrayOutputWithContext(ctx context.Context) CloudIntegrationNewRelicMetricFilterArrayOutput {
	return o
}

func (o CloudIntegrationNewRelicMetricFilterArrayOutput) Index(i pulumi.IntInput) CloudIntegrationNewRelicMetricFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudIntegrationNewRelicMetricFilter {
		return vs[0].([]CloudIntegrationNewRelicMetricFilter)[vs[1].(int)]
	}).(CloudIntegrationNewRelicMetricFilterOutput)
}

type DashboardParameterDetail struct {
	DefaultValue            string            `pulumi:"defaultValue"`
	DynamicFieldType        *string           `pulumi:"dynamicFieldType"`
	HideFromView            bool              `pulumi:"hideFromView"`
	Label                   string            `pulumi:"label"`
	Name                    string            `pulumi:"name"`
	ParameterType           string            `pulumi:"parameterType"`
	QueryValue              *string           `pulumi:"queryValue"`
	TagKey                  *string           `pulumi:"tagKey"`
	ValuesToReadableStrings map[string]string `pulumi:"valuesToReadableStrings"`
}

// DashboardParameterDetailInput is an input type that accepts DashboardParameterDetailArgs and DashboardParameterDetailOutput values.
// You can construct a concrete instance of `DashboardParameterDetailInput` via:
//
//          DashboardParameterDetailArgs{...}
type DashboardParameterDetailInput interface {
	pulumi.Input

	ToDashboardParameterDetailOutput() DashboardParameterDetailOutput
	ToDashboardParameterDetailOutputWithContext(context.Context) DashboardParameterDetailOutput
}

type DashboardParameterDetailArgs struct {
	DefaultValue            pulumi.StringInput    `pulumi:"defaultValue"`
	DynamicFieldType        pulumi.StringPtrInput `pulumi:"dynamicFieldType"`
	HideFromView            pulumi.BoolInput      `pulumi:"hideFromView"`
	Label                   pulumi.StringInput    `pulumi:"label"`
	Name                    pulumi.StringInput    `pulumi:"name"`
	ParameterType           pulumi.StringInput    `pulumi:"parameterType"`
	QueryValue              pulumi.StringPtrInput `pulumi:"queryValue"`
	TagKey                  pulumi.StringPtrInput `pulumi:"tagKey"`
	ValuesToReadableStrings pulumi.StringMapInput `pulumi:"valuesToReadableStrings"`
}

func (DashboardParameterDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterDetail)(nil)).Elem()
}

func (i DashboardParameterDetailArgs) ToDashboardParameterDetailOutput() DashboardParameterDetailOutput {
	return i.ToDashboardParameterDetailOutputWithContext(context.Background())
}

func (i DashboardParameterDetailArgs) ToDashboardParameterDetailOutputWithContext(ctx context.Context) DashboardParameterDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterDetailOutput)
}

// DashboardParameterDetailArrayInput is an input type that accepts DashboardParameterDetailArray and DashboardParameterDetailArrayOutput values.
// You can construct a concrete instance of `DashboardParameterDetailArrayInput` via:
//
//          DashboardParameterDetailArray{ DashboardParameterDetailArgs{...} }
type DashboardParameterDetailArrayInput interface {
	pulumi.Input

	ToDashboardParameterDetailArrayOutput() DashboardParameterDetailArrayOutput
	ToDashboardParameterDetailArrayOutputWithContext(context.Context) DashboardParameterDetailArrayOutput
}

type DashboardParameterDetailArray []DashboardParameterDetailInput

func (DashboardParameterDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardParameterDetail)(nil)).Elem()
}

func (i DashboardParameterDetailArray) ToDashboardParameterDetailArrayOutput() DashboardParameterDetailArrayOutput {
	return i.ToDashboardParameterDetailArrayOutputWithContext(context.Background())
}

func (i DashboardParameterDetailArray) ToDashboardParameterDetailArrayOutputWithContext(ctx context.Context) DashboardParameterDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterDetailArrayOutput)
}

type DashboardParameterDetailOutput struct{ *pulumi.OutputState }

func (DashboardParameterDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterDetail)(nil)).Elem()
}

func (o DashboardParameterDetailOutput) ToDashboardParameterDetailOutput() DashboardParameterDetailOutput {
	return o
}

func (o DashboardParameterDetailOutput) ToDashboardParameterDetailOutputWithContext(ctx context.Context) DashboardParameterDetailOutput {
	return o
}

func (o DashboardParameterDetailOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterDetail) string { return v.DefaultValue }).(pulumi.StringOutput)
}

func (o DashboardParameterDetailOutput) DynamicFieldType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardParameterDetail) *string { return v.DynamicFieldType }).(pulumi.StringPtrOutput)
}

func (o DashboardParameterDetailOutput) HideFromView() pulumi.BoolOutput {
	return o.ApplyT(func(v DashboardParameterDetail) bool { return v.HideFromView }).(pulumi.BoolOutput)
}

func (o DashboardParameterDetailOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterDetail) string { return v.Label }).(pulumi.StringOutput)
}

func (o DashboardParameterDetailOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterDetail) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardParameterDetailOutput) ParameterType() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterDetail) string { return v.ParameterType }).(pulumi.StringOutput)
}

func (o DashboardParameterDetailOutput) QueryValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardParameterDetail) *string { return v.QueryValue }).(pulumi.StringPtrOutput)
}

func (o DashboardParameterDetailOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardParameterDetail) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

func (o DashboardParameterDetailOutput) ValuesToReadableStrings() pulumi.StringMapOutput {
	return o.ApplyT(func(v DashboardParameterDetail) map[string]string { return v.ValuesToReadableStrings }).(pulumi.StringMapOutput)
}

type DashboardParameterDetailArrayOutput struct{ *pulumi.OutputState }

func (DashboardParameterDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardParameterDetail)(nil)).Elem()
}

func (o DashboardParameterDetailArrayOutput) ToDashboardParameterDetailArrayOutput() DashboardParameterDetailArrayOutput {
	return o
}

func (o DashboardParameterDetailArrayOutput) ToDashboardParameterDetailArrayOutputWithContext(ctx context.Context) DashboardParameterDetailArrayOutput {
	return o
}

func (o DashboardParameterDetailArrayOutput) Index(i pulumi.IntInput) DashboardParameterDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardParameterDetail {
		return vs[0].([]DashboardParameterDetail)[vs[1].(int)]
	}).(DashboardParameterDetailOutput)
}

type DashboardSection struct {
	Name string                `pulumi:"name"`
	Rows []DashboardSectionRow `pulumi:"rows"`
}

// DashboardSectionInput is an input type that accepts DashboardSectionArgs and DashboardSectionOutput values.
// You can construct a concrete instance of `DashboardSectionInput` via:
//
//          DashboardSectionArgs{...}
type DashboardSectionInput interface {
	pulumi.Input

	ToDashboardSectionOutput() DashboardSectionOutput
	ToDashboardSectionOutputWithContext(context.Context) DashboardSectionOutput
}

type DashboardSectionArgs struct {
	Name pulumi.StringInput            `pulumi:"name"`
	Rows DashboardSectionRowArrayInput `pulumi:"rows"`
}

func (DashboardSectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSection)(nil)).Elem()
}

func (i DashboardSectionArgs) ToDashboardSectionOutput() DashboardSectionOutput {
	return i.ToDashboardSectionOutputWithContext(context.Background())
}

func (i DashboardSectionArgs) ToDashboardSectionOutputWithContext(ctx context.Context) DashboardSectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionOutput)
}

// DashboardSectionArrayInput is an input type that accepts DashboardSectionArray and DashboardSectionArrayOutput values.
// You can construct a concrete instance of `DashboardSectionArrayInput` via:
//
//          DashboardSectionArray{ DashboardSectionArgs{...} }
type DashboardSectionArrayInput interface {
	pulumi.Input

	ToDashboardSectionArrayOutput() DashboardSectionArrayOutput
	ToDashboardSectionArrayOutputWithContext(context.Context) DashboardSectionArrayOutput
}

type DashboardSectionArray []DashboardSectionInput

func (DashboardSectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSection)(nil)).Elem()
}

func (i DashboardSectionArray) ToDashboardSectionArrayOutput() DashboardSectionArrayOutput {
	return i.ToDashboardSectionArrayOutputWithContext(context.Background())
}

func (i DashboardSectionArray) ToDashboardSectionArrayOutputWithContext(ctx context.Context) DashboardSectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionArrayOutput)
}

type DashboardSectionOutput struct{ *pulumi.OutputState }

func (DashboardSectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSection)(nil)).Elem()
}

func (o DashboardSectionOutput) ToDashboardSectionOutput() DashboardSectionOutput {
	return o
}

func (o DashboardSectionOutput) ToDashboardSectionOutputWithContext(ctx context.Context) DashboardSectionOutput {
	return o
}

func (o DashboardSectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSection) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardSectionOutput) Rows() DashboardSectionRowArrayOutput {
	return o.ApplyT(func(v DashboardSection) []DashboardSectionRow { return v.Rows }).(DashboardSectionRowArrayOutput)
}

type DashboardSectionArrayOutput struct{ *pulumi.OutputState }

func (DashboardSectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSection)(nil)).Elem()
}

func (o DashboardSectionArrayOutput) ToDashboardSectionArrayOutput() DashboardSectionArrayOutput {
	return o
}

func (o DashboardSectionArrayOutput) ToDashboardSectionArrayOutputWithContext(ctx context.Context) DashboardSectionArrayOutput {
	return o
}

func (o DashboardSectionArrayOutput) Index(i pulumi.IntInput) DashboardSectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardSection {
		return vs[0].([]DashboardSection)[vs[1].(int)]
	}).(DashboardSectionOutput)
}

type DashboardSectionRow struct {
	Charts []DashboardSectionRowChart `pulumi:"charts"`
}

// DashboardSectionRowInput is an input type that accepts DashboardSectionRowArgs and DashboardSectionRowOutput values.
// You can construct a concrete instance of `DashboardSectionRowInput` via:
//
//          DashboardSectionRowArgs{...}
type DashboardSectionRowInput interface {
	pulumi.Input

	ToDashboardSectionRowOutput() DashboardSectionRowOutput
	ToDashboardSectionRowOutputWithContext(context.Context) DashboardSectionRowOutput
}

type DashboardSectionRowArgs struct {
	Charts DashboardSectionRowChartArrayInput `pulumi:"charts"`
}

func (DashboardSectionRowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionRow)(nil)).Elem()
}

func (i DashboardSectionRowArgs) ToDashboardSectionRowOutput() DashboardSectionRowOutput {
	return i.ToDashboardSectionRowOutputWithContext(context.Background())
}

func (i DashboardSectionRowArgs) ToDashboardSectionRowOutputWithContext(ctx context.Context) DashboardSectionRowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionRowOutput)
}

// DashboardSectionRowArrayInput is an input type that accepts DashboardSectionRowArray and DashboardSectionRowArrayOutput values.
// You can construct a concrete instance of `DashboardSectionRowArrayInput` via:
//
//          DashboardSectionRowArray{ DashboardSectionRowArgs{...} }
type DashboardSectionRowArrayInput interface {
	pulumi.Input

	ToDashboardSectionRowArrayOutput() DashboardSectionRowArrayOutput
	ToDashboardSectionRowArrayOutputWithContext(context.Context) DashboardSectionRowArrayOutput
}

type DashboardSectionRowArray []DashboardSectionRowInput

func (DashboardSectionRowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSectionRow)(nil)).Elem()
}

func (i DashboardSectionRowArray) ToDashboardSectionRowArrayOutput() DashboardSectionRowArrayOutput {
	return i.ToDashboardSectionRowArrayOutputWithContext(context.Background())
}

func (i DashboardSectionRowArray) ToDashboardSectionRowArrayOutputWithContext(ctx context.Context) DashboardSectionRowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionRowArrayOutput)
}

type DashboardSectionRowOutput struct{ *pulumi.OutputState }

func (DashboardSectionRowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionRow)(nil)).Elem()
}

func (o DashboardSectionRowOutput) ToDashboardSectionRowOutput() DashboardSectionRowOutput {
	return o
}

func (o DashboardSectionRowOutput) ToDashboardSectionRowOutputWithContext(ctx context.Context) DashboardSectionRowOutput {
	return o
}

func (o DashboardSectionRowOutput) Charts() DashboardSectionRowChartArrayOutput {
	return o.ApplyT(func(v DashboardSectionRow) []DashboardSectionRowChart { return v.Charts }).(DashboardSectionRowChartArrayOutput)
}

type DashboardSectionRowArrayOutput struct{ *pulumi.OutputState }

func (DashboardSectionRowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSectionRow)(nil)).Elem()
}

func (o DashboardSectionRowArrayOutput) ToDashboardSectionRowArrayOutput() DashboardSectionRowArrayOutput {
	return o
}

func (o DashboardSectionRowArrayOutput) ToDashboardSectionRowArrayOutputWithContext(ctx context.Context) DashboardSectionRowArrayOutput {
	return o
}

func (o DashboardSectionRowArrayOutput) Index(i pulumi.IntInput) DashboardSectionRowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardSectionRow {
		return vs[0].([]DashboardSectionRow)[vs[1].(int)]
	}).(DashboardSectionRowOutput)
}

type DashboardSectionRowChart struct {
	ChartSetting  DashboardSectionRowChartChartSetting `pulumi:"chartSetting"`
	Description   *string                              `pulumi:"description"`
	Name          string                               `pulumi:"name"`
	Sources       []DashboardSectionRowChartSource     `pulumi:"sources"`
	Summarization string                               `pulumi:"summarization"`
	Units         string                               `pulumi:"units"`
}

// DashboardSectionRowChartInput is an input type that accepts DashboardSectionRowChartArgs and DashboardSectionRowChartOutput values.
// You can construct a concrete instance of `DashboardSectionRowChartInput` via:
//
//          DashboardSectionRowChartArgs{...}
type DashboardSectionRowChartInput interface {
	pulumi.Input

	ToDashboardSectionRowChartOutput() DashboardSectionRowChartOutput
	ToDashboardSectionRowChartOutputWithContext(context.Context) DashboardSectionRowChartOutput
}

type DashboardSectionRowChartArgs struct {
	ChartSetting  DashboardSectionRowChartChartSettingInput `pulumi:"chartSetting"`
	Description   pulumi.StringPtrInput                     `pulumi:"description"`
	Name          pulumi.StringInput                        `pulumi:"name"`
	Sources       DashboardSectionRowChartSourceArrayInput  `pulumi:"sources"`
	Summarization pulumi.StringInput                        `pulumi:"summarization"`
	Units         pulumi.StringInput                        `pulumi:"units"`
}

func (DashboardSectionRowChartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionRowChart)(nil)).Elem()
}

func (i DashboardSectionRowChartArgs) ToDashboardSectionRowChartOutput() DashboardSectionRowChartOutput {
	return i.ToDashboardSectionRowChartOutputWithContext(context.Background())
}

func (i DashboardSectionRowChartArgs) ToDashboardSectionRowChartOutputWithContext(ctx context.Context) DashboardSectionRowChartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionRowChartOutput)
}

// DashboardSectionRowChartArrayInput is an input type that accepts DashboardSectionRowChartArray and DashboardSectionRowChartArrayOutput values.
// You can construct a concrete instance of `DashboardSectionRowChartArrayInput` via:
//
//          DashboardSectionRowChartArray{ DashboardSectionRowChartArgs{...} }
type DashboardSectionRowChartArrayInput interface {
	pulumi.Input

	ToDashboardSectionRowChartArrayOutput() DashboardSectionRowChartArrayOutput
	ToDashboardSectionRowChartArrayOutputWithContext(context.Context) DashboardSectionRowChartArrayOutput
}

type DashboardSectionRowChartArray []DashboardSectionRowChartInput

func (DashboardSectionRowChartArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSectionRowChart)(nil)).Elem()
}

func (i DashboardSectionRowChartArray) ToDashboardSectionRowChartArrayOutput() DashboardSectionRowChartArrayOutput {
	return i.ToDashboardSectionRowChartArrayOutputWithContext(context.Background())
}

func (i DashboardSectionRowChartArray) ToDashboardSectionRowChartArrayOutputWithContext(ctx context.Context) DashboardSectionRowChartArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionRowChartArrayOutput)
}

type DashboardSectionRowChartOutput struct{ *pulumi.OutputState }

func (DashboardSectionRowChartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionRowChart)(nil)).Elem()
}

func (o DashboardSectionRowChartOutput) ToDashboardSectionRowChartOutput() DashboardSectionRowChartOutput {
	return o
}

func (o DashboardSectionRowChartOutput) ToDashboardSectionRowChartOutputWithContext(ctx context.Context) DashboardSectionRowChartOutput {
	return o
}

func (o DashboardSectionRowChartOutput) ChartSetting() DashboardSectionRowChartChartSettingOutput {
	return o.ApplyT(func(v DashboardSectionRowChart) DashboardSectionRowChartChartSetting { return v.ChartSetting }).(DashboardSectionRowChartChartSettingOutput)
}

func (o DashboardSectionRowChartOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChart) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSectionRowChart) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardSectionRowChartOutput) Sources() DashboardSectionRowChartSourceArrayOutput {
	return o.ApplyT(func(v DashboardSectionRowChart) []DashboardSectionRowChartSource { return v.Sources }).(DashboardSectionRowChartSourceArrayOutput)
}

func (o DashboardSectionRowChartOutput) Summarization() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSectionRowChart) string { return v.Summarization }).(pulumi.StringOutput)
}

func (o DashboardSectionRowChartOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSectionRowChart) string { return v.Units }).(pulumi.StringOutput)
}

type DashboardSectionRowChartArrayOutput struct{ *pulumi.OutputState }

func (DashboardSectionRowChartArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSectionRowChart)(nil)).Elem()
}

func (o DashboardSectionRowChartArrayOutput) ToDashboardSectionRowChartArrayOutput() DashboardSectionRowChartArrayOutput {
	return o
}

func (o DashboardSectionRowChartArrayOutput) ToDashboardSectionRowChartArrayOutputWithContext(ctx context.Context) DashboardSectionRowChartArrayOutput {
	return o
}

func (o DashboardSectionRowChartArrayOutput) Index(i pulumi.IntInput) DashboardSectionRowChartOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardSectionRowChart {
		return vs[0].([]DashboardSectionRowChart)[vs[1].(int)]
	}).(DashboardSectionRowChartOutput)
}

type DashboardSectionRowChartChartSetting struct {
	AutoColumnTags                     *bool     `pulumi:"autoColumnTags"`
	ColumnTags                         *string   `pulumi:"columnTags"`
	CustomTags                         []string  `pulumi:"customTags"`
	ExpectedDataSpacing                *int      `pulumi:"expectedDataSpacing"`
	FixedLegendDisplayStats            []string  `pulumi:"fixedLegendDisplayStats"`
	FixedLegendEnabled                 *bool     `pulumi:"fixedLegendEnabled"`
	FixedLegendFilterField             *string   `pulumi:"fixedLegendFilterField"`
	FixedLegendFilterLimit             *int      `pulumi:"fixedLegendFilterLimit"`
	FixedLegendFilterSort              *string   `pulumi:"fixedLegendFilterSort"`
	FixedLegendHideLabel               *bool     `pulumi:"fixedLegendHideLabel"`
	FixedLegendPosition                *string   `pulumi:"fixedLegendPosition"`
	FixedLegendUseRawStats             *bool     `pulumi:"fixedLegendUseRawStats"`
	GroupBySource                      *bool     `pulumi:"groupBySource"`
	InvertDynamicLegendHoverControl    *bool     `pulumi:"invertDynamicLegendHoverControl"`
	LineType                           *string   `pulumi:"lineType"`
	Max                                *float64  `pulumi:"max"`
	Min                                *float64  `pulumi:"min"`
	NumTags                            *int      `pulumi:"numTags"`
	PlainMarkdownContent               *string   `pulumi:"plainMarkdownContent"`
	ShowHosts                          *bool     `pulumi:"showHosts"`
	ShowLabels                         *bool     `pulumi:"showLabels"`
	ShowRawValues                      *bool     `pulumi:"showRawValues"`
	SortValuesDescending               *bool     `pulumi:"sortValuesDescending"`
	SparklineDecimalPrecision          *int      `pulumi:"sparklineDecimalPrecision"`
	SparklineDisplayColor              *string   `pulumi:"sparklineDisplayColor"`
	SparklineDisplayFontSize           *string   `pulumi:"sparklineDisplayFontSize"`
	SparklineDisplayHorizontalPosition *string   `pulumi:"sparklineDisplayHorizontalPosition"`
	SparklineDisplayPostfix            *string   `pulumi:"sparklineDisplayPostfix"`
	SparklineDisplayPrefix             *string   `pulumi:"sparklineDisplayPrefix"`
	SparklineDisplayValueType          *string   `pulumi:"sparklineDisplayValueType"`
	SparklineDisplayVerticalPosition   *string   `pulumi:"sparklineDisplayVerticalPosition"`
	SparklineFillColor                 *string   `pulumi:"sparklineFillColor"`
	SparklineLineColor                 *string   `pulumi:"sparklineLineColor"`
	SparklineSize                      *string   `pulumi:"sparklineSize"`
	SparklineValueColorMapApplyTo      *string   `pulumi:"sparklineValueColorMapApplyTo"`
	SparklineValueColorMapColors       []string  `pulumi:"sparklineValueColorMapColors"`
	SparklineValueColorMapValues       []int     `pulumi:"sparklineValueColorMapValues"`
	SparklineValueColorMapValuesV2s    []float64 `pulumi:"sparklineValueColorMapValuesV2s"`
	SparklineValueTextMapTexts         []string  `pulumi:"sparklineValueTextMapTexts"`
	SparklineValueTextMapThresholds    []float64 `pulumi:"sparklineValueTextMapThresholds"`
	StackType                          *string   `pulumi:"stackType"`
	TagMode                            *string   `pulumi:"tagMode"`
	TimeBasedColoring                  *bool     `pulumi:"timeBasedColoring"`
	Type                               string    `pulumi:"type"`
	WindowSize                         *int      `pulumi:"windowSize"`
	Windowing                          *string   `pulumi:"windowing"`
	Xmax                               *float64  `pulumi:"xmax"`
	Xmin                               *float64  `pulumi:"xmin"`
	Y0ScaleSiBy1024                    *bool     `pulumi:"y0ScaleSiBy1024"`
	Y0UnitAutoscaling                  *bool     `pulumi:"y0UnitAutoscaling"`
	Y1ScaleSiBy1024                    *bool     `pulumi:"y1ScaleSiBy1024"`
	Y1UnitAutoscaling                  *bool     `pulumi:"y1UnitAutoscaling"`
	Y1Units                            *string   `pulumi:"y1Units"`
	Y1max                              *float64  `pulumi:"y1max"`
	Y1min                              *float64  `pulumi:"y1min"`
	Ymax                               *float64  `pulumi:"ymax"`
	Ymin                               *float64  `pulumi:"ymin"`
}

// DashboardSectionRowChartChartSettingInput is an input type that accepts DashboardSectionRowChartChartSettingArgs and DashboardSectionRowChartChartSettingOutput values.
// You can construct a concrete instance of `DashboardSectionRowChartChartSettingInput` via:
//
//          DashboardSectionRowChartChartSettingArgs{...}
type DashboardSectionRowChartChartSettingInput interface {
	pulumi.Input

	ToDashboardSectionRowChartChartSettingOutput() DashboardSectionRowChartChartSettingOutput
	ToDashboardSectionRowChartChartSettingOutputWithContext(context.Context) DashboardSectionRowChartChartSettingOutput
}

type DashboardSectionRowChartChartSettingArgs struct {
	AutoColumnTags                     pulumi.BoolPtrInput      `pulumi:"autoColumnTags"`
	ColumnTags                         pulumi.StringPtrInput    `pulumi:"columnTags"`
	CustomTags                         pulumi.StringArrayInput  `pulumi:"customTags"`
	ExpectedDataSpacing                pulumi.IntPtrInput       `pulumi:"expectedDataSpacing"`
	FixedLegendDisplayStats            pulumi.StringArrayInput  `pulumi:"fixedLegendDisplayStats"`
	FixedLegendEnabled                 pulumi.BoolPtrInput      `pulumi:"fixedLegendEnabled"`
	FixedLegendFilterField             pulumi.StringPtrInput    `pulumi:"fixedLegendFilterField"`
	FixedLegendFilterLimit             pulumi.IntPtrInput       `pulumi:"fixedLegendFilterLimit"`
	FixedLegendFilterSort              pulumi.StringPtrInput    `pulumi:"fixedLegendFilterSort"`
	FixedLegendHideLabel               pulumi.BoolPtrInput      `pulumi:"fixedLegendHideLabel"`
	FixedLegendPosition                pulumi.StringPtrInput    `pulumi:"fixedLegendPosition"`
	FixedLegendUseRawStats             pulumi.BoolPtrInput      `pulumi:"fixedLegendUseRawStats"`
	GroupBySource                      pulumi.BoolPtrInput      `pulumi:"groupBySource"`
	InvertDynamicLegendHoverControl    pulumi.BoolPtrInput      `pulumi:"invertDynamicLegendHoverControl"`
	LineType                           pulumi.StringPtrInput    `pulumi:"lineType"`
	Max                                pulumi.Float64PtrInput   `pulumi:"max"`
	Min                                pulumi.Float64PtrInput   `pulumi:"min"`
	NumTags                            pulumi.IntPtrInput       `pulumi:"numTags"`
	PlainMarkdownContent               pulumi.StringPtrInput    `pulumi:"plainMarkdownContent"`
	ShowHosts                          pulumi.BoolPtrInput      `pulumi:"showHosts"`
	ShowLabels                         pulumi.BoolPtrInput      `pulumi:"showLabels"`
	ShowRawValues                      pulumi.BoolPtrInput      `pulumi:"showRawValues"`
	SortValuesDescending               pulumi.BoolPtrInput      `pulumi:"sortValuesDescending"`
	SparklineDecimalPrecision          pulumi.IntPtrInput       `pulumi:"sparklineDecimalPrecision"`
	SparklineDisplayColor              pulumi.StringPtrInput    `pulumi:"sparklineDisplayColor"`
	SparklineDisplayFontSize           pulumi.StringPtrInput    `pulumi:"sparklineDisplayFontSize"`
	SparklineDisplayHorizontalPosition pulumi.StringPtrInput    `pulumi:"sparklineDisplayHorizontalPosition"`
	SparklineDisplayPostfix            pulumi.StringPtrInput    `pulumi:"sparklineDisplayPostfix"`
	SparklineDisplayPrefix             pulumi.StringPtrInput    `pulumi:"sparklineDisplayPrefix"`
	SparklineDisplayValueType          pulumi.StringPtrInput    `pulumi:"sparklineDisplayValueType"`
	SparklineDisplayVerticalPosition   pulumi.StringPtrInput    `pulumi:"sparklineDisplayVerticalPosition"`
	SparklineFillColor                 pulumi.StringPtrInput    `pulumi:"sparklineFillColor"`
	SparklineLineColor                 pulumi.StringPtrInput    `pulumi:"sparklineLineColor"`
	SparklineSize                      pulumi.StringPtrInput    `pulumi:"sparklineSize"`
	SparklineValueColorMapApplyTo      pulumi.StringPtrInput    `pulumi:"sparklineValueColorMapApplyTo"`
	SparklineValueColorMapColors       pulumi.StringArrayInput  `pulumi:"sparklineValueColorMapColors"`
	SparklineValueColorMapValues       pulumi.IntArrayInput     `pulumi:"sparklineValueColorMapValues"`
	SparklineValueColorMapValuesV2s    pulumi.Float64ArrayInput `pulumi:"sparklineValueColorMapValuesV2s"`
	SparklineValueTextMapTexts         pulumi.StringArrayInput  `pulumi:"sparklineValueTextMapTexts"`
	SparklineValueTextMapThresholds    pulumi.Float64ArrayInput `pulumi:"sparklineValueTextMapThresholds"`
	StackType                          pulumi.StringPtrInput    `pulumi:"stackType"`
	TagMode                            pulumi.StringPtrInput    `pulumi:"tagMode"`
	TimeBasedColoring                  pulumi.BoolPtrInput      `pulumi:"timeBasedColoring"`
	Type                               pulumi.StringInput       `pulumi:"type"`
	WindowSize                         pulumi.IntPtrInput       `pulumi:"windowSize"`
	Windowing                          pulumi.StringPtrInput    `pulumi:"windowing"`
	Xmax                               pulumi.Float64PtrInput   `pulumi:"xmax"`
	Xmin                               pulumi.Float64PtrInput   `pulumi:"xmin"`
	Y0ScaleSiBy1024                    pulumi.BoolPtrInput      `pulumi:"y0ScaleSiBy1024"`
	Y0UnitAutoscaling                  pulumi.BoolPtrInput      `pulumi:"y0UnitAutoscaling"`
	Y1ScaleSiBy1024                    pulumi.BoolPtrInput      `pulumi:"y1ScaleSiBy1024"`
	Y1UnitAutoscaling                  pulumi.BoolPtrInput      `pulumi:"y1UnitAutoscaling"`
	Y1Units                            pulumi.StringPtrInput    `pulumi:"y1Units"`
	Y1max                              pulumi.Float64PtrInput   `pulumi:"y1max"`
	Y1min                              pulumi.Float64PtrInput   `pulumi:"y1min"`
	Ymax                               pulumi.Float64PtrInput   `pulumi:"ymax"`
	Ymin                               pulumi.Float64PtrInput   `pulumi:"ymin"`
}

func (DashboardSectionRowChartChartSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionRowChartChartSetting)(nil)).Elem()
}

func (i DashboardSectionRowChartChartSettingArgs) ToDashboardSectionRowChartChartSettingOutput() DashboardSectionRowChartChartSettingOutput {
	return i.ToDashboardSectionRowChartChartSettingOutputWithContext(context.Background())
}

func (i DashboardSectionRowChartChartSettingArgs) ToDashboardSectionRowChartChartSettingOutputWithContext(ctx context.Context) DashboardSectionRowChartChartSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionRowChartChartSettingOutput)
}

type DashboardSectionRowChartChartSettingOutput struct{ *pulumi.OutputState }

func (DashboardSectionRowChartChartSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionRowChartChartSetting)(nil)).Elem()
}

func (o DashboardSectionRowChartChartSettingOutput) ToDashboardSectionRowChartChartSettingOutput() DashboardSectionRowChartChartSettingOutput {
	return o
}

func (o DashboardSectionRowChartChartSettingOutput) ToDashboardSectionRowChartChartSettingOutputWithContext(ctx context.Context) DashboardSectionRowChartChartSettingOutput {
	return o
}

func (o DashboardSectionRowChartChartSettingOutput) AutoColumnTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.AutoColumnTags }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) ColumnTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.ColumnTags }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) CustomTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) []string { return v.CustomTags }).(pulumi.StringArrayOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) ExpectedDataSpacing() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *int { return v.ExpectedDataSpacing }).(pulumi.IntPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) FixedLegendDisplayStats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) []string { return v.FixedLegendDisplayStats }).(pulumi.StringArrayOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) FixedLegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.FixedLegendEnabled }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) FixedLegendFilterField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.FixedLegendFilterField }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) FixedLegendFilterLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *int { return v.FixedLegendFilterLimit }).(pulumi.IntPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) FixedLegendFilterSort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.FixedLegendFilterSort }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) FixedLegendHideLabel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.FixedLegendHideLabel }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) FixedLegendPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.FixedLegendPosition }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) FixedLegendUseRawStats() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.FixedLegendUseRawStats }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) GroupBySource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.GroupBySource }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) InvertDynamicLegendHoverControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.InvertDynamicLegendHoverControl }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) LineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.LineType }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *float64 { return v.Max }).(pulumi.Float64PtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *float64 { return v.Min }).(pulumi.Float64PtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) NumTags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *int { return v.NumTags }).(pulumi.IntPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) PlainMarkdownContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.PlainMarkdownContent }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) ShowHosts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.ShowHosts }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) ShowLabels() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.ShowLabels }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) ShowRawValues() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.ShowRawValues }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SortValuesDescending() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.SortValuesDescending }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineDecimalPrecision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *int { return v.SparklineDecimalPrecision }).(pulumi.IntPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineDisplayColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.SparklineDisplayColor }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineDisplayFontSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.SparklineDisplayFontSize }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineDisplayHorizontalPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.SparklineDisplayHorizontalPosition }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineDisplayPostfix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.SparklineDisplayPostfix }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineDisplayPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.SparklineDisplayPrefix }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineDisplayValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.SparklineDisplayValueType }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineDisplayVerticalPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.SparklineDisplayVerticalPosition }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineFillColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.SparklineFillColor }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineLineColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.SparklineLineColor }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.SparklineSize }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineValueColorMapApplyTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.SparklineValueColorMapApplyTo }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineValueColorMapColors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) []string { return v.SparklineValueColorMapColors }).(pulumi.StringArrayOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineValueColorMapValues() pulumi.IntArrayOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) []int { return v.SparklineValueColorMapValues }).(pulumi.IntArrayOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineValueColorMapValuesV2s() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) []float64 { return v.SparklineValueColorMapValuesV2s }).(pulumi.Float64ArrayOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineValueTextMapTexts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) []string { return v.SparklineValueTextMapTexts }).(pulumi.StringArrayOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) SparklineValueTextMapThresholds() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) []float64 { return v.SparklineValueTextMapThresholds }).(pulumi.Float64ArrayOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) StackType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.StackType }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) TagMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.TagMode }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) TimeBasedColoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.TimeBasedColoring }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) string { return v.Type }).(pulumi.StringOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) WindowSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *int { return v.WindowSize }).(pulumi.IntPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Windowing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.Windowing }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Xmax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *float64 { return v.Xmax }).(pulumi.Float64PtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Xmin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *float64 { return v.Xmin }).(pulumi.Float64PtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Y0ScaleSiBy1024() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.Y0ScaleSiBy1024 }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Y0UnitAutoscaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.Y0UnitAutoscaling }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Y1ScaleSiBy1024() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.Y1ScaleSiBy1024 }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Y1UnitAutoscaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *bool { return v.Y1UnitAutoscaling }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Y1Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *string { return v.Y1Units }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Y1max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *float64 { return v.Y1max }).(pulumi.Float64PtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Y1min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *float64 { return v.Y1min }).(pulumi.Float64PtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Ymax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *float64 { return v.Ymax }).(pulumi.Float64PtrOutput)
}

func (o DashboardSectionRowChartChartSettingOutput) Ymin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartChartSetting) *float64 { return v.Ymin }).(pulumi.Float64PtrOutput)
}

type DashboardSectionRowChartSource struct {
	Disabled            *bool   `pulumi:"disabled"`
	Name                string  `pulumi:"name"`
	Query               string  `pulumi:"query"`
	QueryBuilderEnabled *bool   `pulumi:"queryBuilderEnabled"`
	ScatterPlotSource   *string `pulumi:"scatterPlotSource"`
	SourceDescription   *string `pulumi:"sourceDescription"`
}

// DashboardSectionRowChartSourceInput is an input type that accepts DashboardSectionRowChartSourceArgs and DashboardSectionRowChartSourceOutput values.
// You can construct a concrete instance of `DashboardSectionRowChartSourceInput` via:
//
//          DashboardSectionRowChartSourceArgs{...}
type DashboardSectionRowChartSourceInput interface {
	pulumi.Input

	ToDashboardSectionRowChartSourceOutput() DashboardSectionRowChartSourceOutput
	ToDashboardSectionRowChartSourceOutputWithContext(context.Context) DashboardSectionRowChartSourceOutput
}

type DashboardSectionRowChartSourceArgs struct {
	Disabled            pulumi.BoolPtrInput   `pulumi:"disabled"`
	Name                pulumi.StringInput    `pulumi:"name"`
	Query               pulumi.StringInput    `pulumi:"query"`
	QueryBuilderEnabled pulumi.BoolPtrInput   `pulumi:"queryBuilderEnabled"`
	ScatterPlotSource   pulumi.StringPtrInput `pulumi:"scatterPlotSource"`
	SourceDescription   pulumi.StringPtrInput `pulumi:"sourceDescription"`
}

func (DashboardSectionRowChartSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionRowChartSource)(nil)).Elem()
}

func (i DashboardSectionRowChartSourceArgs) ToDashboardSectionRowChartSourceOutput() DashboardSectionRowChartSourceOutput {
	return i.ToDashboardSectionRowChartSourceOutputWithContext(context.Background())
}

func (i DashboardSectionRowChartSourceArgs) ToDashboardSectionRowChartSourceOutputWithContext(ctx context.Context) DashboardSectionRowChartSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionRowChartSourceOutput)
}

// DashboardSectionRowChartSourceArrayInput is an input type that accepts DashboardSectionRowChartSourceArray and DashboardSectionRowChartSourceArrayOutput values.
// You can construct a concrete instance of `DashboardSectionRowChartSourceArrayInput` via:
//
//          DashboardSectionRowChartSourceArray{ DashboardSectionRowChartSourceArgs{...} }
type DashboardSectionRowChartSourceArrayInput interface {
	pulumi.Input

	ToDashboardSectionRowChartSourceArrayOutput() DashboardSectionRowChartSourceArrayOutput
	ToDashboardSectionRowChartSourceArrayOutputWithContext(context.Context) DashboardSectionRowChartSourceArrayOutput
}

type DashboardSectionRowChartSourceArray []DashboardSectionRowChartSourceInput

func (DashboardSectionRowChartSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSectionRowChartSource)(nil)).Elem()
}

func (i DashboardSectionRowChartSourceArray) ToDashboardSectionRowChartSourceArrayOutput() DashboardSectionRowChartSourceArrayOutput {
	return i.ToDashboardSectionRowChartSourceArrayOutputWithContext(context.Background())
}

func (i DashboardSectionRowChartSourceArray) ToDashboardSectionRowChartSourceArrayOutputWithContext(ctx context.Context) DashboardSectionRowChartSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionRowChartSourceArrayOutput)
}

type DashboardSectionRowChartSourceOutput struct{ *pulumi.OutputState }

func (DashboardSectionRowChartSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionRowChartSource)(nil)).Elem()
}

func (o DashboardSectionRowChartSourceOutput) ToDashboardSectionRowChartSourceOutput() DashboardSectionRowChartSourceOutput {
	return o
}

func (o DashboardSectionRowChartSourceOutput) ToDashboardSectionRowChartSourceOutputWithContext(ctx context.Context) DashboardSectionRowChartSourceOutput {
	return o
}

func (o DashboardSectionRowChartSourceOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartSource) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSectionRowChartSource) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardSectionRowChartSourceOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSectionRowChartSource) string { return v.Query }).(pulumi.StringOutput)
}

func (o DashboardSectionRowChartSourceOutput) QueryBuilderEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartSource) *bool { return v.QueryBuilderEnabled }).(pulumi.BoolPtrOutput)
}

func (o DashboardSectionRowChartSourceOutput) ScatterPlotSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartSource) *string { return v.ScatterPlotSource }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionRowChartSourceOutput) SourceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionRowChartSource) *string { return v.SourceDescription }).(pulumi.StringPtrOutput)
}

type DashboardSectionRowChartSourceArrayOutput struct{ *pulumi.OutputState }

func (DashboardSectionRowChartSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSectionRowChartSource)(nil)).Elem()
}

func (o DashboardSectionRowChartSourceArrayOutput) ToDashboardSectionRowChartSourceArrayOutput() DashboardSectionRowChartSourceArrayOutput {
	return o
}

func (o DashboardSectionRowChartSourceArrayOutput) ToDashboardSectionRowChartSourceArrayOutputWithContext(ctx context.Context) DashboardSectionRowChartSourceArrayOutput {
	return o
}

func (o DashboardSectionRowChartSourceArrayOutput) Index(i pulumi.IntInput) DashboardSectionRowChartSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardSectionRowChartSource {
		return vs[0].([]DashboardSectionRowChartSource)[vs[1].(int)]
	}).(DashboardSectionRowChartSourceOutput)
}

func init() {
	pulumi.RegisterOutputType(AlertTargetRouteOutput{})
	pulumi.RegisterOutputType(AlertTargetRouteArrayOutput{})
	pulumi.RegisterOutputType(CloudIntegrationNewRelicMetricFilterOutput{})
	pulumi.RegisterOutputType(CloudIntegrationNewRelicMetricFilterArrayOutput{})
	pulumi.RegisterOutputType(DashboardParameterDetailOutput{})
	pulumi.RegisterOutputType(DashboardParameterDetailArrayOutput{})
	pulumi.RegisterOutputType(DashboardSectionOutput{})
	pulumi.RegisterOutputType(DashboardSectionArrayOutput{})
	pulumi.RegisterOutputType(DashboardSectionRowOutput{})
	pulumi.RegisterOutputType(DashboardSectionRowArrayOutput{})
	pulumi.RegisterOutputType(DashboardSectionRowChartOutput{})
	pulumi.RegisterOutputType(DashboardSectionRowChartArrayOutput{})
	pulumi.RegisterOutputType(DashboardSectionRowChartChartSettingOutput{})
	pulumi.RegisterOutputType(DashboardSectionRowChartSourceOutput{})
	pulumi.RegisterOutputType(DashboardSectionRowChartSourceArrayOutput{})
}
