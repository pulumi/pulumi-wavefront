// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Wavefront Cloud Integration for Microsoft Azure. This allows Azure cloud integrations to be created,
// updated, and deleted.
//
// ## Import
//
// Azure Cloud Integrations can be imported by using the `id`, e.g.:
//
// ```sh
//
//	$ pulumi import wavefront:index/cloudIntegrationAzure:CloudIntegrationAzure azure a411c16b-3cf7-4f03-bf11-8ca05aab898d
//
// ```
type CloudIntegrationAzure struct {
	pulumi.CustomResourceState

	// A list of point tag key-values to add to every point ingested using this integration.
	AdditionalTags pulumi.StringMapOutput `pulumi:"additionalTags"`
	// A list of Azure Activity Log categories.
	CategoryFilters pulumi.StringArrayOutput `pulumi:"categoryFilters"`
	// Client ID for an Azure service account within your project.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// Client secret for an Azure service account within your project.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// Forces this resource to save, even if errors are present.
	ForceSave pulumi.BoolPtrOutput `pulumi:"forceSave"`
	// A regular expression that a metric name must match (case-insensitively) in order to be ingested.
	MetricFilterRegex pulumi.StringPtrOutput `pulumi:"metricFilterRegex"`
	// The human-readable name of this integration.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of Azure resource groups from which to pull metrics.
	ResourceGroupFilters pulumi.StringArrayOutput `pulumi:"resourceGroupFilters"`
	// A value denoting which cloud service this service integrates with.
	Service pulumi.StringOutput `pulumi:"service"`
	// How often, in minutes, to refresh the service.
	ServiceRefreshRateInMinutes pulumi.IntPtrOutput `pulumi:"serviceRefreshRateInMinutes"`
	// Tenant ID for an Azure service account within your project.
	Tenant pulumi.StringOutput `pulumi:"tenant"`
}

// NewCloudIntegrationAzure registers a new resource with the given unique name, arguments, and options.
func NewCloudIntegrationAzure(ctx *pulumi.Context,
	name string, args *CloudIntegrationAzureArgs, opts ...pulumi.ResourceOption) (*CloudIntegrationAzure, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.ClientSecret == nil {
		return nil, errors.New("invalid value for required argument 'ClientSecret'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	if args.Tenant == nil {
		return nil, errors.New("invalid value for required argument 'Tenant'")
	}
	if args.ClientSecret != nil {
		args.ClientSecret = pulumi.ToSecret(args.ClientSecret).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clientSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudIntegrationAzure
	err := ctx.RegisterResource("wavefront:index/cloudIntegrationAzure:CloudIntegrationAzure", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudIntegrationAzure gets an existing CloudIntegrationAzure resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudIntegrationAzure(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudIntegrationAzureState, opts ...pulumi.ResourceOption) (*CloudIntegrationAzure, error) {
	var resource CloudIntegrationAzure
	err := ctx.ReadResource("wavefront:index/cloudIntegrationAzure:CloudIntegrationAzure", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudIntegrationAzure resources.
type cloudIntegrationAzureState struct {
	// A list of point tag key-values to add to every point ingested using this integration.
	AdditionalTags map[string]string `pulumi:"additionalTags"`
	// A list of Azure Activity Log categories.
	CategoryFilters []string `pulumi:"categoryFilters"`
	// Client ID for an Azure service account within your project.
	ClientId *string `pulumi:"clientId"`
	// Client secret for an Azure service account within your project.
	ClientSecret *string `pulumi:"clientSecret"`
	// Forces this resource to save, even if errors are present.
	ForceSave *bool `pulumi:"forceSave"`
	// A regular expression that a metric name must match (case-insensitively) in order to be ingested.
	MetricFilterRegex *string `pulumi:"metricFilterRegex"`
	// The human-readable name of this integration.
	Name *string `pulumi:"name"`
	// A list of Azure resource groups from which to pull metrics.
	ResourceGroupFilters []string `pulumi:"resourceGroupFilters"`
	// A value denoting which cloud service this service integrates with.
	Service *string `pulumi:"service"`
	// How often, in minutes, to refresh the service.
	ServiceRefreshRateInMinutes *int `pulumi:"serviceRefreshRateInMinutes"`
	// Tenant ID for an Azure service account within your project.
	Tenant *string `pulumi:"tenant"`
}

type CloudIntegrationAzureState struct {
	// A list of point tag key-values to add to every point ingested using this integration.
	AdditionalTags pulumi.StringMapInput
	// A list of Azure Activity Log categories.
	CategoryFilters pulumi.StringArrayInput
	// Client ID for an Azure service account within your project.
	ClientId pulumi.StringPtrInput
	// Client secret for an Azure service account within your project.
	ClientSecret pulumi.StringPtrInput
	// Forces this resource to save, even if errors are present.
	ForceSave pulumi.BoolPtrInput
	// A regular expression that a metric name must match (case-insensitively) in order to be ingested.
	MetricFilterRegex pulumi.StringPtrInput
	// The human-readable name of this integration.
	Name pulumi.StringPtrInput
	// A list of Azure resource groups from which to pull metrics.
	ResourceGroupFilters pulumi.StringArrayInput
	// A value denoting which cloud service this service integrates with.
	Service pulumi.StringPtrInput
	// How often, in minutes, to refresh the service.
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
	// Tenant ID for an Azure service account within your project.
	Tenant pulumi.StringPtrInput
}

func (CloudIntegrationAzureState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationAzureState)(nil)).Elem()
}

type cloudIntegrationAzureArgs struct {
	// A list of point tag key-values to add to every point ingested using this integration.
	AdditionalTags map[string]string `pulumi:"additionalTags"`
	// A list of Azure Activity Log categories.
	CategoryFilters []string `pulumi:"categoryFilters"`
	// Client ID for an Azure service account within your project.
	ClientId string `pulumi:"clientId"`
	// Client secret for an Azure service account within your project.
	ClientSecret string `pulumi:"clientSecret"`
	// Forces this resource to save, even if errors are present.
	ForceSave *bool `pulumi:"forceSave"`
	// A regular expression that a metric name must match (case-insensitively) in order to be ingested.
	MetricFilterRegex *string `pulumi:"metricFilterRegex"`
	// The human-readable name of this integration.
	Name *string `pulumi:"name"`
	// A list of Azure resource groups from which to pull metrics.
	ResourceGroupFilters []string `pulumi:"resourceGroupFilters"`
	// A value denoting which cloud service this service integrates with.
	Service string `pulumi:"service"`
	// How often, in minutes, to refresh the service.
	ServiceRefreshRateInMinutes *int `pulumi:"serviceRefreshRateInMinutes"`
	// Tenant ID for an Azure service account within your project.
	Tenant string `pulumi:"tenant"`
}

// The set of arguments for constructing a CloudIntegrationAzure resource.
type CloudIntegrationAzureArgs struct {
	// A list of point tag key-values to add to every point ingested using this integration.
	AdditionalTags pulumi.StringMapInput
	// A list of Azure Activity Log categories.
	CategoryFilters pulumi.StringArrayInput
	// Client ID for an Azure service account within your project.
	ClientId pulumi.StringInput
	// Client secret for an Azure service account within your project.
	ClientSecret pulumi.StringInput
	// Forces this resource to save, even if errors are present.
	ForceSave pulumi.BoolPtrInput
	// A regular expression that a metric name must match (case-insensitively) in order to be ingested.
	MetricFilterRegex pulumi.StringPtrInput
	// The human-readable name of this integration.
	Name pulumi.StringPtrInput
	// A list of Azure resource groups from which to pull metrics.
	ResourceGroupFilters pulumi.StringArrayInput
	// A value denoting which cloud service this service integrates with.
	Service pulumi.StringInput
	// How often, in minutes, to refresh the service.
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
	// Tenant ID for an Azure service account within your project.
	Tenant pulumi.StringInput
}

func (CloudIntegrationAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationAzureArgs)(nil)).Elem()
}

type CloudIntegrationAzureInput interface {
	pulumi.Input

	ToCloudIntegrationAzureOutput() CloudIntegrationAzureOutput
	ToCloudIntegrationAzureOutputWithContext(ctx context.Context) CloudIntegrationAzureOutput
}

func (*CloudIntegrationAzure) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudIntegrationAzure)(nil)).Elem()
}

func (i *CloudIntegrationAzure) ToCloudIntegrationAzureOutput() CloudIntegrationAzureOutput {
	return i.ToCloudIntegrationAzureOutputWithContext(context.Background())
}

func (i *CloudIntegrationAzure) ToCloudIntegrationAzureOutputWithContext(ctx context.Context) CloudIntegrationAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudIntegrationAzureOutput)
}

func (i *CloudIntegrationAzure) ToOutput(ctx context.Context) pulumix.Output[*CloudIntegrationAzure] {
	return pulumix.Output[*CloudIntegrationAzure]{
		OutputState: i.ToCloudIntegrationAzureOutputWithContext(ctx).OutputState,
	}
}

// CloudIntegrationAzureArrayInput is an input type that accepts CloudIntegrationAzureArray and CloudIntegrationAzureArrayOutput values.
// You can construct a concrete instance of `CloudIntegrationAzureArrayInput` via:
//
//	CloudIntegrationAzureArray{ CloudIntegrationAzureArgs{...} }
type CloudIntegrationAzureArrayInput interface {
	pulumi.Input

	ToCloudIntegrationAzureArrayOutput() CloudIntegrationAzureArrayOutput
	ToCloudIntegrationAzureArrayOutputWithContext(context.Context) CloudIntegrationAzureArrayOutput
}

type CloudIntegrationAzureArray []CloudIntegrationAzureInput

func (CloudIntegrationAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudIntegrationAzure)(nil)).Elem()
}

func (i CloudIntegrationAzureArray) ToCloudIntegrationAzureArrayOutput() CloudIntegrationAzureArrayOutput {
	return i.ToCloudIntegrationAzureArrayOutputWithContext(context.Background())
}

func (i CloudIntegrationAzureArray) ToCloudIntegrationAzureArrayOutputWithContext(ctx context.Context) CloudIntegrationAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudIntegrationAzureArrayOutput)
}

func (i CloudIntegrationAzureArray) ToOutput(ctx context.Context) pulumix.Output[[]*CloudIntegrationAzure] {
	return pulumix.Output[[]*CloudIntegrationAzure]{
		OutputState: i.ToCloudIntegrationAzureArrayOutputWithContext(ctx).OutputState,
	}
}

// CloudIntegrationAzureMapInput is an input type that accepts CloudIntegrationAzureMap and CloudIntegrationAzureMapOutput values.
// You can construct a concrete instance of `CloudIntegrationAzureMapInput` via:
//
//	CloudIntegrationAzureMap{ "key": CloudIntegrationAzureArgs{...} }
type CloudIntegrationAzureMapInput interface {
	pulumi.Input

	ToCloudIntegrationAzureMapOutput() CloudIntegrationAzureMapOutput
	ToCloudIntegrationAzureMapOutputWithContext(context.Context) CloudIntegrationAzureMapOutput
}

type CloudIntegrationAzureMap map[string]CloudIntegrationAzureInput

func (CloudIntegrationAzureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudIntegrationAzure)(nil)).Elem()
}

func (i CloudIntegrationAzureMap) ToCloudIntegrationAzureMapOutput() CloudIntegrationAzureMapOutput {
	return i.ToCloudIntegrationAzureMapOutputWithContext(context.Background())
}

func (i CloudIntegrationAzureMap) ToCloudIntegrationAzureMapOutputWithContext(ctx context.Context) CloudIntegrationAzureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudIntegrationAzureMapOutput)
}

func (i CloudIntegrationAzureMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*CloudIntegrationAzure] {
	return pulumix.Output[map[string]*CloudIntegrationAzure]{
		OutputState: i.ToCloudIntegrationAzureMapOutputWithContext(ctx).OutputState,
	}
}

type CloudIntegrationAzureOutput struct{ *pulumi.OutputState }

func (CloudIntegrationAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudIntegrationAzure)(nil)).Elem()
}

func (o CloudIntegrationAzureOutput) ToCloudIntegrationAzureOutput() CloudIntegrationAzureOutput {
	return o
}

func (o CloudIntegrationAzureOutput) ToCloudIntegrationAzureOutputWithContext(ctx context.Context) CloudIntegrationAzureOutput {
	return o
}

func (o CloudIntegrationAzureOutput) ToOutput(ctx context.Context) pulumix.Output[*CloudIntegrationAzure] {
	return pulumix.Output[*CloudIntegrationAzure]{
		OutputState: o.OutputState,
	}
}

// A list of point tag key-values to add to every point ingested using this integration.
func (o CloudIntegrationAzureOutput) AdditionalTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudIntegrationAzure) pulumi.StringMapOutput { return v.AdditionalTags }).(pulumi.StringMapOutput)
}

// A list of Azure Activity Log categories.
func (o CloudIntegrationAzureOutput) CategoryFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudIntegrationAzure) pulumi.StringArrayOutput { return v.CategoryFilters }).(pulumi.StringArrayOutput)
}

// Client ID for an Azure service account within your project.
func (o CloudIntegrationAzureOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIntegrationAzure) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// Client secret for an Azure service account within your project.
func (o CloudIntegrationAzureOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIntegrationAzure) pulumi.StringOutput { return v.ClientSecret }).(pulumi.StringOutput)
}

// Forces this resource to save, even if errors are present.
func (o CloudIntegrationAzureOutput) ForceSave() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudIntegrationAzure) pulumi.BoolPtrOutput { return v.ForceSave }).(pulumi.BoolPtrOutput)
}

// A regular expression that a metric name must match (case-insensitively) in order to be ingested.
func (o CloudIntegrationAzureOutput) MetricFilterRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudIntegrationAzure) pulumi.StringPtrOutput { return v.MetricFilterRegex }).(pulumi.StringPtrOutput)
}

// The human-readable name of this integration.
func (o CloudIntegrationAzureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIntegrationAzure) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of Azure resource groups from which to pull metrics.
func (o CloudIntegrationAzureOutput) ResourceGroupFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudIntegrationAzure) pulumi.StringArrayOutput { return v.ResourceGroupFilters }).(pulumi.StringArrayOutput)
}

// A value denoting which cloud service this service integrates with.
func (o CloudIntegrationAzureOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIntegrationAzure) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

// How often, in minutes, to refresh the service.
func (o CloudIntegrationAzureOutput) ServiceRefreshRateInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudIntegrationAzure) pulumi.IntPtrOutput { return v.ServiceRefreshRateInMinutes }).(pulumi.IntPtrOutput)
}

// Tenant ID for an Azure service account within your project.
func (o CloudIntegrationAzureOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIntegrationAzure) pulumi.StringOutput { return v.Tenant }).(pulumi.StringOutput)
}

type CloudIntegrationAzureArrayOutput struct{ *pulumi.OutputState }

func (CloudIntegrationAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudIntegrationAzure)(nil)).Elem()
}

func (o CloudIntegrationAzureArrayOutput) ToCloudIntegrationAzureArrayOutput() CloudIntegrationAzureArrayOutput {
	return o
}

func (o CloudIntegrationAzureArrayOutput) ToCloudIntegrationAzureArrayOutputWithContext(ctx context.Context) CloudIntegrationAzureArrayOutput {
	return o
}

func (o CloudIntegrationAzureArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*CloudIntegrationAzure] {
	return pulumix.Output[[]*CloudIntegrationAzure]{
		OutputState: o.OutputState,
	}
}

func (o CloudIntegrationAzureArrayOutput) Index(i pulumi.IntInput) CloudIntegrationAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudIntegrationAzure {
		return vs[0].([]*CloudIntegrationAzure)[vs[1].(int)]
	}).(CloudIntegrationAzureOutput)
}

type CloudIntegrationAzureMapOutput struct{ *pulumi.OutputState }

func (CloudIntegrationAzureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudIntegrationAzure)(nil)).Elem()
}

func (o CloudIntegrationAzureMapOutput) ToCloudIntegrationAzureMapOutput() CloudIntegrationAzureMapOutput {
	return o
}

func (o CloudIntegrationAzureMapOutput) ToCloudIntegrationAzureMapOutputWithContext(ctx context.Context) CloudIntegrationAzureMapOutput {
	return o
}

func (o CloudIntegrationAzureMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*CloudIntegrationAzure] {
	return pulumix.Output[map[string]*CloudIntegrationAzure]{
		OutputState: o.OutputState,
	}
}

func (o CloudIntegrationAzureMapOutput) MapIndex(k pulumi.StringInput) CloudIntegrationAzureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudIntegrationAzure {
		return vs[0].(map[string]*CloudIntegrationAzure)[vs[1].(string)]
	}).(CloudIntegrationAzureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudIntegrationAzureInput)(nil)).Elem(), &CloudIntegrationAzure{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudIntegrationAzureArrayInput)(nil)).Elem(), CloudIntegrationAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudIntegrationAzureMapInput)(nil)).Elem(), CloudIntegrationAzureMap{})
	pulumi.RegisterOutputType(CloudIntegrationAzureOutput{})
	pulumi.RegisterOutputType(CloudIntegrationAzureArrayOutput{})
	pulumi.RegisterOutputType(CloudIntegrationAzureMapOutput{})
}
