// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Wavefront Cloud Integration for Azure. This allows azure cloud integrations to be created,
// updated, and deleted.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-wavefront/sdk/go/wavefront"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := wavefront.NewCloudIntegrationAzureActivityLog(ctx, "azureActivityLog", &wavefront.CloudIntegrationAzureActivityLogArgs{
// 			ClientId:     pulumi.String("client-id2"),
// 			ClientSecret: pulumi.String("client-secret2"),
// 			Tenant:       pulumi.String("my-tenant2"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Azure Cloud Integrations can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import wavefront:index/cloudIntegrationAzure:CloudIntegrationAzure azure a411c16b-3cf7-4f03-bf11-8ca05aab898d
// ```
type CloudIntegrationAzure struct {
	pulumi.CustomResourceState

	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags pulumi.StringMapOutput `pulumi:"additionalTags"`
	// A list of Azure Activity Log categories.
	CategoryFilters pulumi.StringArrayOutput `pulumi:"categoryFilters"`
	// Client id for an azure service account within your project
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// Client secret for an Azure service account within your project
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// Forces this resource to save, even if errors are present
	ForceSave pulumi.BoolPtrOutput `pulumi:"forceSave"`
	// A regular expression that a metric name must match (case-insensitively) in order to be ingested
	MetricFilterRegex pulumi.StringPtrOutput `pulumi:"metricFilterRegex"`
	// The human-readable name of this integration
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of Azure resource groups from which to pull metrics
	ResourceGroupFilters pulumi.StringArrayOutput `pulumi:"resourceGroupFilters"`
	// A value denoting which cloud service this service integrates with
	Service pulumi.StringOutput `pulumi:"service"`
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes pulumi.IntPtrOutput `pulumi:"serviceRefreshRateInMinutes"`
	// Tenant Id for an Azure service account within your project
	Tenant pulumi.StringOutput `pulumi:"tenant"`
}

// NewCloudIntegrationAzure registers a new resource with the given unique name, arguments, and options.
func NewCloudIntegrationAzure(ctx *pulumi.Context,
	name string, args *CloudIntegrationAzureArgs, opts ...pulumi.ResourceOption) (*CloudIntegrationAzure, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.ClientSecret == nil {
		return nil, errors.New("invalid value for required argument 'ClientSecret'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	if args.Tenant == nil {
		return nil, errors.New("invalid value for required argument 'Tenant'")
	}
	var resource CloudIntegrationAzure
	err := ctx.RegisterResource("wavefront:index/cloudIntegrationAzure:CloudIntegrationAzure", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudIntegrationAzure gets an existing CloudIntegrationAzure resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudIntegrationAzure(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudIntegrationAzureState, opts ...pulumi.ResourceOption) (*CloudIntegrationAzure, error) {
	var resource CloudIntegrationAzure
	err := ctx.ReadResource("wavefront:index/cloudIntegrationAzure:CloudIntegrationAzure", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudIntegrationAzure resources.
type cloudIntegrationAzureState struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags map[string]string `pulumi:"additionalTags"`
	// A list of Azure Activity Log categories.
	CategoryFilters []string `pulumi:"categoryFilters"`
	// Client id for an azure service account within your project
	ClientId *string `pulumi:"clientId"`
	// Client secret for an Azure service account within your project
	ClientSecret *string `pulumi:"clientSecret"`
	// Forces this resource to save, even if errors are present
	ForceSave *bool `pulumi:"forceSave"`
	// A regular expression that a metric name must match (case-insensitively) in order to be ingested
	MetricFilterRegex *string `pulumi:"metricFilterRegex"`
	// The human-readable name of this integration
	Name *string `pulumi:"name"`
	// A list of Azure resource groups from which to pull metrics
	ResourceGroupFilters []string `pulumi:"resourceGroupFilters"`
	// A value denoting which cloud service this service integrates with
	Service *string `pulumi:"service"`
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes *int `pulumi:"serviceRefreshRateInMinutes"`
	// Tenant Id for an Azure service account within your project
	Tenant *string `pulumi:"tenant"`
}

type CloudIntegrationAzureState struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags pulumi.StringMapInput
	// A list of Azure Activity Log categories.
	CategoryFilters pulumi.StringArrayInput
	// Client id for an azure service account within your project
	ClientId pulumi.StringPtrInput
	// Client secret for an Azure service account within your project
	ClientSecret pulumi.StringPtrInput
	// Forces this resource to save, even if errors are present
	ForceSave pulumi.BoolPtrInput
	// A regular expression that a metric name must match (case-insensitively) in order to be ingested
	MetricFilterRegex pulumi.StringPtrInput
	// The human-readable name of this integration
	Name pulumi.StringPtrInput
	// A list of Azure resource groups from which to pull metrics
	ResourceGroupFilters pulumi.StringArrayInput
	// A value denoting which cloud service this service integrates with
	Service pulumi.StringPtrInput
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
	// Tenant Id for an Azure service account within your project
	Tenant pulumi.StringPtrInput
}

func (CloudIntegrationAzureState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationAzureState)(nil)).Elem()
}

type cloudIntegrationAzureArgs struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags map[string]string `pulumi:"additionalTags"`
	// A list of Azure Activity Log categories.
	CategoryFilters []string `pulumi:"categoryFilters"`
	// Client id for an azure service account within your project
	ClientId string `pulumi:"clientId"`
	// Client secret for an Azure service account within your project
	ClientSecret string `pulumi:"clientSecret"`
	// Forces this resource to save, even if errors are present
	ForceSave *bool `pulumi:"forceSave"`
	// A regular expression that a metric name must match (case-insensitively) in order to be ingested
	MetricFilterRegex *string `pulumi:"metricFilterRegex"`
	// The human-readable name of this integration
	Name *string `pulumi:"name"`
	// A list of Azure resource groups from which to pull metrics
	ResourceGroupFilters []string `pulumi:"resourceGroupFilters"`
	// A value denoting which cloud service this service integrates with
	Service string `pulumi:"service"`
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes *int `pulumi:"serviceRefreshRateInMinutes"`
	// Tenant Id for an Azure service account within your project
	Tenant string `pulumi:"tenant"`
}

// The set of arguments for constructing a CloudIntegrationAzure resource.
type CloudIntegrationAzureArgs struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags pulumi.StringMapInput
	// A list of Azure Activity Log categories.
	CategoryFilters pulumi.StringArrayInput
	// Client id for an azure service account within your project
	ClientId pulumi.StringInput
	// Client secret for an Azure service account within your project
	ClientSecret pulumi.StringInput
	// Forces this resource to save, even if errors are present
	ForceSave pulumi.BoolPtrInput
	// A regular expression that a metric name must match (case-insensitively) in order to be ingested
	MetricFilterRegex pulumi.StringPtrInput
	// The human-readable name of this integration
	Name pulumi.StringPtrInput
	// A list of Azure resource groups from which to pull metrics
	ResourceGroupFilters pulumi.StringArrayInput
	// A value denoting which cloud service this service integrates with
	Service pulumi.StringInput
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
	// Tenant Id for an Azure service account within your project
	Tenant pulumi.StringInput
}

func (CloudIntegrationAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationAzureArgs)(nil)).Elem()
}

type CloudIntegrationAzureInput interface {
	pulumi.Input

	ToCloudIntegrationAzureOutput() CloudIntegrationAzureOutput
	ToCloudIntegrationAzureOutputWithContext(ctx context.Context) CloudIntegrationAzureOutput
}

func (CloudIntegrationAzure) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudIntegrationAzure)(nil)).Elem()
}

func (i CloudIntegrationAzure) ToCloudIntegrationAzureOutput() CloudIntegrationAzureOutput {
	return i.ToCloudIntegrationAzureOutputWithContext(context.Background())
}

func (i CloudIntegrationAzure) ToCloudIntegrationAzureOutputWithContext(ctx context.Context) CloudIntegrationAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudIntegrationAzureOutput)
}

type CloudIntegrationAzureOutput struct {
	*pulumi.OutputState
}

func (CloudIntegrationAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudIntegrationAzureOutput)(nil)).Elem()
}

func (o CloudIntegrationAzureOutput) ToCloudIntegrationAzureOutput() CloudIntegrationAzureOutput {
	return o
}

func (o CloudIntegrationAzureOutput) ToCloudIntegrationAzureOutputWithContext(ctx context.Context) CloudIntegrationAzureOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(CloudIntegrationAzureOutput{})
}
