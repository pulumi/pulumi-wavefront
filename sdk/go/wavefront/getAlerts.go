// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get information about all Wavefront alerts.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := wavefront.GetAlerts(ctx, &wavefront.GetAlertsArgs{
//				Limit:  pulumi.IntRef(10),
//				Offset: pulumi.IntRef(0),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAlerts(ctx *pulumi.Context, args *GetAlertsArgs, opts ...pulumi.InvokeOption) (*GetAlertsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAlertsResult
	err := ctx.Invoke("wavefront:index/getAlerts:getAlerts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlerts.
type GetAlertsArgs struct {
	// Limit is the maximum number of results to be returned. Defaults to 100.
	Limit *int `pulumi:"limit"`
	// Offset is the offset from the first result to be returned. Defaults to 0.
	Offset *int `pulumi:"offset"`
}

// A collection of values returned by getAlerts.
type GetAlertsResult struct {
	// List of all alerts in Wavefront. For each alert you will see a list of attributes.
	Alerts []GetAlertsAlert `pulumi:"alerts"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Limit  *int   `pulumi:"limit"`
	Offset *int   `pulumi:"offset"`
}

func GetAlertsOutput(ctx *pulumi.Context, args GetAlertsOutputArgs, opts ...pulumi.InvokeOption) GetAlertsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAlertsResult, error) {
			args := v.(GetAlertsArgs)
			r, err := GetAlerts(ctx, &args, opts...)
			var s GetAlertsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAlertsResultOutput)
}

// A collection of arguments for invoking getAlerts.
type GetAlertsOutputArgs struct {
	// Limit is the maximum number of results to be returned. Defaults to 100.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// Offset is the offset from the first result to be returned. Defaults to 0.
	Offset pulumi.IntPtrInput `pulumi:"offset"`
}

func (GetAlertsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsArgs)(nil)).Elem()
}

// A collection of values returned by getAlerts.
type GetAlertsResultOutput struct{ *pulumi.OutputState }

func (GetAlertsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsResult)(nil)).Elem()
}

func (o GetAlertsResultOutput) ToGetAlertsResultOutput() GetAlertsResultOutput {
	return o
}

func (o GetAlertsResultOutput) ToGetAlertsResultOutputWithContext(ctx context.Context) GetAlertsResultOutput {
	return o
}

func (o GetAlertsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertsResult] {
	return pulumix.Output[GetAlertsResult]{
		OutputState: o.OutputState,
	}
}

// List of all alerts in Wavefront. For each alert you will see a list of attributes.
func (o GetAlertsResultOutput) Alerts() GetAlertsAlertArrayOutput {
	return o.ApplyT(func(v GetAlertsResult) []GetAlertsAlert { return v.Alerts }).(GetAlertsAlertArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAlertsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAlertsResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAlertsResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetAlertsResultOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAlertsResult) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAlertsResultOutput{})
}
