// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Alert struct {
	pulumi.CustomResourceState

	AdditionalInformation              pulumi.StringPtrOutput   `pulumi:"additionalInformation"`
	AlertType                          pulumi.StringPtrOutput   `pulumi:"alertType"`
	CanModifies                        pulumi.StringArrayOutput `pulumi:"canModifies"`
	CanViews                           pulumi.StringArrayOutput `pulumi:"canViews"`
	Condition                          pulumi.StringPtrOutput   `pulumi:"condition"`
	Conditions                         pulumi.StringMapOutput   `pulumi:"conditions"`
	DisplayExpression                  pulumi.StringPtrOutput   `pulumi:"displayExpression"`
	Minutes                            pulumi.IntOutput         `pulumi:"minutes"`
	Name                               pulumi.StringOutput      `pulumi:"name"`
	NotificationResendFrequencyMinutes pulumi.IntPtrOutput      `pulumi:"notificationResendFrequencyMinutes"`
	ResolveAfterMinutes                pulumi.IntPtrOutput      `pulumi:"resolveAfterMinutes"`
	Severity                           pulumi.StringPtrOutput   `pulumi:"severity"`
	Tags                               pulumi.StringArrayOutput `pulumi:"tags"`
	Target                             pulumi.StringPtrOutput   `pulumi:"target"`
	ThresholdTargets                   pulumi.StringMapOutput   `pulumi:"thresholdTargets"`
}

// NewAlert registers a new resource with the given unique name, arguments, and options.
func NewAlert(ctx *pulumi.Context,
	name string, args *AlertArgs, opts ...pulumi.ResourceOption) (*Alert, error) {
	if args == nil || args.Minutes == nil {
		return nil, errors.New("missing required argument 'Minutes'")
	}
	if args == nil || args.Tags == nil {
		return nil, errors.New("missing required argument 'Tags'")
	}
	if args == nil {
		args = &AlertArgs{}
	}
	var resource Alert
	err := ctx.RegisterResource("wavefront:index/alert:Alert", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlert gets an existing Alert resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlert(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertState, opts ...pulumi.ResourceOption) (*Alert, error) {
	var resource Alert
	err := ctx.ReadResource("wavefront:index/alert:Alert", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Alert resources.
type alertState struct {
	AdditionalInformation              *string           `pulumi:"additionalInformation"`
	AlertType                          *string           `pulumi:"alertType"`
	CanModifies                        []string          `pulumi:"canModifies"`
	CanViews                           []string          `pulumi:"canViews"`
	Condition                          *string           `pulumi:"condition"`
	Conditions                         map[string]string `pulumi:"conditions"`
	DisplayExpression                  *string           `pulumi:"displayExpression"`
	Minutes                            *int              `pulumi:"minutes"`
	Name                               *string           `pulumi:"name"`
	NotificationResendFrequencyMinutes *int              `pulumi:"notificationResendFrequencyMinutes"`
	ResolveAfterMinutes                *int              `pulumi:"resolveAfterMinutes"`
	Severity                           *string           `pulumi:"severity"`
	Tags                               []string          `pulumi:"tags"`
	Target                             *string           `pulumi:"target"`
	ThresholdTargets                   map[string]string `pulumi:"thresholdTargets"`
}

type AlertState struct {
	AdditionalInformation              pulumi.StringPtrInput
	AlertType                          pulumi.StringPtrInput
	CanModifies                        pulumi.StringArrayInput
	CanViews                           pulumi.StringArrayInput
	Condition                          pulumi.StringPtrInput
	Conditions                         pulumi.StringMapInput
	DisplayExpression                  pulumi.StringPtrInput
	Minutes                            pulumi.IntPtrInput
	Name                               pulumi.StringPtrInput
	NotificationResendFrequencyMinutes pulumi.IntPtrInput
	ResolveAfterMinutes                pulumi.IntPtrInput
	Severity                           pulumi.StringPtrInput
	Tags                               pulumi.StringArrayInput
	Target                             pulumi.StringPtrInput
	ThresholdTargets                   pulumi.StringMapInput
}

func (AlertState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertState)(nil)).Elem()
}

type alertArgs struct {
	AdditionalInformation              *string           `pulumi:"additionalInformation"`
	AlertType                          *string           `pulumi:"alertType"`
	CanModifies                        []string          `pulumi:"canModifies"`
	CanViews                           []string          `pulumi:"canViews"`
	Condition                          *string           `pulumi:"condition"`
	Conditions                         map[string]string `pulumi:"conditions"`
	DisplayExpression                  *string           `pulumi:"displayExpression"`
	Minutes                            int               `pulumi:"minutes"`
	Name                               *string           `pulumi:"name"`
	NotificationResendFrequencyMinutes *int              `pulumi:"notificationResendFrequencyMinutes"`
	ResolveAfterMinutes                *int              `pulumi:"resolveAfterMinutes"`
	Severity                           *string           `pulumi:"severity"`
	Tags                               []string          `pulumi:"tags"`
	Target                             *string           `pulumi:"target"`
	ThresholdTargets                   map[string]string `pulumi:"thresholdTargets"`
}

// The set of arguments for constructing a Alert resource.
type AlertArgs struct {
	AdditionalInformation              pulumi.StringPtrInput
	AlertType                          pulumi.StringPtrInput
	CanModifies                        pulumi.StringArrayInput
	CanViews                           pulumi.StringArrayInput
	Condition                          pulumi.StringPtrInput
	Conditions                         pulumi.StringMapInput
	DisplayExpression                  pulumi.StringPtrInput
	Minutes                            pulumi.IntInput
	Name                               pulumi.StringPtrInput
	NotificationResendFrequencyMinutes pulumi.IntPtrInput
	ResolveAfterMinutes                pulumi.IntPtrInput
	Severity                           pulumi.StringPtrInput
	Tags                               pulumi.StringArrayInput
	Target                             pulumi.StringPtrInput
	ThresholdTargets                   pulumi.StringMapInput
}

func (AlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertArgs)(nil)).Elem()
}
