// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about all Wavefront derived metrics.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-wavefront/sdk/go/wavefront"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := wavefront.GetDerivedMetrics(ctx, &wavefront.GetDerivedMetricsArgs{
//				Limit:  pulumi.IntRef(10),
//				Offset: pulumi.IntRef(0),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDerivedMetrics(ctx *pulumi.Context, args *GetDerivedMetricsArgs, opts ...pulumi.InvokeOption) (*GetDerivedMetricsResult, error) {
	var rv GetDerivedMetricsResult
	err := ctx.Invoke("wavefront:index/getDerivedMetrics:getDerivedMetrics", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDerivedMetrics.
type GetDerivedMetricsArgs struct {
	// Limit is the maximum number of results to be returned. Defaults to 100.
	Limit *int `pulumi:"limit"`
	// Offset is the offset from the first result to be returned. Defaults to 0.
	Offset *int `pulumi:"offset"`
}

// A collection of values returned by getDerivedMetrics.
type GetDerivedMetricsResult struct {
	// List of all derived metrics in Wavefront. For each derived metric you will see a list of attributes.
	DerivedMetrics []GetDerivedMetricsDerivedMetric `pulumi:"derivedMetrics"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Limit  *int   `pulumi:"limit"`
	Offset *int   `pulumi:"offset"`
}

func GetDerivedMetricsOutput(ctx *pulumi.Context, args GetDerivedMetricsOutputArgs, opts ...pulumi.InvokeOption) GetDerivedMetricsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDerivedMetricsResult, error) {
			args := v.(GetDerivedMetricsArgs)
			r, err := GetDerivedMetrics(ctx, &args, opts...)
			var s GetDerivedMetricsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDerivedMetricsResultOutput)
}

// A collection of arguments for invoking getDerivedMetrics.
type GetDerivedMetricsOutputArgs struct {
	// Limit is the maximum number of results to be returned. Defaults to 100.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// Offset is the offset from the first result to be returned. Defaults to 0.
	Offset pulumi.IntPtrInput `pulumi:"offset"`
}

func (GetDerivedMetricsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDerivedMetricsArgs)(nil)).Elem()
}

// A collection of values returned by getDerivedMetrics.
type GetDerivedMetricsResultOutput struct{ *pulumi.OutputState }

func (GetDerivedMetricsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDerivedMetricsResult)(nil)).Elem()
}

func (o GetDerivedMetricsResultOutput) ToGetDerivedMetricsResultOutput() GetDerivedMetricsResultOutput {
	return o
}

func (o GetDerivedMetricsResultOutput) ToGetDerivedMetricsResultOutputWithContext(ctx context.Context) GetDerivedMetricsResultOutput {
	return o
}

// List of all derived metrics in Wavefront. For each derived metric you will see a list of attributes.
func (o GetDerivedMetricsResultOutput) DerivedMetrics() GetDerivedMetricsDerivedMetricArrayOutput {
	return o.ApplyT(func(v GetDerivedMetricsResult) []GetDerivedMetricsDerivedMetric { return v.DerivedMetrics }).(GetDerivedMetricsDerivedMetricArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDerivedMetricsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDerivedMetricsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDerivedMetricsResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDerivedMetricsResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetDerivedMetricsResultOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDerivedMetricsResult) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDerivedMetricsResultOutput{})
}
