// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Wavefront Cloud Integration for App Dynamics. This allows app dynamics cloud integrations to be created,
// updated, and deleted.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-wavefront/sdk/go/wavefront"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := wavefront.NewCloudIntegrationAppDynamics(ctx, "appDynamics", &wavefront.CloudIntegrationAppDynamicsArgs{
// 			ControllerName:    pulumi.String("exampleController"),
// 			EncryptedPassword: pulumi.String("encryptedPassword"),
// 			UserName:          pulumi.String("example"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// App Dynamic Cloud Integrations can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import wavefront:index/cloudIntegrationAppDynamics:CloudIntegrationAppDynamics app_dynamics a411c16b-3cf7-4f03-bf11-8ca05aab898d
// ```
type CloudIntegrationAppDynamics struct {
	pulumi.CustomResourceState

	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags pulumi.StringMapOutput `pulumi:"additionalTags"`
	// List of regular expressions that a application name must match (case-insensitively)
	// in order to be ingested
	AppFilterRegexes pulumi.StringArrayOutput `pulumi:"appFilterRegexes"`
	// Name of the SaaS controller
	ControllerName pulumi.StringOutput `pulumi:"controllerName"`
	// Boolean flag to control Application Infrastructure metric injection
	EnableAppInfraMetrics pulumi.BoolPtrOutput `pulumi:"enableAppInfraMetrics"`
	// Boolean flag to control Backend metric injection
	EnableBackendMetrics pulumi.BoolPtrOutput `pulumi:"enableBackendMetrics"`
	// Boolean flag to control Business Transaction metric injection
	EnableBusinessTrxMetrics pulumi.BoolPtrOutput `pulumi:"enableBusinessTrxMetrics"`
	// Boolean flag to control Error metric injection
	EnableErrorMetrics pulumi.BoolPtrOutput `pulumi:"enableErrorMetrics"`
	// Boolean flag to control Individual Node metric injection
	EnableIndividualNodeMetrics pulumi.BoolPtrOutput `pulumi:"enableIndividualNodeMetrics"`
	// Boolean flag to control Overall Performance metric injection
	EnableOverallPerfMetrics pulumi.BoolPtrOutput `pulumi:"enableOverallPerfMetrics"`
	// Set this to `false` to get separate results for all values within the time range,
	// by default it is `true`
	EnableRollup pulumi.BoolPtrOutput `pulumi:"enableRollup"`
	// Boolean flag to control Service End point metric injection
	EnableServiceEndpointMetrics pulumi.BoolPtrOutput `pulumi:"enableServiceEndpointMetrics"`
	// Password for AppDynamics user
	EncryptedPassword pulumi.StringOutput `pulumi:"encryptedPassword"`
	// Forces this resource to save, even if errors are present
	ForceSave pulumi.BoolPtrOutput `pulumi:"forceSave"`
	// The human-readable name of this integration
	Name pulumi.StringOutput `pulumi:"name"`
	// A value denoting which cloud service this service integrates with
	Service pulumi.StringOutput `pulumi:"service"`
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes pulumi.IntPtrOutput `pulumi:"serviceRefreshRateInMinutes"`
	// Username is a combination of userName and the account name
	UserName pulumi.StringOutput `pulumi:"userName"`
}

// NewCloudIntegrationAppDynamics registers a new resource with the given unique name, arguments, and options.
func NewCloudIntegrationAppDynamics(ctx *pulumi.Context,
	name string, args *CloudIntegrationAppDynamicsArgs, opts ...pulumi.ResourceOption) (*CloudIntegrationAppDynamics, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ControllerName == nil {
		return nil, errors.New("invalid value for required argument 'ControllerName'")
	}
	if args.EncryptedPassword == nil {
		return nil, errors.New("invalid value for required argument 'EncryptedPassword'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	if args.UserName == nil {
		return nil, errors.New("invalid value for required argument 'UserName'")
	}
	var resource CloudIntegrationAppDynamics
	err := ctx.RegisterResource("wavefront:index/cloudIntegrationAppDynamics:CloudIntegrationAppDynamics", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudIntegrationAppDynamics gets an existing CloudIntegrationAppDynamics resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudIntegrationAppDynamics(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudIntegrationAppDynamicsState, opts ...pulumi.ResourceOption) (*CloudIntegrationAppDynamics, error) {
	var resource CloudIntegrationAppDynamics
	err := ctx.ReadResource("wavefront:index/cloudIntegrationAppDynamics:CloudIntegrationAppDynamics", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudIntegrationAppDynamics resources.
type cloudIntegrationAppDynamicsState struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags map[string]string `pulumi:"additionalTags"`
	// List of regular expressions that a application name must match (case-insensitively)
	// in order to be ingested
	AppFilterRegexes []string `pulumi:"appFilterRegexes"`
	// Name of the SaaS controller
	ControllerName *string `pulumi:"controllerName"`
	// Boolean flag to control Application Infrastructure metric injection
	EnableAppInfraMetrics *bool `pulumi:"enableAppInfraMetrics"`
	// Boolean flag to control Backend metric injection
	EnableBackendMetrics *bool `pulumi:"enableBackendMetrics"`
	// Boolean flag to control Business Transaction metric injection
	EnableBusinessTrxMetrics *bool `pulumi:"enableBusinessTrxMetrics"`
	// Boolean flag to control Error metric injection
	EnableErrorMetrics *bool `pulumi:"enableErrorMetrics"`
	// Boolean flag to control Individual Node metric injection
	EnableIndividualNodeMetrics *bool `pulumi:"enableIndividualNodeMetrics"`
	// Boolean flag to control Overall Performance metric injection
	EnableOverallPerfMetrics *bool `pulumi:"enableOverallPerfMetrics"`
	// Set this to `false` to get separate results for all values within the time range,
	// by default it is `true`
	EnableRollup *bool `pulumi:"enableRollup"`
	// Boolean flag to control Service End point metric injection
	EnableServiceEndpointMetrics *bool `pulumi:"enableServiceEndpointMetrics"`
	// Password for AppDynamics user
	EncryptedPassword *string `pulumi:"encryptedPassword"`
	// Forces this resource to save, even if errors are present
	ForceSave *bool `pulumi:"forceSave"`
	// The human-readable name of this integration
	Name *string `pulumi:"name"`
	// A value denoting which cloud service this service integrates with
	Service *string `pulumi:"service"`
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes *int `pulumi:"serviceRefreshRateInMinutes"`
	// Username is a combination of userName and the account name
	UserName *string `pulumi:"userName"`
}

type CloudIntegrationAppDynamicsState struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags pulumi.StringMapInput
	// List of regular expressions that a application name must match (case-insensitively)
	// in order to be ingested
	AppFilterRegexes pulumi.StringArrayInput
	// Name of the SaaS controller
	ControllerName pulumi.StringPtrInput
	// Boolean flag to control Application Infrastructure metric injection
	EnableAppInfraMetrics pulumi.BoolPtrInput
	// Boolean flag to control Backend metric injection
	EnableBackendMetrics pulumi.BoolPtrInput
	// Boolean flag to control Business Transaction metric injection
	EnableBusinessTrxMetrics pulumi.BoolPtrInput
	// Boolean flag to control Error metric injection
	EnableErrorMetrics pulumi.BoolPtrInput
	// Boolean flag to control Individual Node metric injection
	EnableIndividualNodeMetrics pulumi.BoolPtrInput
	// Boolean flag to control Overall Performance metric injection
	EnableOverallPerfMetrics pulumi.BoolPtrInput
	// Set this to `false` to get separate results for all values within the time range,
	// by default it is `true`
	EnableRollup pulumi.BoolPtrInput
	// Boolean flag to control Service End point metric injection
	EnableServiceEndpointMetrics pulumi.BoolPtrInput
	// Password for AppDynamics user
	EncryptedPassword pulumi.StringPtrInput
	// Forces this resource to save, even if errors are present
	ForceSave pulumi.BoolPtrInput
	// The human-readable name of this integration
	Name pulumi.StringPtrInput
	// A value denoting which cloud service this service integrates with
	Service pulumi.StringPtrInput
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
	// Username is a combination of userName and the account name
	UserName pulumi.StringPtrInput
}

func (CloudIntegrationAppDynamicsState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationAppDynamicsState)(nil)).Elem()
}

type cloudIntegrationAppDynamicsArgs struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags map[string]string `pulumi:"additionalTags"`
	// List of regular expressions that a application name must match (case-insensitively)
	// in order to be ingested
	AppFilterRegexes []string `pulumi:"appFilterRegexes"`
	// Name of the SaaS controller
	ControllerName string `pulumi:"controllerName"`
	// Boolean flag to control Application Infrastructure metric injection
	EnableAppInfraMetrics *bool `pulumi:"enableAppInfraMetrics"`
	// Boolean flag to control Backend metric injection
	EnableBackendMetrics *bool `pulumi:"enableBackendMetrics"`
	// Boolean flag to control Business Transaction metric injection
	EnableBusinessTrxMetrics *bool `pulumi:"enableBusinessTrxMetrics"`
	// Boolean flag to control Error metric injection
	EnableErrorMetrics *bool `pulumi:"enableErrorMetrics"`
	// Boolean flag to control Individual Node metric injection
	EnableIndividualNodeMetrics *bool `pulumi:"enableIndividualNodeMetrics"`
	// Boolean flag to control Overall Performance metric injection
	EnableOverallPerfMetrics *bool `pulumi:"enableOverallPerfMetrics"`
	// Set this to `false` to get separate results for all values within the time range,
	// by default it is `true`
	EnableRollup *bool `pulumi:"enableRollup"`
	// Boolean flag to control Service End point metric injection
	EnableServiceEndpointMetrics *bool `pulumi:"enableServiceEndpointMetrics"`
	// Password for AppDynamics user
	EncryptedPassword string `pulumi:"encryptedPassword"`
	// Forces this resource to save, even if errors are present
	ForceSave *bool `pulumi:"forceSave"`
	// The human-readable name of this integration
	Name *string `pulumi:"name"`
	// A value denoting which cloud service this service integrates with
	Service string `pulumi:"service"`
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes *int `pulumi:"serviceRefreshRateInMinutes"`
	// Username is a combination of userName and the account name
	UserName string `pulumi:"userName"`
}

// The set of arguments for constructing a CloudIntegrationAppDynamics resource.
type CloudIntegrationAppDynamicsArgs struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags pulumi.StringMapInput
	// List of regular expressions that a application name must match (case-insensitively)
	// in order to be ingested
	AppFilterRegexes pulumi.StringArrayInput
	// Name of the SaaS controller
	ControllerName pulumi.StringInput
	// Boolean flag to control Application Infrastructure metric injection
	EnableAppInfraMetrics pulumi.BoolPtrInput
	// Boolean flag to control Backend metric injection
	EnableBackendMetrics pulumi.BoolPtrInput
	// Boolean flag to control Business Transaction metric injection
	EnableBusinessTrxMetrics pulumi.BoolPtrInput
	// Boolean flag to control Error metric injection
	EnableErrorMetrics pulumi.BoolPtrInput
	// Boolean flag to control Individual Node metric injection
	EnableIndividualNodeMetrics pulumi.BoolPtrInput
	// Boolean flag to control Overall Performance metric injection
	EnableOverallPerfMetrics pulumi.BoolPtrInput
	// Set this to `false` to get separate results for all values within the time range,
	// by default it is `true`
	EnableRollup pulumi.BoolPtrInput
	// Boolean flag to control Service End point metric injection
	EnableServiceEndpointMetrics pulumi.BoolPtrInput
	// Password for AppDynamics user
	EncryptedPassword pulumi.StringInput
	// Forces this resource to save, even if errors are present
	ForceSave pulumi.BoolPtrInput
	// The human-readable name of this integration
	Name pulumi.StringPtrInput
	// A value denoting which cloud service this service integrates with
	Service pulumi.StringInput
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
	// Username is a combination of userName and the account name
	UserName pulumi.StringInput
}

func (CloudIntegrationAppDynamicsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationAppDynamicsArgs)(nil)).Elem()
}

type CloudIntegrationAppDynamicsInput interface {
	pulumi.Input

	ToCloudIntegrationAppDynamicsOutput() CloudIntegrationAppDynamicsOutput
	ToCloudIntegrationAppDynamicsOutputWithContext(ctx context.Context) CloudIntegrationAppDynamicsOutput
}

func (CloudIntegrationAppDynamics) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudIntegrationAppDynamics)(nil)).Elem()
}

func (i CloudIntegrationAppDynamics) ToCloudIntegrationAppDynamicsOutput() CloudIntegrationAppDynamicsOutput {
	return i.ToCloudIntegrationAppDynamicsOutputWithContext(context.Background())
}

func (i CloudIntegrationAppDynamics) ToCloudIntegrationAppDynamicsOutputWithContext(ctx context.Context) CloudIntegrationAppDynamicsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudIntegrationAppDynamicsOutput)
}

type CloudIntegrationAppDynamicsOutput struct {
	*pulumi.OutputState
}

func (CloudIntegrationAppDynamicsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudIntegrationAppDynamicsOutput)(nil)).Elem()
}

func (o CloudIntegrationAppDynamicsOutput) ToCloudIntegrationAppDynamicsOutput() CloudIntegrationAppDynamicsOutput {
	return o
}

func (o CloudIntegrationAppDynamicsOutput) ToCloudIntegrationAppDynamicsOutputWithContext(ctx context.Context) CloudIntegrationAppDynamicsOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(CloudIntegrationAppDynamicsOutput{})
}
