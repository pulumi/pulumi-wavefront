// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Wavefront Cloud Integration for GCP Billing. This allows GCP Billing cloud integrations to be created,
// updated, and deleted.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-wavefront/sdk/go/wavefront/"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := wavefront.NewCloudIntegrationGcpBilling(ctx, "gcpBilling", &wavefront.CloudIntegrationGcpBillingArgs{
// 			ApiKey:    pulumi.String("example-api-key"),
// 			JsonKey:   pulumi.String(fmt.Sprintf("%v%v", "{...your gcp key ...}\n", "\n")),
// 			ProjectId: pulumi.String("example-gcp-project"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// GCP Billing Cloud Integrations can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import wavefront:index/cloudIntegrationGcpBilling:CloudIntegrationGcpBilling gcp_billing a411c16b-3cf7-4f03-bf11-8ca05aab898d
// ```
type CloudIntegrationGcpBilling struct {
	pulumi.CustomResourceState

	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags pulumi.StringMapOutput `pulumi:"additionalTags"`
	// API key for Google Cloud Platform (GCP)
	ApiKey pulumi.StringOutput `pulumi:"apiKey"`
	// Forces this resource to save, even if errors are present
	ForceSave pulumi.BoolPtrOutput `pulumi:"forceSave"`
	// Private key for a Google Cloud Platform (GCP) service account within your project.
	// The account must be at least granted Monitoring Viewer permissions. This key must be in the JSON format generated by GCP.
	JsonKey pulumi.StringOutput `pulumi:"jsonKey"`
	// The human-readable name of this integration
	Name pulumi.StringOutput `pulumi:"name"`
	// The Google Cloud Platform (GCP) Project Id
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// A value denoting which cloud service this service integrates with
	Service pulumi.StringOutput `pulumi:"service"`
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes pulumi.IntPtrOutput `pulumi:"serviceRefreshRateInMinutes"`
}

// NewCloudIntegrationGcpBilling registers a new resource with the given unique name, arguments, and options.
func NewCloudIntegrationGcpBilling(ctx *pulumi.Context,
	name string, args *CloudIntegrationGcpBillingArgs, opts ...pulumi.ResourceOption) (*CloudIntegrationGcpBilling, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiKey == nil {
		return nil, errors.New("invalid value for required argument 'ApiKey'")
	}
	if args.JsonKey == nil {
		return nil, errors.New("invalid value for required argument 'JsonKey'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	var resource CloudIntegrationGcpBilling
	err := ctx.RegisterResource("wavefront:index/cloudIntegrationGcpBilling:CloudIntegrationGcpBilling", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudIntegrationGcpBilling gets an existing CloudIntegrationGcpBilling resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudIntegrationGcpBilling(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudIntegrationGcpBillingState, opts ...pulumi.ResourceOption) (*CloudIntegrationGcpBilling, error) {
	var resource CloudIntegrationGcpBilling
	err := ctx.ReadResource("wavefront:index/cloudIntegrationGcpBilling:CloudIntegrationGcpBilling", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudIntegrationGcpBilling resources.
type cloudIntegrationGcpBillingState struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags map[string]string `pulumi:"additionalTags"`
	// API key for Google Cloud Platform (GCP)
	ApiKey *string `pulumi:"apiKey"`
	// Forces this resource to save, even if errors are present
	ForceSave *bool `pulumi:"forceSave"`
	// Private key for a Google Cloud Platform (GCP) service account within your project.
	// The account must be at least granted Monitoring Viewer permissions. This key must be in the JSON format generated by GCP.
	JsonKey *string `pulumi:"jsonKey"`
	// The human-readable name of this integration
	Name *string `pulumi:"name"`
	// The Google Cloud Platform (GCP) Project Id
	ProjectId *string `pulumi:"projectId"`
	// A value denoting which cloud service this service integrates with
	Service *string `pulumi:"service"`
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes *int `pulumi:"serviceRefreshRateInMinutes"`
}

type CloudIntegrationGcpBillingState struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags pulumi.StringMapInput
	// API key for Google Cloud Platform (GCP)
	ApiKey pulumi.StringPtrInput
	// Forces this resource to save, even if errors are present
	ForceSave pulumi.BoolPtrInput
	// Private key for a Google Cloud Platform (GCP) service account within your project.
	// The account must be at least granted Monitoring Viewer permissions. This key must be in the JSON format generated by GCP.
	JsonKey pulumi.StringPtrInput
	// The human-readable name of this integration
	Name pulumi.StringPtrInput
	// The Google Cloud Platform (GCP) Project Id
	ProjectId pulumi.StringPtrInput
	// A value denoting which cloud service this service integrates with
	Service pulumi.StringPtrInput
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
}

func (CloudIntegrationGcpBillingState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationGcpBillingState)(nil)).Elem()
}

type cloudIntegrationGcpBillingArgs struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags map[string]string `pulumi:"additionalTags"`
	// API key for Google Cloud Platform (GCP)
	ApiKey string `pulumi:"apiKey"`
	// Forces this resource to save, even if errors are present
	ForceSave *bool `pulumi:"forceSave"`
	// Private key for a Google Cloud Platform (GCP) service account within your project.
	// The account must be at least granted Monitoring Viewer permissions. This key must be in the JSON format generated by GCP.
	JsonKey string `pulumi:"jsonKey"`
	// The human-readable name of this integration
	Name *string `pulumi:"name"`
	// The Google Cloud Platform (GCP) Project Id
	ProjectId string `pulumi:"projectId"`
	// A value denoting which cloud service this service integrates with
	Service string `pulumi:"service"`
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes *int `pulumi:"serviceRefreshRateInMinutes"`
}

// The set of arguments for constructing a CloudIntegrationGcpBilling resource.
type CloudIntegrationGcpBillingArgs struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags pulumi.StringMapInput
	// API key for Google Cloud Platform (GCP)
	ApiKey pulumi.StringInput
	// Forces this resource to save, even if errors are present
	ForceSave pulumi.BoolPtrInput
	// Private key for a Google Cloud Platform (GCP) service account within your project.
	// The account must be at least granted Monitoring Viewer permissions. This key must be in the JSON format generated by GCP.
	JsonKey pulumi.StringInput
	// The human-readable name of this integration
	Name pulumi.StringPtrInput
	// The Google Cloud Platform (GCP) Project Id
	ProjectId pulumi.StringInput
	// A value denoting which cloud service this service integrates with
	Service pulumi.StringInput
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
}

func (CloudIntegrationGcpBillingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationGcpBillingArgs)(nil)).Elem()
}

type CloudIntegrationGcpBillingInput interface {
	pulumi.Input

	ToCloudIntegrationGcpBillingOutput() CloudIntegrationGcpBillingOutput
	ToCloudIntegrationGcpBillingOutputWithContext(ctx context.Context) CloudIntegrationGcpBillingOutput
}

func (*CloudIntegrationGcpBilling) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudIntegrationGcpBilling)(nil))
}

func (i *CloudIntegrationGcpBilling) ToCloudIntegrationGcpBillingOutput() CloudIntegrationGcpBillingOutput {
	return i.ToCloudIntegrationGcpBillingOutputWithContext(context.Background())
}

func (i *CloudIntegrationGcpBilling) ToCloudIntegrationGcpBillingOutputWithContext(ctx context.Context) CloudIntegrationGcpBillingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudIntegrationGcpBillingOutput)
}

type CloudIntegrationGcpBillingOutput struct {
	*pulumi.OutputState
}

func (CloudIntegrationGcpBillingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudIntegrationGcpBilling)(nil))
}

func (o CloudIntegrationGcpBillingOutput) ToCloudIntegrationGcpBillingOutput() CloudIntegrationGcpBillingOutput {
	return o
}

func (o CloudIntegrationGcpBillingOutput) ToCloudIntegrationGcpBillingOutputWithContext(ctx context.Context) CloudIntegrationGcpBillingOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(CloudIntegrationGcpBillingOutput{})
}
