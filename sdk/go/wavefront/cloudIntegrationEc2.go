// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wavefront

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Wavefront Cloud Integration for EC2. This allows EC2 cloud integrations to be created,
// updated, and delete
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-wavefront/sdk/go/wavefront"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		extId, err := wavefront.NewCloudIntegrationAwsExternalId(ctx, "extId", nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = wavefront.NewCloudIntegrationEc2(ctx, "ec2", &wavefront.CloudIntegrationEc2Args{
// 			RoleArn:    pulumi.String("arn:aws::1234567:role/example-arn"),
// 			ExternalId: extId.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// EC2 Cloud Integrations can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import wavefront:index/cloudIntegrationEc2:CloudIntegrationEc2 ec2 a411c16b-3cf7-4f03-bf11-8ca05aab898d
// ```
type CloudIntegrationEc2 struct {
	pulumi.CustomResourceState

	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags pulumi.StringMapOutput `pulumi:"additionalTags"`
	// The Role ARN that the customer has created in AWS IAM to allow access to Wavefront
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// Forces this resource to save, even if errors are present
	ForceSave    pulumi.BoolPtrOutput     `pulumi:"forceSave"`
	HostnameTags pulumi.StringArrayOutput `pulumi:"hostnameTags"`
	// The human-readable name of this integration
	Name pulumi.StringOutput `pulumi:"name"`
	// The external id corresponding to the Role ARN
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// A value denoting which cloud service this service integrates with
	Service pulumi.StringOutput `pulumi:"service"`
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes pulumi.IntPtrOutput `pulumi:"serviceRefreshRateInMinutes"`
}

// NewCloudIntegrationEc2 registers a new resource with the given unique name, arguments, and options.
func NewCloudIntegrationEc2(ctx *pulumi.Context,
	name string, args *CloudIntegrationEc2Args, opts ...pulumi.ResourceOption) (*CloudIntegrationEc2, error) {
	if args == nil || args.ExternalId == nil {
		return nil, errors.New("missing required argument 'ExternalId'")
	}
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	if args == nil || args.Service == nil {
		return nil, errors.New("missing required argument 'Service'")
	}
	if args == nil {
		args = &CloudIntegrationEc2Args{}
	}
	var resource CloudIntegrationEc2
	err := ctx.RegisterResource("wavefront:index/cloudIntegrationEc2:CloudIntegrationEc2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudIntegrationEc2 gets an existing CloudIntegrationEc2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudIntegrationEc2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudIntegrationEc2State, opts ...pulumi.ResourceOption) (*CloudIntegrationEc2, error) {
	var resource CloudIntegrationEc2
	err := ctx.ReadResource("wavefront:index/cloudIntegrationEc2:CloudIntegrationEc2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudIntegrationEc2 resources.
type cloudIntegrationEc2State struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags map[string]string `pulumi:"additionalTags"`
	// The Role ARN that the customer has created in AWS IAM to allow access to Wavefront
	ExternalId *string `pulumi:"externalId"`
	// Forces this resource to save, even if errors are present
	ForceSave    *bool    `pulumi:"forceSave"`
	HostnameTags []string `pulumi:"hostnameTags"`
	// The human-readable name of this integration
	Name *string `pulumi:"name"`
	// The external id corresponding to the Role ARN
	RoleArn *string `pulumi:"roleArn"`
	// A value denoting which cloud service this service integrates with
	Service *string `pulumi:"service"`
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes *int `pulumi:"serviceRefreshRateInMinutes"`
}

type CloudIntegrationEc2State struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags pulumi.StringMapInput
	// The Role ARN that the customer has created in AWS IAM to allow access to Wavefront
	ExternalId pulumi.StringPtrInput
	// Forces this resource to save, even if errors are present
	ForceSave    pulumi.BoolPtrInput
	HostnameTags pulumi.StringArrayInput
	// The human-readable name of this integration
	Name pulumi.StringPtrInput
	// The external id corresponding to the Role ARN
	RoleArn pulumi.StringPtrInput
	// A value denoting which cloud service this service integrates with
	Service pulumi.StringPtrInput
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
}

func (CloudIntegrationEc2State) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationEc2State)(nil)).Elem()
}

type cloudIntegrationEc2Args struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags map[string]string `pulumi:"additionalTags"`
	// The Role ARN that the customer has created in AWS IAM to allow access to Wavefront
	ExternalId string `pulumi:"externalId"`
	// Forces this resource to save, even if errors are present
	ForceSave    *bool    `pulumi:"forceSave"`
	HostnameTags []string `pulumi:"hostnameTags"`
	// The human-readable name of this integration
	Name *string `pulumi:"name"`
	// The external id corresponding to the Role ARN
	RoleArn string `pulumi:"roleArn"`
	// A value denoting which cloud service this service integrates with
	Service string `pulumi:"service"`
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes *int `pulumi:"serviceRefreshRateInMinutes"`
}

// The set of arguments for constructing a CloudIntegrationEc2 resource.
type CloudIntegrationEc2Args struct {
	// A list of point tag key-values to add to every point ingested using this integration
	AdditionalTags pulumi.StringMapInput
	// The Role ARN that the customer has created in AWS IAM to allow access to Wavefront
	ExternalId pulumi.StringInput
	// Forces this resource to save, even if errors are present
	ForceSave    pulumi.BoolPtrInput
	HostnameTags pulumi.StringArrayInput
	// The human-readable name of this integration
	Name pulumi.StringPtrInput
	// The external id corresponding to the Role ARN
	RoleArn pulumi.StringInput
	// A value denoting which cloud service this service integrates with
	Service pulumi.StringInput
	// How often, in minutes, to refresh the service
	ServiceRefreshRateInMinutes pulumi.IntPtrInput
}

func (CloudIntegrationEc2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIntegrationEc2Args)(nil)).Elem()
}

type CloudIntegrationEc2Input interface {
	pulumi.Input

	ToCloudIntegrationEc2Output() CloudIntegrationEc2Output
	ToCloudIntegrationEc2OutputWithContext(ctx context.Context) CloudIntegrationEc2Output
}

func (CloudIntegrationEc2) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudIntegrationEc2)(nil)).Elem()
}

func (i CloudIntegrationEc2) ToCloudIntegrationEc2Output() CloudIntegrationEc2Output {
	return i.ToCloudIntegrationEc2OutputWithContext(context.Background())
}

func (i CloudIntegrationEc2) ToCloudIntegrationEc2OutputWithContext(ctx context.Context) CloudIntegrationEc2Output {
	return pulumi.ToOutputWithContext(ctx, i).(CloudIntegrationEc2Output)
}

type CloudIntegrationEc2Output struct {
	*pulumi.OutputState
}

func (CloudIntegrationEc2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudIntegrationEc2Output)(nil)).Elem()
}

func (o CloudIntegrationEc2Output) ToCloudIntegrationEc2Output() CloudIntegrationEc2Output {
	return o
}

func (o CloudIntegrationEc2Output) ToCloudIntegrationEc2OutputWithContext(ctx context.Context) CloudIntegrationEc2Output {
	return o
}

func init() {
	pulumi.RegisterOutputType(CloudIntegrationEc2Output{})
}
