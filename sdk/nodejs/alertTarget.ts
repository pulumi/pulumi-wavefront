// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AlertTarget extends pulumi.CustomResource {
    /**
     * Get an existing AlertTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlertTargetState, opts?: pulumi.CustomResourceOptions): AlertTarget {
        return new AlertTarget(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'wavefront:index/alertTarget:AlertTarget';

    /**
     * Returns true if the given object is an instance of AlertTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlertTarget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlertTarget.__pulumiType;
    }

    public readonly contentType!: pulumi.Output<string | undefined>;
    public readonly customHeaders!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly description!: pulumi.Output<string>;
    public readonly emailSubject!: pulumi.Output<string | undefined>;
    public readonly isHtmlContent!: pulumi.Output<boolean | undefined>;
    public readonly method!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly recipient!: pulumi.Output<string>;
    public readonly routes!: pulumi.Output<outputs.AlertTargetRoute[] | undefined>;
    public /*out*/ readonly targetId!: pulumi.Output<string>;
    public readonly template!: pulumi.Output<string>;
    public readonly triggers!: pulumi.Output<string[]>;

    /**
     * Create a AlertTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlertTargetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlertTargetArgs | AlertTargetState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as AlertTargetState | undefined;
            inputs["contentType"] = state ? state.contentType : undefined;
            inputs["customHeaders"] = state ? state.customHeaders : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["emailSubject"] = state ? state.emailSubject : undefined;
            inputs["isHtmlContent"] = state ? state.isHtmlContent : undefined;
            inputs["method"] = state ? state.method : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["recipient"] = state ? state.recipient : undefined;
            inputs["routes"] = state ? state.routes : undefined;
            inputs["targetId"] = state ? state.targetId : undefined;
            inputs["template"] = state ? state.template : undefined;
            inputs["triggers"] = state ? state.triggers : undefined;
        } else {
            const args = argsOrState as AlertTargetArgs | undefined;
            if (!args || args.description === undefined) {
                throw new Error("Missing required property 'description'");
            }
            if (!args || args.recipient === undefined) {
                throw new Error("Missing required property 'recipient'");
            }
            if (!args || args.template === undefined) {
                throw new Error("Missing required property 'template'");
            }
            if (!args || args.triggers === undefined) {
                throw new Error("Missing required property 'triggers'");
            }
            inputs["contentType"] = args ? args.contentType : undefined;
            inputs["customHeaders"] = args ? args.customHeaders : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["emailSubject"] = args ? args.emailSubject : undefined;
            inputs["isHtmlContent"] = args ? args.isHtmlContent : undefined;
            inputs["method"] = args ? args.method : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["recipient"] = args ? args.recipient : undefined;
            inputs["routes"] = args ? args.routes : undefined;
            inputs["template"] = args ? args.template : undefined;
            inputs["triggers"] = args ? args.triggers : undefined;
            inputs["targetId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(AlertTarget.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlertTarget resources.
 */
export interface AlertTargetState {
    readonly contentType?: pulumi.Input<string>;
    readonly customHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly description?: pulumi.Input<string>;
    readonly emailSubject?: pulumi.Input<string>;
    readonly isHtmlContent?: pulumi.Input<boolean>;
    readonly method?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly recipient?: pulumi.Input<string>;
    readonly routes?: pulumi.Input<pulumi.Input<inputs.AlertTargetRoute>[]>;
    readonly targetId?: pulumi.Input<string>;
    readonly template?: pulumi.Input<string>;
    readonly triggers?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a AlertTarget resource.
 */
export interface AlertTargetArgs {
    readonly contentType?: pulumi.Input<string>;
    readonly customHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly description: pulumi.Input<string>;
    readonly emailSubject?: pulumi.Input<string>;
    readonly isHtmlContent?: pulumi.Input<boolean>;
    readonly method?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly recipient: pulumi.Input<string>;
    readonly routes?: pulumi.Input<pulumi.Input<inputs.AlertTargetRoute>[]>;
    readonly template: pulumi.Input<string>;
    readonly triggers: pulumi.Input<pulumi.Input<string>[]>;
}
