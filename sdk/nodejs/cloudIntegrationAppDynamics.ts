// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Wavefront Cloud Integration for App Dynamics. This allows app dynamics cloud integrations to be created,
 * updated, and deleted.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as wavefront from "@pulumi/wavefront";
 *
 * const appDynamics = new wavefront.CloudIntegrationAppDynamics("app_dynamics", {
 *     controllerName: "exampleController",
 *     encryptedPassword: "encryptedPassword",
 *     userName: "example",
 * });
 * ```
 *
 * ## Import
 *
 * App Dynamic Cloud Integrations can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import wavefront:index/cloudIntegrationAppDynamics:CloudIntegrationAppDynamics app_dynamics a411c16b-3cf7-4f03-bf11-8ca05aab898d
 * ```
 */
export class CloudIntegrationAppDynamics extends pulumi.CustomResource {
    /**
     * Get an existing CloudIntegrationAppDynamics resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudIntegrationAppDynamicsState, opts?: pulumi.CustomResourceOptions): CloudIntegrationAppDynamics {
        return new CloudIntegrationAppDynamics(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'wavefront:index/cloudIntegrationAppDynamics:CloudIntegrationAppDynamics';

    /**
     * Returns true if the given object is an instance of CloudIntegrationAppDynamics.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudIntegrationAppDynamics {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudIntegrationAppDynamics.__pulumiType;
    }

    /**
     * A list of point tag key-values to add to every point ingested using this integration
     */
    public readonly additionalTags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of regular expressions that a application name must match (case-insensitively) 
     * in order to be ingested
     */
    public readonly appFilterRegexes!: pulumi.Output<string[] | undefined>;
    /**
     * Name of the SaaS controller
     */
    public readonly controllerName!: pulumi.Output<string>;
    /**
     * Boolean flag to control Application Infrastructure metric injection
     */
    public readonly enableAppInfraMetrics!: pulumi.Output<boolean | undefined>;
    /**
     * Boolean flag to control Backend metric injection
     */
    public readonly enableBackendMetrics!: pulumi.Output<boolean | undefined>;
    /**
     * Boolean flag to control Business Transaction metric injection
     */
    public readonly enableBusinessTrxMetrics!: pulumi.Output<boolean | undefined>;
    /**
     * Boolean flag to control Error metric injection
     */
    public readonly enableErrorMetrics!: pulumi.Output<boolean | undefined>;
    /**
     * Boolean flag to control Individual Node metric injection
     */
    public readonly enableIndividualNodeMetrics!: pulumi.Output<boolean | undefined>;
    /**
     * Boolean flag to control Overall Performance metric injection
     */
    public readonly enableOverallPerfMetrics!: pulumi.Output<boolean | undefined>;
    /**
     * Set this to `false` to get separate results for all values within the time range, 
     * by default it is `true`
     */
    public readonly enableRollup!: pulumi.Output<boolean | undefined>;
    /**
     * Boolean flag to control Service End point metric injection
     */
    public readonly enableServiceEndpointMetrics!: pulumi.Output<boolean | undefined>;
    /**
     * Password for AppDynamics user
     */
    public readonly encryptedPassword!: pulumi.Output<string>;
    /**
     * Forces this resource to save, even if errors are present
     */
    public readonly forceSave!: pulumi.Output<boolean | undefined>;
    /**
     * The human-readable name of this integration
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A value denoting which cloud service this service integrates with
     */
    public readonly service!: pulumi.Output<string>;
    /**
     * How often, in minutes, to refresh the service
     */
    public readonly serviceRefreshRateInMinutes!: pulumi.Output<number | undefined>;
    /**
     * Username is a combination of userName and the account name
     */
    public readonly userName!: pulumi.Output<string>;

    /**
     * Create a CloudIntegrationAppDynamics resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudIntegrationAppDynamicsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudIntegrationAppDynamicsArgs | CloudIntegrationAppDynamicsState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as CloudIntegrationAppDynamicsState | undefined;
            inputs["additionalTags"] = state ? state.additionalTags : undefined;
            inputs["appFilterRegexes"] = state ? state.appFilterRegexes : undefined;
            inputs["controllerName"] = state ? state.controllerName : undefined;
            inputs["enableAppInfraMetrics"] = state ? state.enableAppInfraMetrics : undefined;
            inputs["enableBackendMetrics"] = state ? state.enableBackendMetrics : undefined;
            inputs["enableBusinessTrxMetrics"] = state ? state.enableBusinessTrxMetrics : undefined;
            inputs["enableErrorMetrics"] = state ? state.enableErrorMetrics : undefined;
            inputs["enableIndividualNodeMetrics"] = state ? state.enableIndividualNodeMetrics : undefined;
            inputs["enableOverallPerfMetrics"] = state ? state.enableOverallPerfMetrics : undefined;
            inputs["enableRollup"] = state ? state.enableRollup : undefined;
            inputs["enableServiceEndpointMetrics"] = state ? state.enableServiceEndpointMetrics : undefined;
            inputs["encryptedPassword"] = state ? state.encryptedPassword : undefined;
            inputs["forceSave"] = state ? state.forceSave : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["service"] = state ? state.service : undefined;
            inputs["serviceRefreshRateInMinutes"] = state ? state.serviceRefreshRateInMinutes : undefined;
            inputs["userName"] = state ? state.userName : undefined;
        } else {
            const args = argsOrState as CloudIntegrationAppDynamicsArgs | undefined;
            if (!args || args.controllerName === undefined) {
                throw new Error("Missing required property 'controllerName'");
            }
            if (!args || args.encryptedPassword === undefined) {
                throw new Error("Missing required property 'encryptedPassword'");
            }
            if (!args || args.service === undefined) {
                throw new Error("Missing required property 'service'");
            }
            if (!args || args.userName === undefined) {
                throw new Error("Missing required property 'userName'");
            }
            inputs["additionalTags"] = args ? args.additionalTags : undefined;
            inputs["appFilterRegexes"] = args ? args.appFilterRegexes : undefined;
            inputs["controllerName"] = args ? args.controllerName : undefined;
            inputs["enableAppInfraMetrics"] = args ? args.enableAppInfraMetrics : undefined;
            inputs["enableBackendMetrics"] = args ? args.enableBackendMetrics : undefined;
            inputs["enableBusinessTrxMetrics"] = args ? args.enableBusinessTrxMetrics : undefined;
            inputs["enableErrorMetrics"] = args ? args.enableErrorMetrics : undefined;
            inputs["enableIndividualNodeMetrics"] = args ? args.enableIndividualNodeMetrics : undefined;
            inputs["enableOverallPerfMetrics"] = args ? args.enableOverallPerfMetrics : undefined;
            inputs["enableRollup"] = args ? args.enableRollup : undefined;
            inputs["enableServiceEndpointMetrics"] = args ? args.enableServiceEndpointMetrics : undefined;
            inputs["encryptedPassword"] = args ? args.encryptedPassword : undefined;
            inputs["forceSave"] = args ? args.forceSave : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["service"] = args ? args.service : undefined;
            inputs["serviceRefreshRateInMinutes"] = args ? args.serviceRefreshRateInMinutes : undefined;
            inputs["userName"] = args ? args.userName : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(CloudIntegrationAppDynamics.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudIntegrationAppDynamics resources.
 */
export interface CloudIntegrationAppDynamicsState {
    /**
     * A list of point tag key-values to add to every point ingested using this integration
     */
    readonly additionalTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of regular expressions that a application name must match (case-insensitively) 
     * in order to be ingested
     */
    readonly appFilterRegexes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the SaaS controller
     */
    readonly controllerName?: pulumi.Input<string>;
    /**
     * Boolean flag to control Application Infrastructure metric injection
     */
    readonly enableAppInfraMetrics?: pulumi.Input<boolean>;
    /**
     * Boolean flag to control Backend metric injection
     */
    readonly enableBackendMetrics?: pulumi.Input<boolean>;
    /**
     * Boolean flag to control Business Transaction metric injection
     */
    readonly enableBusinessTrxMetrics?: pulumi.Input<boolean>;
    /**
     * Boolean flag to control Error metric injection
     */
    readonly enableErrorMetrics?: pulumi.Input<boolean>;
    /**
     * Boolean flag to control Individual Node metric injection
     */
    readonly enableIndividualNodeMetrics?: pulumi.Input<boolean>;
    /**
     * Boolean flag to control Overall Performance metric injection
     */
    readonly enableOverallPerfMetrics?: pulumi.Input<boolean>;
    /**
     * Set this to `false` to get separate results for all values within the time range, 
     * by default it is `true`
     */
    readonly enableRollup?: pulumi.Input<boolean>;
    /**
     * Boolean flag to control Service End point metric injection
     */
    readonly enableServiceEndpointMetrics?: pulumi.Input<boolean>;
    /**
     * Password for AppDynamics user
     */
    readonly encryptedPassword?: pulumi.Input<string>;
    /**
     * Forces this resource to save, even if errors are present
     */
    readonly forceSave?: pulumi.Input<boolean>;
    /**
     * The human-readable name of this integration
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A value denoting which cloud service this service integrates with
     */
    readonly service?: pulumi.Input<string>;
    /**
     * How often, in minutes, to refresh the service
     */
    readonly serviceRefreshRateInMinutes?: pulumi.Input<number>;
    /**
     * Username is a combination of userName and the account name
     */
    readonly userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudIntegrationAppDynamics resource.
 */
export interface CloudIntegrationAppDynamicsArgs {
    /**
     * A list of point tag key-values to add to every point ingested using this integration
     */
    readonly additionalTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of regular expressions that a application name must match (case-insensitively) 
     * in order to be ingested
     */
    readonly appFilterRegexes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the SaaS controller
     */
    readonly controllerName: pulumi.Input<string>;
    /**
     * Boolean flag to control Application Infrastructure metric injection
     */
    readonly enableAppInfraMetrics?: pulumi.Input<boolean>;
    /**
     * Boolean flag to control Backend metric injection
     */
    readonly enableBackendMetrics?: pulumi.Input<boolean>;
    /**
     * Boolean flag to control Business Transaction metric injection
     */
    readonly enableBusinessTrxMetrics?: pulumi.Input<boolean>;
    /**
     * Boolean flag to control Error metric injection
     */
    readonly enableErrorMetrics?: pulumi.Input<boolean>;
    /**
     * Boolean flag to control Individual Node metric injection
     */
    readonly enableIndividualNodeMetrics?: pulumi.Input<boolean>;
    /**
     * Boolean flag to control Overall Performance metric injection
     */
    readonly enableOverallPerfMetrics?: pulumi.Input<boolean>;
    /**
     * Set this to `false` to get separate results for all values within the time range, 
     * by default it is `true`
     */
    readonly enableRollup?: pulumi.Input<boolean>;
    /**
     * Boolean flag to control Service End point metric injection
     */
    readonly enableServiceEndpointMetrics?: pulumi.Input<boolean>;
    /**
     * Password for AppDynamics user
     */
    readonly encryptedPassword: pulumi.Input<string>;
    /**
     * Forces this resource to save, even if errors are present
     */
    readonly forceSave?: pulumi.Input<boolean>;
    /**
     * The human-readable name of this integration
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A value denoting which cloud service this service integrates with
     */
    readonly service: pulumi.Input<string>;
    /**
     * How often, in minutes, to refresh the service
     */
    readonly serviceRefreshRateInMinutes?: pulumi.Input<number>;
    /**
     * Username is a combination of userName and the account name
     */
    readonly userName: pulumi.Input<string>;
}
