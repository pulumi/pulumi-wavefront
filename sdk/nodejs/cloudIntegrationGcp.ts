// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Wavefront Cloud Integration for Google Cloud Platform. This allows Google Cloud Platform cloud
 * integrations to be created, updated, and deleted.
 *
 * ## Example usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as wavefront from "@pulumi/wavefront";
 *
 * const gcp = new wavefront.CloudIntegrationGcp("gcp", {
 *     name: "Test Integration",
 *     projectId: "example-gcp-project",
 *     jsonKey: "{...your gcp key ...}\n",
 * });
 * ```
 *
 * ## Import
 *
 * GCP Cloud Integrations can be imported by using the `id`, e.g.:
 *
 * ```sh
 * $ pulumi import wavefront:index/cloudIntegrationGcp:CloudIntegrationGcp gcp a411c16b-3cf7-4f03-bf11-8ca05aab898d
 * ```
 */
export class CloudIntegrationGcp extends pulumi.CustomResource {
    /**
     * Get an existing CloudIntegrationGcp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudIntegrationGcpState, opts?: pulumi.CustomResourceOptions): CloudIntegrationGcp {
        return new CloudIntegrationGcp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'wavefront:index/cloudIntegrationGcp:CloudIntegrationGcp';

    /**
     * Returns true if the given object is an instance of CloudIntegrationGcp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudIntegrationGcp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudIntegrationGcp.__pulumiType;
    }

    /**
     * A list of point tag key-values to add to every point ingested using this integration.
     */
    public readonly additionalTags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A list of Google Cloud Platform (GCP) services. Valid values are `APPENGINE`,
     * `BIGQUERY`, `BIGTABLE`, `CLOUDFUNCTIONS`, `CLOUDIOT`, `CLOUDSQL`, `CLOUDTASKS`, `COMPUTE`, `CONTAINER`,
     * `DATAFLOW`, `DATAPROC`, `DATASTORE`, `FIREBASEDATABASE`, `FIREBASEHOSTING`, `FIRESTORE`, `INTERCONNECT`,
     * `LOADBALANCING`, `LOGGING`, `ML`, `MONITORING`, `PUBSUB`, `REDIS`, `ROUTER`, `SERVICERUNTIME`, `SPANNER`, `STORAGE`,
     * `TPU`, and `VPN`.
     */
    public readonly categories!: pulumi.Output<string[] | undefined>;
    /**
     * Forces this resource to save, even if errors are present.
     */
    public readonly forceSave!: pulumi.Output<boolean | undefined>;
    /**
     * Private key for a Google Cloud Platform (GCP) service account within your project.
     * The account must have at least Viewer permissions. This key must be in the JSON format generated by GCP.
     */
    public readonly jsonKey!: pulumi.Output<string>;
    /**
     * A regular expression that a metric name must match (case-insensitively) in order to be ingested.
     */
    public readonly metricFilterRegex!: pulumi.Output<string | undefined>;
    /**
     * The human-readable name of this integration.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Google Cloud Platform (GCP) Project ID.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * A value denoting which cloud service this service integrates with.
     */
    public readonly service!: pulumi.Output<string>;
    /**
     * How often, in minutes, to refresh the service.
     */
    public readonly serviceRefreshRateInMinutes!: pulumi.Output<number | undefined>;

    /**
     * Create a CloudIntegrationGcp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudIntegrationGcpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudIntegrationGcpArgs | CloudIntegrationGcpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudIntegrationGcpState | undefined;
            resourceInputs["additionalTags"] = state ? state.additionalTags : undefined;
            resourceInputs["categories"] = state ? state.categories : undefined;
            resourceInputs["forceSave"] = state ? state.forceSave : undefined;
            resourceInputs["jsonKey"] = state ? state.jsonKey : undefined;
            resourceInputs["metricFilterRegex"] = state ? state.metricFilterRegex : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["serviceRefreshRateInMinutes"] = state ? state.serviceRefreshRateInMinutes : undefined;
        } else {
            const args = argsOrState as CloudIntegrationGcpArgs | undefined;
            if ((!args || args.jsonKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jsonKey'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.service === undefined) && !opts.urn) {
                throw new Error("Missing required property 'service'");
            }
            resourceInputs["additionalTags"] = args ? args.additionalTags : undefined;
            resourceInputs["categories"] = args ? args.categories : undefined;
            resourceInputs["forceSave"] = args ? args.forceSave : undefined;
            resourceInputs["jsonKey"] = args?.jsonKey ? pulumi.secret(args.jsonKey) : undefined;
            resourceInputs["metricFilterRegex"] = args ? args.metricFilterRegex : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["serviceRefreshRateInMinutes"] = args ? args.serviceRefreshRateInMinutes : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["jsonKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CloudIntegrationGcp.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudIntegrationGcp resources.
 */
export interface CloudIntegrationGcpState {
    /**
     * A list of point tag key-values to add to every point ingested using this integration.
     */
    additionalTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of Google Cloud Platform (GCP) services. Valid values are `APPENGINE`,
     * `BIGQUERY`, `BIGTABLE`, `CLOUDFUNCTIONS`, `CLOUDIOT`, `CLOUDSQL`, `CLOUDTASKS`, `COMPUTE`, `CONTAINER`,
     * `DATAFLOW`, `DATAPROC`, `DATASTORE`, `FIREBASEDATABASE`, `FIREBASEHOSTING`, `FIRESTORE`, `INTERCONNECT`,
     * `LOADBALANCING`, `LOGGING`, `ML`, `MONITORING`, `PUBSUB`, `REDIS`, `ROUTER`, `SERVICERUNTIME`, `SPANNER`, `STORAGE`,
     * `TPU`, and `VPN`.
     */
    categories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Forces this resource to save, even if errors are present.
     */
    forceSave?: pulumi.Input<boolean>;
    /**
     * Private key for a Google Cloud Platform (GCP) service account within your project.
     * The account must have at least Viewer permissions. This key must be in the JSON format generated by GCP.
     */
    jsonKey?: pulumi.Input<string>;
    /**
     * A regular expression that a metric name must match (case-insensitively) in order to be ingested.
     */
    metricFilterRegex?: pulumi.Input<string>;
    /**
     * The human-readable name of this integration.
     */
    name?: pulumi.Input<string>;
    /**
     * The Google Cloud Platform (GCP) Project ID.
     */
    projectId?: pulumi.Input<string>;
    /**
     * A value denoting which cloud service this service integrates with.
     */
    service?: pulumi.Input<string>;
    /**
     * How often, in minutes, to refresh the service.
     */
    serviceRefreshRateInMinutes?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CloudIntegrationGcp resource.
 */
export interface CloudIntegrationGcpArgs {
    /**
     * A list of point tag key-values to add to every point ingested using this integration.
     */
    additionalTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of Google Cloud Platform (GCP) services. Valid values are `APPENGINE`,
     * `BIGQUERY`, `BIGTABLE`, `CLOUDFUNCTIONS`, `CLOUDIOT`, `CLOUDSQL`, `CLOUDTASKS`, `COMPUTE`, `CONTAINER`,
     * `DATAFLOW`, `DATAPROC`, `DATASTORE`, `FIREBASEDATABASE`, `FIREBASEHOSTING`, `FIRESTORE`, `INTERCONNECT`,
     * `LOADBALANCING`, `LOGGING`, `ML`, `MONITORING`, `PUBSUB`, `REDIS`, `ROUTER`, `SERVICERUNTIME`, `SPANNER`, `STORAGE`,
     * `TPU`, and `VPN`.
     */
    categories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Forces this resource to save, even if errors are present.
     */
    forceSave?: pulumi.Input<boolean>;
    /**
     * Private key for a Google Cloud Platform (GCP) service account within your project.
     * The account must have at least Viewer permissions. This key must be in the JSON format generated by GCP.
     */
    jsonKey: pulumi.Input<string>;
    /**
     * A regular expression that a metric name must match (case-insensitively) in order to be ingested.
     */
    metricFilterRegex?: pulumi.Input<string>;
    /**
     * The human-readable name of this integration.
     */
    name?: pulumi.Input<string>;
    /**
     * The Google Cloud Platform (GCP) Project ID.
     */
    projectId: pulumi.Input<string>;
    /**
     * A value denoting which cloud service this service integrates with.
     */
    service: pulumi.Input<string>;
    /**
     * How often, in minutes, to refresh the service.
     */
    serviceRefreshRateInMinutes?: pulumi.Input<number>;
}
