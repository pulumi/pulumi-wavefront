// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Wavefront Cloud Integration for Azure Activity Logs. This allows azure activity log cloud integrations to be created,
 * updated, and deleted.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as wavefront from "@pulumi/wavefront";
 *
 * const azureActivityLog = new wavefront.CloudIntegrationAzureActivityLog("azure_activity_log", {
 *     categoryFilters: ["ADMINISTRATIVE"],
 *     clientId: "client-id2",
 *     clientSecret: "client-secret2",
 *     tenant: "my-tenant2",
 * });
 * ```
 *
 * ## Import
 *
 * Azure Activity Log Cloud Integrations can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import wavefront:index/cloudIntegrationAzureActivityLog:CloudIntegrationAzureActivityLog azure_al a411c16b-3cf7-4f03-bf11-8ca05aab898d
 * ```
 */
export class CloudIntegrationAzureActivityLog extends pulumi.CustomResource {
    /**
     * Get an existing CloudIntegrationAzureActivityLog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudIntegrationAzureActivityLogState, opts?: pulumi.CustomResourceOptions): CloudIntegrationAzureActivityLog {
        return new CloudIntegrationAzureActivityLog(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'wavefront:index/cloudIntegrationAzureActivityLog:CloudIntegrationAzureActivityLog';

    /**
     * Returns true if the given object is an instance of CloudIntegrationAzureActivityLog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudIntegrationAzureActivityLog {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudIntegrationAzureActivityLog.__pulumiType;
    }

    /**
     * A list of point tag key-values to add to every point ingested using this integration
     */
    public readonly additionalTags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A list of Azure services (such as Microsoft.Compute/virtualMachines) from which to pull metrics
     */
    public readonly categoryFilters!: pulumi.Output<string[] | undefined>;
    /**
     * Client id for an azure service account within your project
     */
    public readonly clientId!: pulumi.Output<string>;
    /**
     * Client secret for an Azure service account within your project
     */
    public readonly clientSecret!: pulumi.Output<string>;
    /**
     * Forces this resource to save, even if errors are present
     */
    public readonly forceSave!: pulumi.Output<boolean | undefined>;
    /**
     * The human-readable name of this integration
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A value denoting which cloud service this service integrates with
     */
    public readonly service!: pulumi.Output<string>;
    /**
     * How often, in minutes, to refresh the service
     */
    public readonly serviceRefreshRateInMinutes!: pulumi.Output<number | undefined>;
    /**
     * Tenant Id for an Azure service account within your project
     */
    public readonly tenant!: pulumi.Output<string>;

    /**
     * Create a CloudIntegrationAzureActivityLog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudIntegrationAzureActivityLogArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudIntegrationAzureActivityLogArgs | CloudIntegrationAzureActivityLogState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as CloudIntegrationAzureActivityLogState | undefined;
            inputs["additionalTags"] = state ? state.additionalTags : undefined;
            inputs["categoryFilters"] = state ? state.categoryFilters : undefined;
            inputs["clientId"] = state ? state.clientId : undefined;
            inputs["clientSecret"] = state ? state.clientSecret : undefined;
            inputs["forceSave"] = state ? state.forceSave : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["service"] = state ? state.service : undefined;
            inputs["serviceRefreshRateInMinutes"] = state ? state.serviceRefreshRateInMinutes : undefined;
            inputs["tenant"] = state ? state.tenant : undefined;
        } else {
            const args = argsOrState as CloudIntegrationAzureActivityLogArgs | undefined;
            if (!args || args.clientId === undefined) {
                throw new Error("Missing required property 'clientId'");
            }
            if (!args || args.clientSecret === undefined) {
                throw new Error("Missing required property 'clientSecret'");
            }
            if (!args || args.service === undefined) {
                throw new Error("Missing required property 'service'");
            }
            if (!args || args.tenant === undefined) {
                throw new Error("Missing required property 'tenant'");
            }
            inputs["additionalTags"] = args ? args.additionalTags : undefined;
            inputs["categoryFilters"] = args ? args.categoryFilters : undefined;
            inputs["clientId"] = args ? args.clientId : undefined;
            inputs["clientSecret"] = args ? args.clientSecret : undefined;
            inputs["forceSave"] = args ? args.forceSave : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["service"] = args ? args.service : undefined;
            inputs["serviceRefreshRateInMinutes"] = args ? args.serviceRefreshRateInMinutes : undefined;
            inputs["tenant"] = args ? args.tenant : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(CloudIntegrationAzureActivityLog.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudIntegrationAzureActivityLog resources.
 */
export interface CloudIntegrationAzureActivityLogState {
    /**
     * A list of point tag key-values to add to every point ingested using this integration
     */
    readonly additionalTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of Azure services (such as Microsoft.Compute/virtualMachines) from which to pull metrics
     */
    readonly categoryFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Client id for an azure service account within your project
     */
    readonly clientId?: pulumi.Input<string>;
    /**
     * Client secret for an Azure service account within your project
     */
    readonly clientSecret?: pulumi.Input<string>;
    /**
     * Forces this resource to save, even if errors are present
     */
    readonly forceSave?: pulumi.Input<boolean>;
    /**
     * The human-readable name of this integration
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A value denoting which cloud service this service integrates with
     */
    readonly service?: pulumi.Input<string>;
    /**
     * How often, in minutes, to refresh the service
     */
    readonly serviceRefreshRateInMinutes?: pulumi.Input<number>;
    /**
     * Tenant Id for an Azure service account within your project
     */
    readonly tenant?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudIntegrationAzureActivityLog resource.
 */
export interface CloudIntegrationAzureActivityLogArgs {
    /**
     * A list of point tag key-values to add to every point ingested using this integration
     */
    readonly additionalTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of Azure services (such as Microsoft.Compute/virtualMachines) from which to pull metrics
     */
    readonly categoryFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Client id for an azure service account within your project
     */
    readonly clientId: pulumi.Input<string>;
    /**
     * Client secret for an Azure service account within your project
     */
    readonly clientSecret: pulumi.Input<string>;
    /**
     * Forces this resource to save, even if errors are present
     */
    readonly forceSave?: pulumi.Input<boolean>;
    /**
     * The human-readable name of this integration
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A value denoting which cloud service this service integrates with
     */
    readonly service: pulumi.Input<string>;
    /**
     * How often, in minutes, to refresh the service
     */
    readonly serviceRefreshRateInMinutes?: pulumi.Input<number>;
    /**
     * Tenant Id for an Azure service account within your project
     */
    readonly tenant: pulumi.Input<string>;
}
