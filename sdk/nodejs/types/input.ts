// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AlertTargetRoute {
    filter?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    method: pulumi.Input<string>;
    target: pulumi.Input<string>;
}

export interface CloudIntegrationNewRelicMetricFilter {
    appName: pulumi.Input<string>;
    metricFilterRegex: pulumi.Input<string>;
}

export interface DashboardParameterDetail {
    defaultValue: pulumi.Input<string>;
    dynamicFieldType?: pulumi.Input<string>;
    hideFromView: pulumi.Input<boolean>;
    label: pulumi.Input<string>;
    name: pulumi.Input<string>;
    parameterType: pulumi.Input<string>;
    queryValue?: pulumi.Input<string>;
    tagKey?: pulumi.Input<string>;
    valuesToReadableStrings: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DashboardSection {
    name: pulumi.Input<string>;
    rows: pulumi.Input<pulumi.Input<inputs.DashboardSectionRow>[]>;
}

export interface DashboardSectionRow {
    charts: pulumi.Input<pulumi.Input<inputs.DashboardSectionRowChart>[]>;
}

export interface DashboardSectionRowChart {
    chartSetting: pulumi.Input<inputs.DashboardSectionRowChartChartSetting>;
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    sources: pulumi.Input<pulumi.Input<inputs.DashboardSectionRowChartSource>[]>;
    summarization: pulumi.Input<string>;
    units: pulumi.Input<string>;
}

export interface DashboardSectionRowChartChartSetting {
    autoColumnTags?: pulumi.Input<boolean>;
    columnTags?: pulumi.Input<string>;
    customTags?: pulumi.Input<pulumi.Input<string>[]>;
    expectedDataSpacing?: pulumi.Input<number>;
    fixedLegendDisplayStats?: pulumi.Input<pulumi.Input<string>[]>;
    fixedLegendEnabled?: pulumi.Input<boolean>;
    fixedLegendFilterField?: pulumi.Input<string>;
    fixedLegendFilterLimit?: pulumi.Input<number>;
    fixedLegendFilterSort?: pulumi.Input<string>;
    fixedLegendHideLabel?: pulumi.Input<boolean>;
    fixedLegendPosition?: pulumi.Input<string>;
    fixedLegendUseRawStats?: pulumi.Input<boolean>;
    groupBySource?: pulumi.Input<boolean>;
    invertDynamicLegendHoverControl?: pulumi.Input<boolean>;
    lineType?: pulumi.Input<string>;
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
    numTags?: pulumi.Input<number>;
    plainMarkdownContent?: pulumi.Input<string>;
    showHosts?: pulumi.Input<boolean>;
    showLabels?: pulumi.Input<boolean>;
    showRawValues?: pulumi.Input<boolean>;
    sortValuesDescending?: pulumi.Input<boolean>;
    sparklineDecimalPrecision?: pulumi.Input<number>;
    sparklineDisplayColor?: pulumi.Input<string>;
    sparklineDisplayFontSize?: pulumi.Input<string>;
    sparklineDisplayHorizontalPosition?: pulumi.Input<string>;
    sparklineDisplayPostfix?: pulumi.Input<string>;
    sparklineDisplayPrefix?: pulumi.Input<string>;
    sparklineDisplayValueType?: pulumi.Input<string>;
    sparklineDisplayVerticalPosition?: pulumi.Input<string>;
    sparklineFillColor?: pulumi.Input<string>;
    sparklineLineColor?: pulumi.Input<string>;
    sparklineSize?: pulumi.Input<string>;
    sparklineValueColorMapApplyTo?: pulumi.Input<string>;
    sparklineValueColorMapColors?: pulumi.Input<pulumi.Input<string>[]>;
    sparklineValueColorMapValues?: pulumi.Input<pulumi.Input<number>[]>;
    sparklineValueColorMapValuesV2s?: pulumi.Input<pulumi.Input<number>[]>;
    sparklineValueTextMapTexts?: pulumi.Input<pulumi.Input<string>[]>;
    sparklineValueTextMapThresholds?: pulumi.Input<pulumi.Input<number>[]>;
    stackType?: pulumi.Input<string>;
    tagMode?: pulumi.Input<string>;
    timeBasedColoring?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    windowSize?: pulumi.Input<number>;
    windowing?: pulumi.Input<string>;
    xmax?: pulumi.Input<number>;
    xmin?: pulumi.Input<number>;
    y0ScaleSiBy1024?: pulumi.Input<boolean>;
    y0UnitAutoscaling?: pulumi.Input<boolean>;
    y1ScaleSiBy1024?: pulumi.Input<boolean>;
    y1UnitAutoscaling?: pulumi.Input<boolean>;
    y1Units?: pulumi.Input<string>;
    y1max?: pulumi.Input<number>;
    y1min?: pulumi.Input<number>;
    ymax?: pulumi.Input<number>;
    ymin?: pulumi.Input<number>;
}

export interface DashboardSectionRowChartSource {
    disabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    query: pulumi.Input<string>;
    queryBuilderEnabled?: pulumi.Input<boolean>;
    scatterPlotSource?: pulumi.Input<string>;
    sourceDescription?: pulumi.Input<string>;
}
