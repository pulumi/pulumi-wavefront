// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get information for a given user by email from Wavefront.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as wavefront from "@pulumi/wavefront";
 *
 * const example = wavefront.getUser({
 *     email: "example.user@example.com",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getUser(args: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("wavefront:index/getUser:getUser", {
        "email": args.email,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    /**
     * The email associated with the user data to be fetched.
     */
    email: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    /**
     * The customer the user is associated with.
     */
    readonly customer: string;
    readonly email: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * When the user last logged in to Wavefront.
     */
    readonly lastSuccessfulLogin: number;
    /**
     * List of permissions granted to a user.
     */
    readonly permissions: string[];
    /**
     * List of User Group Ids the user is a member of.
     */
    readonly userGroupIds: string[];
}
/**
 * Use this data source to get information for a given user by email from Wavefront.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as wavefront from "@pulumi/wavefront";
 *
 * const example = wavefront.getUser({
 *     email: "example.user@example.com",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getUserOutput(args: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    /**
     * The email associated with the user data to be fetched.
     */
    email: pulumi.Input<string>;
}
