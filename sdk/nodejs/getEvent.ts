// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get information about a certain Wavefront event.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as wavefront from "@pulumi/wavefront";
 *
 * // Get the information about a Wavefront event by its ID.
 * const example = wavefront.getEvent({
 *     id: "sample-event-id",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getEvent(args: GetEventArgs, opts?: pulumi.InvokeOptions): Promise<GetEventResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("wavefront:index/getEvent:getEvent", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getEvent.
 */
export interface GetEventArgs {
    /**
     * The ID associated with the event data to be fetched.
     */
    id: string;
}

/**
 * A collection of values returned by getEvent.
 */
export interface GetEventResult {
    /**
     * Annotations associated with the event.
     */
    readonly annotations: {[key: string]: string};
    /**
     * The description of the event.
     */
    readonly details: string;
    readonly endtimeKey: number;
    /**
     * The ID of the event in Wavefront.
     */
    readonly id: string;
    /**
     * A Boolean flag. If set to `true`, creates a point-in-time event (i.e. with no duration).
     */
    readonly isEphemeral: boolean;
    /**
     * The name of the event in Wavefront.
     */
    readonly name: string;
    /**
     * The severity category of the event.
     */
    readonly severity: string;
    /**
     * The start time of the event in epoch milliseconds.
     */
    readonly startTime: number;
    /**
     * A set of tags assigned to the event.
     */
    readonly tags: string[];
    /**
     * The type of the event.
     */
    readonly type: string;
}
/**
 * Use this data source to get information about a certain Wavefront event.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as wavefront from "@pulumi/wavefront";
 *
 * // Get the information about a Wavefront event by its ID.
 * const example = wavefront.getEvent({
 *     id: "sample-event-id",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getEventOutput(args: GetEventOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventResult> {
    return pulumi.output(args).apply((a: any) => getEvent(a, opts))
}

/**
 * A collection of arguments for invoking getEvent.
 */
export interface GetEventOutputArgs {
    /**
     * The ID associated with the event data to be fetched.
     */
    id: pulumi.Input<string>;
}
