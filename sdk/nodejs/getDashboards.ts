// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get information about all Wavefront dashboards.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as wavefront from "@pulumi/wavefront";
 *
 * const example = wavefront.getDashboards({
 *     limit: 10,
 *     offset: 0,
 * });
 * ```
 */
export function getDashboards(args?: GetDashboardsArgs, opts?: pulumi.InvokeOptions): Promise<GetDashboardsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("wavefront:index/getDashboards:getDashboards", {
        "limit": args.limit,
        "offset": args.offset,
    }, opts);
}

/**
 * A collection of arguments for invoking getDashboards.
 */
export interface GetDashboardsArgs {
    /**
     * Limit is the maximum number of results to be returned. Defaults to 100.
     */
    limit?: number;
    /**
     * Offset is the offset from the first result to be returned. Defaults to 0.
     */
    offset?: number;
}

/**
 * A collection of values returned by getDashboards.
 */
export interface GetDashboardsResult {
    /**
     * List of all Wavefront dashboards. For each dashboard you will see a list of attributes.
     */
    readonly dashboards: outputs.GetDashboardsDashboard[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly limit?: number;
    readonly offset?: number;
}
/**
 * Use this data source to get information about all Wavefront dashboards.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as wavefront from "@pulumi/wavefront";
 *
 * const example = wavefront.getDashboards({
 *     limit: 10,
 *     offset: 0,
 * });
 * ```
 */
export function getDashboardsOutput(args?: GetDashboardsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDashboardsResult> {
    return pulumi.output(args).apply((a: any) => getDashboards(a, opts))
}

/**
 * A collection of arguments for invoking getDashboards.
 */
export interface GetDashboardsOutputArgs {
    /**
     * Limit is the maximum number of results to be returned. Defaults to 100.
     */
    limit?: pulumi.Input<number>;
    /**
     * Offset is the offset from the first result to be returned. Defaults to 0.
     */
    offset?: pulumi.Input<number>;
}
