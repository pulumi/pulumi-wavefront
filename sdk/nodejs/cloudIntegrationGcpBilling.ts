// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudIntegrationGcpBilling extends pulumi.CustomResource {
    /**
     * Get an existing CloudIntegrationGcpBilling resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudIntegrationGcpBillingState, opts?: pulumi.CustomResourceOptions): CloudIntegrationGcpBilling {
        return new CloudIntegrationGcpBilling(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'wavefront:index/cloudIntegrationGcpBilling:CloudIntegrationGcpBilling';

    /**
     * Returns true if the given object is an instance of CloudIntegrationGcpBilling.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudIntegrationGcpBilling {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudIntegrationGcpBilling.__pulumiType;
    }

    public readonly additionalTags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly apiKey!: pulumi.Output<string>;
    public readonly forceSave!: pulumi.Output<boolean | undefined>;
    public readonly jsonKey!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly projectId!: pulumi.Output<string>;
    public readonly service!: pulumi.Output<string>;
    public readonly serviceRefreshRateInMinutes!: pulumi.Output<number | undefined>;

    /**
     * Create a CloudIntegrationGcpBilling resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudIntegrationGcpBillingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudIntegrationGcpBillingArgs | CloudIntegrationGcpBillingState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as CloudIntegrationGcpBillingState | undefined;
            inputs["additionalTags"] = state ? state.additionalTags : undefined;
            inputs["apiKey"] = state ? state.apiKey : undefined;
            inputs["forceSave"] = state ? state.forceSave : undefined;
            inputs["jsonKey"] = state ? state.jsonKey : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["projectId"] = state ? state.projectId : undefined;
            inputs["service"] = state ? state.service : undefined;
            inputs["serviceRefreshRateInMinutes"] = state ? state.serviceRefreshRateInMinutes : undefined;
        } else {
            const args = argsOrState as CloudIntegrationGcpBillingArgs | undefined;
            if (!args || args.apiKey === undefined) {
                throw new Error("Missing required property 'apiKey'");
            }
            if (!args || args.jsonKey === undefined) {
                throw new Error("Missing required property 'jsonKey'");
            }
            if (!args || args.projectId === undefined) {
                throw new Error("Missing required property 'projectId'");
            }
            if (!args || args.service === undefined) {
                throw new Error("Missing required property 'service'");
            }
            inputs["additionalTags"] = args ? args.additionalTags : undefined;
            inputs["apiKey"] = args ? args.apiKey : undefined;
            inputs["forceSave"] = args ? args.forceSave : undefined;
            inputs["jsonKey"] = args ? args.jsonKey : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["projectId"] = args ? args.projectId : undefined;
            inputs["service"] = args ? args.service : undefined;
            inputs["serviceRefreshRateInMinutes"] = args ? args.serviceRefreshRateInMinutes : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(CloudIntegrationGcpBilling.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudIntegrationGcpBilling resources.
 */
export interface CloudIntegrationGcpBillingState {
    readonly additionalTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly apiKey?: pulumi.Input<string>;
    readonly forceSave?: pulumi.Input<boolean>;
    readonly jsonKey?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly projectId?: pulumi.Input<string>;
    readonly service?: pulumi.Input<string>;
    readonly serviceRefreshRateInMinutes?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CloudIntegrationGcpBilling resource.
 */
export interface CloudIntegrationGcpBillingArgs {
    readonly additionalTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly apiKey: pulumi.Input<string>;
    readonly forceSave?: pulumi.Input<boolean>;
    readonly jsonKey: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly projectId: pulumi.Input<string>;
    readonly service: pulumi.Input<string>;
    readonly serviceRefreshRateInMinutes?: pulumi.Input<number>;
}
