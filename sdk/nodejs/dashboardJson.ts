// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Wavefront Dashboard JSON resource.  This allows dashboards to be created, updated, and deleted.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as wavefront from "@pulumi/wavefront";
 *
 * const testDashboardJson = new wavefront.DashboardJson("testDashboardJson", {dashboardJson: `  {
 *     "name": "Terraform Test Dashboard Json",
 *     "description": "a",
 *     "eventFilterType": "BYCHART",
 *     "eventQuery": "",
 *     "defaultTimeWindow": "",
 *     "url": "tftestimport",
 *     "displayDescription": false,
 *     "displaySectionTableOfContents": true,
 *     "displayQueryParameters": false,
 *     "sections": [
 *       {
 *         "name": "section 1",
 *         "rows": [
 *           {
 *             "charts": [
 *               {
 *                 "name": "chart 1",
 *                 "sources": [
 *                   {
 *                     "name": "source 1",
 *                     "query": "ts()",
 *                     "scatterPlotSource": "Y",
 *                     "querybuilderEnabled": false,
 *                     "sourceDescription": ""
 *                   }
 *                 ],
 *                 "units": "someunit",
 *                 "base": 0,
 *                 "noDefaultEvents": false,
 *                 "interpolatePoints": false,
 *                 "includeObsoleteMetrics": false,
 *                 "description": "This is chart 1, showing something",
 *                 "chartSettings": {
 *                   "type": "markdown-widget",
 *                   "max": 100,
 *                   "expectedDataSpacing": 120,
 *                   "windowing": "full",
 *                   "windowSize": 10,
 *                   "autoColumnTags": false,
 *                   "columnTags": "deprecated",
 *                   "tagMode": "all",
 *                   "numTags": 2,
 *                   "customTags": [
 *                     "tag1",
 *                     "tag2"
 *                   ],
 *                   "groupBySource": true,
 *                   "y1Max": 100,
 *                   "y1Units": "units",
 *                   "y0ScaleSIBy1024": true,
 *                   "y1ScaleSIBy1024": true,
 *                   "y0UnitAutoscaling": true,
 *                   "y1UnitAutoscaling": true,
 *                   "fixedLegendEnabled": true,
 *                   "fixedLegendUseRawStats": true,
 *                   "fixedLegendPosition": "RIGHT",
 *                   "fixedLegendDisplayStats": [
 *                     "stat1",
 *                     "stat2"
 *                   ],
 *                   "fixedLegendFilterSort": "TOP",
 *                   "fixedLegendFilterLimit": 1,
 *                   "fixedLegendFilterField": "CURRENT",
 *                   "plainMarkdownContent": "markdown content"
 *                 },
 *                 "chartAttributes": {
 *                   "dashboardLinks": {
 *                     "*": {
 *                       "variables": {
 *                         "xxx": "xxx"
 *                       },
 *                       "destination": "/dashboards/xxxx"
 *                     }
 *                   }
 *                 },
 *                 "summarization": "MEAN"
 *               }
 *             ],
 *             "heightFactor": 50
 *           }
 *         ]
 *       }
 *     ],
 *     "parameterDetails": {
 *       "param": {
 *         "hideFromView": false,
 *         "description": null,
 *         "allowAll": null,
 *         "tagKey": null,
 *         "queryValue": null,
 *         "dynamicFieldType": null,
 *         "reverseDynSort": null,
 *         "parameterType": "SIMPLE",
 *         "label": "test",
 *         "defaultValue": "Label",
 *         "valuesToReadableStrings": {
 *           "Label": "test"
 *         },
 *         "selectedLabel": "Label",
 *         "value": "test"
 *       }
 *     },
 *     "tags": {
 *       "customerTags": [
 *         "terraform"
 *       ]
 *     }
 *   }
 *
 * `});
 * ```
 *
 * **Note:** If there are dynamic variables in the Wavefront dashboard json, then these variables must be present in a separate file as mentioned in the section below.
 *
 * ## Import
 *
 * Dashboard JSON can be imported by using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import wavefront:index/dashboardJson:DashboardJson dashboard_json tftestimport
 * ```
 */
export class DashboardJson extends pulumi.CustomResource {
    /**
     * Get an existing DashboardJson resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DashboardJsonState, opts?: pulumi.CustomResourceOptions): DashboardJson {
        return new DashboardJson(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'wavefront:index/dashboardJson:DashboardJson';

    /**
     * Returns true if the given object is an instance of DashboardJson.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DashboardJson {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DashboardJson.__pulumiType;
    }

    /**
     * See the [Wavefront API Documentation](https://docs.wavefront.com/wavefront_api.html#api-documentation-wavefront-instance) 
     * for instructions on how to get to your API documentation for more details.
     */
    public readonly dashboardJson!: pulumi.Output<string>;

    /**
     * Create a DashboardJson resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DashboardJsonArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DashboardJsonArgs | DashboardJsonState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DashboardJsonState | undefined;
            resourceInputs["dashboardJson"] = state ? state.dashboardJson : undefined;
        } else {
            const args = argsOrState as DashboardJsonArgs | undefined;
            if ((!args || args.dashboardJson === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dashboardJson'");
            }
            resourceInputs["dashboardJson"] = args ? args.dashboardJson : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DashboardJson.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DashboardJson resources.
 */
export interface DashboardJsonState {
    /**
     * See the [Wavefront API Documentation](https://docs.wavefront.com/wavefront_api.html#api-documentation-wavefront-instance) 
     * for instructions on how to get to your API documentation for more details.
     */
    dashboardJson?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DashboardJson resource.
 */
export interface DashboardJsonArgs {
    /**
     * See the [Wavefront API Documentation](https://docs.wavefront.com/wavefront_api.html#api-documentation-wavefront-instance) 
     * for instructions on how to get to your API documentation for more details.
     */
    dashboardJson: pulumi.Input<string>;
}
