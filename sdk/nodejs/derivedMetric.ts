// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DerivedMetric extends pulumi.CustomResource {
    /**
     * Get an existing DerivedMetric resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DerivedMetricState, opts?: pulumi.CustomResourceOptions): DerivedMetric {
        return new DerivedMetric(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'wavefront:index/derivedMetric:DerivedMetric';

    /**
     * Returns true if the given object is an instance of DerivedMetric.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DerivedMetric {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DerivedMetric.__pulumiType;
    }

    public readonly additionalInformation!: pulumi.Output<string | undefined>;
    public readonly minutes!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public readonly query!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<string[] | undefined>;

    /**
     * Create a DerivedMetric resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DerivedMetricArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DerivedMetricArgs | DerivedMetricState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as DerivedMetricState | undefined;
            inputs["additionalInformation"] = state ? state.additionalInformation : undefined;
            inputs["minutes"] = state ? state.minutes : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["query"] = state ? state.query : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as DerivedMetricArgs | undefined;
            if (!args || args.minutes === undefined) {
                throw new Error("Missing required property 'minutes'");
            }
            if (!args || args.query === undefined) {
                throw new Error("Missing required property 'query'");
            }
            inputs["additionalInformation"] = args ? args.additionalInformation : undefined;
            inputs["minutes"] = args ? args.minutes : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["query"] = args ? args.query : undefined;
            inputs["tags"] = args ? args.tags : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(DerivedMetric.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DerivedMetric resources.
 */
export interface DerivedMetricState {
    readonly additionalInformation?: pulumi.Input<string>;
    readonly minutes?: pulumi.Input<number>;
    readonly name?: pulumi.Input<string>;
    readonly query?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a DerivedMetric resource.
 */
export interface DerivedMetricArgs {
    readonly additionalInformation?: pulumi.Input<string>;
    readonly minutes: pulumi.Input<number>;
    readonly name?: pulumi.Input<string>;
    readonly query: pulumi.Input<string>;
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
}
