{"name":"wavefront","version":"3.2.0-alpha.1705474469+77364be9.dirty","description":"A Pulumi package for creating and managing wavefront cloud resources.","keywords":["pulumi","wavefront"],"homepage":"https://pulumi.io","license":"Apache-2.0","attribution":"This Pulumi package is based on the [`wavefront` Terraform Provider](https://github.com/vmware/terraform-provider-wavefront).","repository":"https://github.com/pulumi/pulumi-wavefront","meta":{"moduleFormat":"(.*)(?:/[^/]*)"},"language":{"csharp":{"packageReferences":{"Pulumi":"3.*"},"namespaces":{"wavefront":"Wavefront"},"compatibility":"tfbridge20"},"go":{"importBasePath":"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront","generateResourceContainerTypes":true,"generateExtraInputTypes":true},"nodejs":{"packageDescription":"A Pulumi package for creating and managing wavefront cloud resources.","readme":"\u003e This provider is a derived work of the [Terraform Provider](https://github.com/vmware/terraform-provider-wavefront)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-wavefront` repo](https://github.com/pulumi/pulumi-wavefront/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-wavefront` repo](https://github.com/vmware/terraform-provider-wavefront/issues).","dependencies":{"@pulumi/pulumi":"^3.0.0"},"devDependencies":{"@types/mime":"^2.0.0","@types/node":"^10.0.0"},"compatibility":"tfbridge20","disableUnionOutputTypes":true},"python":{"requires":{"pulumi":"\u003e=3.0.0,\u003c4.0.0"},"readme":"\u003e This provider is a derived work of the [Terraform Provider](https://github.com/vmware/terraform-provider-wavefront)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-wavefront` repo](https://github.com/pulumi/pulumi-wavefront/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-wavefront` repo](https://github.com/vmware/terraform-provider-wavefront/issues).","compatibility":"tfbridge20","pyproject":{"enabled":true}}},"config":{"variables":{"address":{"type":"string"},"httpProxy":{"type":"string"},"token":{"type":"string"}},"defaults":["address","token"]},"types":{"wavefront:index/AlertAlertTriageDashboard:AlertAlertTriageDashboard":{"properties":{"dashboardId":{"type":"string"},"description":{"type":"string"},"parameters":{"$ref":"#/types/wavefront:index/AlertAlertTriageDashboardParameters:AlertAlertTriageDashboardParameters"}},"type":"object","required":["dashboardId","description"]},"wavefront:index/AlertAlertTriageDashboardParameters:AlertAlertTriageDashboardParameters":{"properties":{"constants":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"}}},"type":"object"},"wavefront:index/AlertTargetRoute:AlertTargetRoute":{"properties":{"filter":{"type":"object","additionalProperties":{"type":"string"},"description":"(Required) String that filters the route. Space delimited. Currently only allows a single key value pair.\n(e.g. `env prod`)\n"},"method":{"type":"string","description":"The notification method used for notification target. One of `WEBHOOK`, `EMAIL`, `PAGERDUTY`.\n"},"target":{"type":"string","description":"(Required) The endpoint for the alert route. `EMAIL`: email address. `PAGERDUTY`: PagerDuty routing\nkey. `WEBHOOK`: URL endpoint.\n"}},"type":"object","required":["method","target"]},"wavefront:index/CloudIntegrationNewRelicMetricFilter:CloudIntegrationNewRelicMetricFilter":{"properties":{"appName":{"type":"string","description":"The name of a NewRelic App.\n"},"metricFilterRegex":{"type":"string","description":"A regular expression that a metric name must match (case-insensitively) in order to be ingested.\n"}},"type":"object","required":["appName","metricFilterRegex"]},"wavefront:index/DashboardParameterDetail:DashboardParameterDetail":{"properties":{"defaultValue":{"type":"string","description":"The default value of the parameter.\n"},"dynamicFieldType":{"type":"string","description":"For `DYNAMIC` parameter types, the type of the field. Valid options are `SOURCE`,\n`SOURCE_TAG`, `METRIC_NAME`, `TAG_KEY`, and `MATCHING_SOURCE_TAG`.\n"},"hideFromView":{"type":"boolean","description":"If `true` the parameter will only be shown on the edit view of the dashboard.\n"},"label":{"type":"string","description":"The label for the parameter.\n"},"name":{"type":"string","description":"The name of the parameters.\n"},"parameterType":{"type":"string","description":"The type of the parameter. `SIMPLE`, `LIST`, or `DYNAMIC`.\n"},"queryValue":{"type":"string","description":"For `DYNAMIC` parameter types, the query to execute to return values.\n"},"tagKey":{"type":"string","description":"for `TAG_KEY` dynamic field types, the tag key to return.\n"},"valuesToReadableStrings":{"type":"object","additionalProperties":{"type":"string"},"description":"A string-\u003estring map. At least one of the keys must match the value of\n`default_value`.\n"}},"type":"object","required":["defaultValue","hideFromView","label","name","parameterType","valuesToReadableStrings"]},"wavefront:index/DashboardSection:DashboardSection":{"properties":{"name":{"type":"string","description":"Name of this section.\n"},"rows":{"type":"array","items":{"$ref":"#/types/wavefront:index/DashboardSectionRow:DashboardSectionRow"},"description":"See dashboard section rows.\n"}},"type":"object","required":["name","rows"]},"wavefront:index/DashboardSectionRow:DashboardSectionRow":{"properties":{"charts":{"type":"array","items":{"$ref":"#/types/wavefront:index/DashboardSectionRowChart:DashboardSectionRowChart"},"description":"Charts in this section. See dashboard chart.\n"}},"type":"object","required":["charts"]},"wavefront:index/DashboardSectionRowChart:DashboardSectionRowChart":{"properties":{"base":{"type":"integer","description":"The base of logarithmic scale charts. Omit or set to 0 for the default linear scale. Usually set to 10 for the traditional logarithmic scale.\n"},"chartAttribute":{"type":"string"},"chartSetting":{"$ref":"#/types/wavefront:index/DashboardSectionRowChartChartSetting:DashboardSectionRowChartChartSetting","description":"Chart settings. See chart settings.\n"},"description":{"type":"string","description":"Description of the chart.\n"},"name":{"type":"string","description":"Name of the source.\n"},"noDefaultEvents":{"type":"boolean","description":"Show events related to the sources included in queries\n"},"sources":{"type":"array","items":{"$ref":"#/types/wavefront:index/DashboardSectionRowChartSource:DashboardSectionRowChartSource"},"description":"Query expression to plot on the chart. See chart source queries.\n"},"summarization":{"type":"string","description":"Summarization strategy for the chart. MEAN is default. Valid options are, `MEAN`,\n`MEDIAN`, `MIN`, `MAX`, `SUM`, `COUNT`, `LAST`, `FIRST`.\n"},"units":{"type":"string","description":"String to label the units of the chart on the Y-Axis.\n"}},"type":"object","required":["chartSetting","name","sources","summarization","units"]},"wavefront:index/DashboardSectionRowChartChartSetting:DashboardSectionRowChartChartSetting":{"properties":{"autoColumnTags":{"type":"boolean","description":"This setting is deprecated.\n"},"columnTags":{"type":"string","description":"This setting is deprecated.\n"},"customTags":{"type":"array","items":{"type":"string"},"description":"For the tabular view, a list of point tags to display when using the `custom` tag display mode.\n"},"expectedDataSpacing":{"type":"integer","description":"Threshold (in seconds) for time delta between consecutive points in a series\nabove which a dotted line will replace a solid in in line plots. Default is 60.\n"},"fixedLegendDisplayStats":{"type":"array","items":{"type":"string"},"description":"For a chart with a fixed legend, a list of statistics to display in the legend.\n"},"fixedLegendEnabled":{"type":"boolean","description":"Whether to enable a fixed tabular legend adjacent to the chart.\n"},"fixedLegendFilterField":{"type":"string","description":"Statistic to use for determining whether a series is displayed on the fixed legend.\nValid options are `CURRENT`, `MEAN`, `MEDIAN`, `SUM`, `MIN`, `MAX`, and `COUNT`.\n"},"fixedLegendFilterLimit":{"type":"integer","description":"Number of series to include in the fixed legend.\n"},"fixedLegendFilterSort":{"type":"string","description":"Whether to display `TOP` or `BOTTOM` ranked series in a fixed legend. Valid options\nare `TOP`, and `BOTTOM`.\n"},"fixedLegendHideLabel":{"type":"boolean","description":"This setting is deprecated.\n"},"fixedLegendPosition":{"type":"string","description":"Where the fixed legend should be displayed with respect to the chart.\nValid options are `RIGHT`, `TOP`, `LEFT`, `BOTTOM`.\n"},"fixedLegendUseRawStats":{"type":"boolean","description":"If `true`, the legend uses non-summarized stats instead of summarized.\n"},"groupBySource":{"type":"boolean","description":"For the tabular view, whether to group multi metrics into a single row by a common source.\nIf `false`, each source is displayed in its own row. if `true`, multiple metrics for the same host are displayed as different\ncolumns in the same row.\n"},"invertDynamicLegendHoverControl":{"type":"boolean","description":"Whether to disable the display of the floating legend (but\nreenable it when the ctrl-key is pressed).\n"},"lineType":{"type":"string","description":"Plot interpolation type.  `linear` is default. Valid options are `linear`, `step-before`,\n`step-after`, `basis`, `cardinal`, and `monotone`.\n"},"max":{"type":"number","description":"Max value of the Y-axis. Set to null or leave blank for auto.\n"},"min":{"type":"number","description":"Min value of the Y-axis. Set to null or leave blank for auto.\n"},"numTags":{"type":"integer","description":"For the tabular view defines how many point tags to display.\n"},"plainMarkdownContent":{"type":"string","description":"The markdown content for a Markdown display, in plain text.\n"},"showHosts":{"type":"boolean","description":"For the tabular view, whether to display sources. Default is `true`.\n"},"showLabels":{"type":"boolean","description":"For the tabular view, whether to display labels. Default is `true`.\n"},"showRawValues":{"type":"boolean","description":"For the tabular view, whether to display raw values. Default is `false`.\n"},"sortValuesDescending":{"type":"boolean","description":"For the tabular view, whether to display values in descending order. Default is `false`.\n"},"sparklineDecimalPrecision":{"type":"integer","description":"For the single stat view, the decimal precision of the displayed number.\n"},"sparklineDisplayColor":{"type":"string","description":"For the single stat view, the color of the displayed text (when not dynamically determined).\nValues should be in `rgba(,,,,)` format.\n"},"sparklineDisplayFontSize":{"type":"string","description":"For the single stat view, the font size of the displayed text, in percent.\n"},"sparklineDisplayHorizontalPosition":{"type":"string","description":"For the single stat view, the horizontal position of the displayed text.\nValid options are `MIDDLE`, `LEFT`, `RIGHT`.\n"},"sparklineDisplayPostfix":{"type":"string","description":"For the single stat view, a string to append to the displayed text.\n"},"sparklineDisplayPrefix":{"type":"string","description":"For the single stat view, a string to add before the displayed text.\n"},"sparklineDisplayValueType":{"type":"string","description":"For the single stat view, where to display the name of the query or the value of the query.\nValid options are `VALUE` or `LABEL`.\n"},"sparklineDisplayVerticalPosition":{"type":"string","description":"This setting is deprecated.\n"},"sparklineFillColor":{"type":"string","description":"For the single stat view, the color of the background fill. Values should be\nin `rgba(,,,,)`.\n"},"sparklineLineColor":{"type":"string","description":"For the single stat view, the color of the line. Values should be in `rgba(,,,,)` format.\n"},"sparklineSize":{"type":"string","description":"For the single stat view, this determines whether the sparkline of the statistic is displayed in the chart.\nValid options are `BACKGROUND`, `BOTTOM`, `NONE`.\n"},"sparklineValueColorMapApplyTo":{"type":"string","description":"For the single stat view, whether to apply dynamic color settings to\nthe displayed `TEXT` or `BACKGROUND`. Valid options are `TEXT` or `BACKGROUND`.\n"},"sparklineValueColorMapColors":{"type":"array","items":{"type":"string"},"description":"For the single stat view, A list of colors that differing query values map to.\nMust contain one more element than `sparkline_value_color_map_values_v2`. Values should be in `rgba(,,,,)`.\n"},"sparklineValueColorMapValues":{"type":"array","items":{"type":"integer"},"description":"This setting is deprecated.\n"},"sparklineValueColorMapValuesV2s":{"type":"array","items":{"type":"number"},"description":"For the single stat view, a list of boundaries for mapping different\nquery values to colors. Must contain one element less than `sparkline_value_color_map_colors`.\n"},"sparklineValueTextMapTexts":{"type":"array","items":{"type":"string"},"description":"For the single stat view, a list of display text values that different query\nvalues map to. Must contain one more element than `sparkline_value_text_map_thresholds`.\n"},"sparklineValueTextMapThresholds":{"type":"array","items":{"type":"number"},"description":"For the single stat view, a list of threshold boundaries for\nmapping different query values to display text. Must contain one element less than `sparkline_value_text_map_text`.\n"},"stackType":{"type":"string","description":"Type of stacked chart (applicable only if chart type is `stacked`). `zero` (default) means\nstacked from y=0. `expand` means normalized from 0 to 1.  `wiggle` means minimize weighted changes. `silhouette` means to\ncenter the stream. Valid options are `zero`, `expand`, `wiggle`, `silhouette`, and `bars`.\n"},"tagMode":{"type":"string","description":"For the tabular view, which mode to use to determine which point tags to display.\nValid options are `all`, `top`, or `custom`.\n"},"timeBasedColoring":{"type":"boolean","description":"For x-y scatterplots, whether to color more recent points as darker than older points.\n"},"type":{"type":"string","description":"Chart Type. `line` refers to the Line Plot, `scatter` to the Point Plot, `stacked-area` to\nthe Stacked Area plot, `table` to the Tabular View, `scatterplot-xy` to Scatter Plot, `markdown-widget` to the\nMarkdown display, and `sparkline` to the Single Stat view. Valid options are`line`, `scatterplot`,\n`stacked-area`, `stacked-column`, `table`, `scatterplot-xy`, `markdown-widget`, `sparkline`, `globe`, `nodemap`,\n`top-k`, `status-list`, and `histogram`.\n"},"windowSize":{"type":"integer","description":"Width, in minutes, of the time window to use for `last` windowing.\n"},"windowing":{"type":"string","description":"For the tabular view, whether to use the full time window for the query or the last X minutes.\nValid options are `full` or `last`.\n"},"xmax":{"type":"number","description":"For x-y scatterplots, max value for the X-axis. Set to null for auto.\n"},"xmin":{"type":"number","description":"For x-y scatterplots, min value for the X-axis. Set to null for auto.\n"},"y0ScaleSiBy1024":{"type":"boolean","description":"Whether to scale numerical magnitude labels for left Y-axis by 1024 in the IEC/Binary manner (instead of by 1000 like SI).\n"},"y0UnitAutoscaling":{"type":"boolean","description":"Whether to automatically adjust magnitude labels and units for the left Y-axis to favor smaller magnitudes and larger units.\n"},"y1ScaleSiBy1024":{"type":"boolean","description":"Whether to scale numerical magnitude labels for right Y-axis by 1024 in the IEC/Binary manner (instead of by 1000 like SI).\n"},"y1UnitAutoscaling":{"type":"boolean","description":"Whether to automatically adjust magnitude labels and units for the right Y-axis to favor smaller magnitudes and larger units.\n"},"y1Units":{"type":"string","description":"For plots with multiple Y-axes, units for right side Y-axis.\n"},"y1max":{"type":"number","description":"For plots with multiple Y-axes, max value for the right side Y-axis. Set null for auto.\n"},"y1min":{"type":"number","description":"For plots with multiple Y-axes, min value for the right side Y-axis. Set null for auto.\n"},"ymax":{"type":"number","description":"For x-y scatterplots, max value for the Y-axis. Set to null for auto.\n"},"ymin":{"type":"number","description":"For x-y scatterplots, min value for the Y-axis. Set to null for auto.\n"}},"type":"object","required":["type"]},"wavefront:index/DashboardSectionRowChartSource:DashboardSectionRowChartSource":{"properties":{"disabled":{"type":"boolean","description":"Whether the source is disabled.\n"},"name":{"type":"string","description":"Name of the source.\n"},"query":{"type":"string","description":"Query expression to plot on the chart.\n"},"queryBuilderEnabled":{"type":"boolean","description":"Whether or not this source line should have the query builder enabled.\n"},"scatterPlotSource":{"type":"string","description":"For scatter plots, does this query source the X-axis or the Y-axis, `X`, or `Y`.\n"},"sourceDescription":{"type":"string","description":"A description for the purpose of this source.\n"}},"type":"object","required":["name","query"]},"wavefront:index/IngestionPolicyTag:IngestionPolicyTag":{"properties":{"key":{"type":"string"},"value":{"type":"string"}},"type":"object","required":["key","value"]},"wavefront:index/MetricsPolicyPolicyRule:MetricsPolicyPolicyRule":{"properties":{"accessType":{"type":"string","description":"Valid options are `ALLOW` and `BLOCK`.\n","willReplaceOnChanges":true},"accountIds":{"type":"array","items":{"type":"string"},"description":"List of account ids to apply Metrics Policy to. Must have at least one associated account_id, user_group_id, or role_id.\n","willReplaceOnChanges":true},"description":{"type":"string","description":"A detailed description of the Metrics Policy. The description is visible only when you edit the rule.\n","willReplaceOnChanges":true},"name":{"type":"string","description":"The unique name identifier for a Metrics Policy. The name is visible on the Metrics Security Policy page.\n","willReplaceOnChanges":true},"prefixes":{"type":"array","items":{"type":"string"},"description":"List of prefixes to match metrics on. You can specify the full metric name or use a wildcard character in metric names, sources, or point tags. The wildcard character alone (*) means all metrics.\n","willReplaceOnChanges":true},"roleIds":{"type":"array","items":{"type":"string"},"description":"List of role ids to apply Metrics Policy to. Must have at least one associated account_id, user_group_id, or role_id.\n","willReplaceOnChanges":true},"tags":{"type":"array","items":{"$ref":"#/types/wavefront:index/MetricsPolicyPolicyRuleTag:MetricsPolicyPolicyRuleTag"},"description":"List of Key/Value tags to select target metrics for policy.\n","willReplaceOnChanges":true},"tagsAnded":{"type":"boolean","description":"Bool where `true` require all tags are met by selected metrics, else `false` select metrics that match any give tag.\n","willReplaceOnChanges":true},"userGroupIds":{"type":"array","items":{"type":"string"},"description":"List of user group ids to apply Metrics Policy to. Must have at least one associated account_id, user_group_id, or role_id.\n","willReplaceOnChanges":true}},"type":"object","required":["accessType","description","name","prefixes","tagsAnded"]},"wavefront:index/MetricsPolicyPolicyRuleTag:MetricsPolicyPolicyRuleTag":{"properties":{"key":{"type":"string","description":"The tag's key.\n","willReplaceOnChanges":true},"value":{"type":"string","description":"The tag's value.\n","willReplaceOnChanges":true}},"type":"object","required":["key","value"]},"wavefront:index/getAlertAlertTriageDashboard:getAlertAlertTriageDashboard":{"properties":{"dashboardId":{"type":"string"},"description":{"type":"string"},"parameters":{"$ref":"#/types/wavefront:index/getAlertAlertTriageDashboardParameters:getAlertAlertTriageDashboardParameters"}},"type":"object","required":["dashboardId","description"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getAlertAlertTriageDashboardParameters:getAlertAlertTriageDashboardParameters":{"properties":{"constants":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"}}},"type":"object"},"wavefront:index/getAlertFailingHostLabelPair:getAlertFailingHostLabelPair":{"properties":{"firing":{"type":"integer"},"host":{"type":"string"}},"type":"object","required":["firing","host"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getAlertInMaintenanceHostLabelPair:getAlertInMaintenanceHostLabelPair":{"properties":{"firing":{"type":"integer"},"host":{"type":"string"}},"type":"object","required":["firing","host"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getAlertsAlert:getAlertsAlert":{"properties":{"additionalInformation":{"type":"string","description":"User-supplied additional explanatory information about this alert.\n"},"alertTriageDashboards":{"type":"array","items":{"$ref":"#/types/wavefront:index/getAlertsAlertAlertTriageDashboard:getAlertsAlertAlertTriageDashboard"},"description":"A set of user-supplied dashboard and parameters to create dashboard links for triaging alerts.\n"},"alertType":{"type":"string","description":"The type of alert in Wavefront.\n"},"canModifies":{"type":"array","items":{"type":"string"},"description":"A list of users or groups that can modify the alert.\n"},"canViews":{"type":"array","items":{"type":"string"},"description":"A list of users or groups that can view the alert.\n"},"condition":{"type":"string","description":"A Wavefront query that is evaluated at regular intervals (default is 1 minute). The alert fires and notifications are triggered when a data series matching this query evaluates to a non-zero value for a set number of consecutive minutes.\n"},"conditions":{"type":"object","additionalProperties":{"type":"string"},"description":"A map of severity to condition for which this alert will trigger.\n"},"displayExpression":{"type":"string","description":"A second query the results of which are displayed in the alert user interface instead of the condition query.\n"},"evaluateRealtimeData":{"type":"boolean","description":"A Boolean flag to enable real-time evaluation.\n"},"failingHostLabelPairs":{"type":"array","items":{"$ref":"#/types/wavefront:index/getAlertsAlertFailingHostLabelPair:getAlertsAlertFailingHostLabelPair"},"description":"A list of failing host label pairs.\n"},"id":{"type":"string","description":"The ID of the alert in Wavefront.\n"},"inMaintenanceHostLabelPairs":{"type":"array","items":{"$ref":"#/types/wavefront:index/getAlertsAlertInMaintenanceHostLabelPair:getAlertsAlertInMaintenanceHostLabelPair"},"description":"A list of in maintenance host label pairs.\n"},"includeObsoleteMetrics":{"type":"boolean","description":"A Boolean flag indicating whether to include obsolete metrics or not.\n"},"minutes":{"type":"integer","description":"The number of consecutive minutes that a series matching the condition query must evaluate to \"true\" (non-zero value) before the alert fires.\n"},"name":{"type":"string","description":"The name of the alert as it is displayed in Wavefront.\n"},"notificationResendFrequencyMinutes":{"type":"integer","description":"How often to re-trigger a continually failing alert.\n"},"processRateMinutes":{"type":"integer","description":"The specified query is executed every `process_rate_minutes` minutes.\n"},"resolveAfterMinutes":{"type":"integer","description":"The number of consecutive minutes that a firing series matching the condition query must evaluate to \"false\" (zero value) before the alert resolves.\n"},"runbookLinks":{"type":"array","items":{"type":"string"},"description":"A list of user-supplied runbook links for this alert.\n"},"severity":{"type":"string","description":"The severity of the alert.\n"},"severityLists":{"type":"array","items":{"type":"string"}},"statuses":{"type":"array","items":{"type":"string"},"description":"The status of the alert.\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags assigned to the alert.\n"},"target":{"type":"string","description":"An email address or integration endpoint (such as PagerDuty or webhook) to notify when the alert status changes.\n"},"targets":{"type":"object","additionalProperties":{"type":"string"},"description":"A comma-separated list of the email addresses or integration endpoints (such as PagerDuty or webhook) to notify when the alert status changes. Multiple target types can be in the list.\n"}},"type":"object","required":["additionalInformation","alertTriageDashboards","alertType","canModifies","canViews","condition","conditions","displayExpression","evaluateRealtimeData","failingHostLabelPairs","id","inMaintenanceHostLabelPairs","includeObsoleteMetrics","minutes","name","notificationResendFrequencyMinutes","processRateMinutes","resolveAfterMinutes","runbookLinks","severity","severityLists","statuses","tags","target"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getAlertsAlertAlertTriageDashboard:getAlertsAlertAlertTriageDashboard":{"properties":{"dashboardId":{"type":"string"},"description":{"type":"string"},"parameters":{"$ref":"#/types/wavefront:index/getAlertsAlertAlertTriageDashboardParameters:getAlertsAlertAlertTriageDashboardParameters"}},"type":"object","required":["dashboardId","description"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getAlertsAlertAlertTriageDashboardParameters:getAlertsAlertAlertTriageDashboardParameters":{"properties":{"constants":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"}}},"type":"object"},"wavefront:index/getAlertsAlertFailingHostLabelPair:getAlertsAlertFailingHostLabelPair":{"properties":{"firing":{"type":"integer"},"host":{"type":"string"}},"type":"object","required":["firing","host"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getAlertsAlertInMaintenanceHostLabelPair:getAlertsAlertInMaintenanceHostLabelPair":{"properties":{"firing":{"type":"integer"},"host":{"type":"string"}},"type":"object","required":["firing","host"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDashboardParameterDetail:getDashboardParameterDetail":{"properties":{"defaultValue":{"type":"string","description":"The default value of the parameter.\n"},"dynamicFieldType":{"type":"string","description":"For `DYNAMIC` parameter types, the type of the field. Valid options are `SOURCE`,\n`SOURCE_TAG`, `METRIC_NAME`, `TAG_KEY`, and `MATCHING_SOURCE_TAG`.\n"},"hideFromView":{"type":"boolean","description":"If `true` the parameter will only be shown on the edit view of the dashboard.\n"},"label":{"type":"string","description":"The label for the parameter.\n"},"parameterType":{"type":"string","description":"The type of the parameter. `SIMPLE`, `LIST`, or `DYNAMIC`.\n"},"queryValue":{"type":"string","description":"For `DYNAMIC` parameter types, the query to execute to return values.\n"},"tagKey":{"type":"string","description":"For `TAG_KEY` dynamic field types, the tag key to return.\n"},"valuesToReadableStrings":{"type":"object","additionalProperties":{"type":"string"},"description":"A string to string map. At least one of the keys must match the value of\n`default_value`.\n"}},"type":"object","required":["defaultValue","dynamicFieldType","hideFromView","label","parameterType","queryValue","tagKey","valuesToReadableStrings"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDashboardSection:getDashboardSection":{"properties":{"name":{"type":"string","description":"The name of the parameters.\n"},"rows":{"type":"array","items":{"$ref":"#/types/wavefront:index/getDashboardSectionRow:getDashboardSectionRow"}}},"type":"object","required":["name","rows"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDashboardSectionRow:getDashboardSectionRow":{"properties":{"charts":{"type":"array","items":{"$ref":"#/types/wavefront:index/getDashboardSectionRowChart:getDashboardSectionRowChart"}},"heightFactor":{"type":"integer"},"name":{"type":"string","description":"The name of the parameters.\n"}},"type":"object","required":["charts","heightFactor","name"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDashboardSectionRowChart:getDashboardSectionRowChart":{"properties":{"base":{"type":"integer","description":"The base of logarithmic scale charts. Omit or set to 0 for the default linear scale. Usually set to 10 for the traditional logarithmic scale.\n"},"chartAttributes":{"type":"string"},"chartSettings":{"type":"array","items":{"$ref":"#/types/wavefront:index/getDashboardSectionRowChartChartSetting:getDashboardSectionRowChartChartSetting"}},"description":{"type":"string","description":"Description of the chart.\n"},"includeObsoleteMetrics":{"type":"boolean"},"interpolatePointsKey":{"type":"boolean"},"name":{"type":"string","description":"The name of the parameters.\n"},"noDefaultEvents":{"type":"boolean"},"sources":{"type":"array","items":{"$ref":"#/types/wavefront:index/getDashboardSectionRowChartSource:getDashboardSectionRowChartSource"}},"summarization":{"type":"string","description":"Summarization strategy for the chart. MEAN is default.\n"},"units":{"type":"string","description":"String to label the units of the chart on the Y-Axis.\n"}},"type":"object","required":["base","chartAttributes","chartSettings","description","includeObsoleteMetrics","interpolatePointsKey","name","noDefaultEvents","sources","summarization","units"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDashboardSectionRowChartChartSetting:getDashboardSectionRowChartChartSetting":{"properties":{"autoColumnTags":{"type":"boolean","description":"This setting is deprecated.\n"},"columnTags":{"type":"string","description":"This setting is deprecated.\n"},"customTags":{"type":"array","items":{"type":"string"},"description":"For the tabular view, a list of point tags to display when using the `custom` tag display mode.\n"},"expectedDataSpacing":{"type":"integer","description":"Threshold (in seconds) for time delta between consecutive points in a series above which a dotted line will replace a solid in line plots. Default is 60.\n"},"fixedLegendDisplayStats":{"type":"array","items":{"type":"string"},"description":"(Optional) For a chart with a fixed legend, a list of statistics to display in the legend.\n"},"fixedLegendEnabled":{"type":"boolean","description":"(Optional) Whether to enable a fixed tabular legend adjacent to the chart.\n"},"fixedLegendFilterField":{"type":"string","description":"(Optional) Statistic to use for determining whether a series is displayed on the fixed legend. Valid options are `CURRENT`, `MEAN`, `MEDIAN`, `SUM`, `MIN`, `MAX`, and `COUNT`.\n"},"fixedLegendFilterLimit":{"type":"integer","description":"(Optional) Number of series to include in the fixed legend.\n"},"fixedLegendFilterSort":{"type":"string","description":"(Optional) Whether to display `TOP` or `BOTTOM` ranked series in a fixed legend. Valid options are `TOP`, and `BOTTOM`.\n"},"fixedLegendHideLabel":{"type":"boolean","description":"(Optional) This setting is deprecated.\n"},"fixedLegendPosition":{"type":"string","description":"(Optional)  Where the fixed legend should be displayed with respect to the chart. Valid options are `RIGHT`, `TOP`, `LEFT`, `BOTTOM`.\n"},"fixedLegendUseRawStats":{"type":"boolean","description":"(Optional) If `true`, the legend uses non-summarized stats instead of summarized.\n"},"groupBySource":{"type":"boolean","description":"For the tabular view, whether to group multi metrics into a single row by a common source. If set to `false`, each source is displayed in its own row. If set to `true`, multiple metrics for the same host are displayed as different columns in the same row.\n"},"invertDynamicLegendHoverControl":{"type":"boolean","description":"(Optional) Whether to disable the display of the floating legend (but reenable it when the ctrl-key is pressed).\n"},"lineType":{"type":"string","description":"Plot interpolation type.  `linear` is default. Valid options are `linear`, `step-before`, `step-after`, `basis`, `cardinal`, and `monotone`.\n"},"max":{"type":"number","description":"Max value of the Y-axis. Set to null or leave blank for auto.\n"},"min":{"type":"number","description":"Min value of the Y-axis. Set to null or leave blank for auto.\n"},"numTags":{"type":"integer","description":"For the tabular view defines how many point tags to display.\n"},"plainMarkdownContent":{"type":"string","description":"The markdown content for a Markdown display, in plain text.\n"},"showHosts":{"type":"boolean","description":"For the tabular view, whether to display sources. Default is `true`.\n"},"showLabels":{"type":"boolean","description":"For the tabular view, whether to display labels. Default is `true`.\n"},"showRawValues":{"type":"boolean","description":"For the tabular view, whether to display raw values. Default is `false`.\n"},"sortValuesDescending":{"type":"boolean","description":"For the tabular view, whether to display values in descending order. Default is `false`.\n"},"sparklineDecimalPrecision":{"type":"integer","description":"For the single stat view, the decimal precision of the displayed number.\n"},"sparklineDisplayColor":{"type":"string","description":"For the single stat view, the color of the displayed text (when not dynamically determined). Values should be in RGBA format.\n"},"sparklineDisplayFontSize":{"type":"string","description":"For the single stat view, the font size of the displayed text, in percent.\n"},"sparklineDisplayHorizontalPosition":{"type":"string","description":"For the single stat view, the horizontal position of the displayed text. Valid options are `MIDDLE`, `LEFT`, `RIGHT`.\n"},"sparklineDisplayPostfix":{"type":"string","description":"For the single stat view, a string to append to the displayed text.\n"},"sparklineDisplayPrefix":{"type":"string","description":"For the single stat view, a string to add before the displayed text.\n"},"sparklineDisplayValueType":{"type":"string","description":"For the single stat view, where to display the name of the query or the value of the query. Valid options are `VALUE` or `LABEL`.\n"},"sparklineDisplayVerticalPosition":{"type":"string","description":"This setting is deprecated.\n"},"sparklineFillColor":{"type":"string","description":"For the single stat view, the color of the background fill. Values should be in RGBA format.\n"},"sparklineLineColor":{"type":"string","description":"For the single stat view, the color of the line. Values should be in RGBA format.\n"},"sparklineSize":{"type":"string","description":"For the single stat view, this determines whether the sparkline of the statistic is displayed in the chart. Valid options are `BACKGROUND`, `BOTTOM`, `NONE`.\n"},"sparklineValueColorMapApplyTo":{"type":"string","description":"For the single stat view, whether to apply dynamic color settings to the displayed `TEXT` or `BACKGROUND`. Valid options are `TEXT` or `BACKGROUND`.\n"},"sparklineValueColorMapColors":{"type":"array","items":{"type":"string"},"description":"For the single stat view, a list of colors that differing query values map to. Must contain one more element than `sparkline_value_color_map_values_v2`. Values should be in RGBA format.\n"},"sparklineValueColorMapValues":{"type":"array","items":{"type":"integer"},"description":"This setting is deprecated.\n"},"sparklineValueColorMapValuesV2s":{"type":"array","items":{"type":"number"},"description":"For the single stat view, a list of boundaries for mapping different query values to colors. Must contain one element less than `sparkline_value_color_map_colors`.\n"},"sparklineValueTextMapTexts":{"type":"array","items":{"type":"string"},"description":"For the single stat view, a list of display text values that different query values map to. Must contain one more element than `sparkline_value_text_map_thresholds`.\n"},"sparklineValueTextMapThresholds":{"type":"array","items":{"type":"number"},"description":"For the single stat view, a list of threshold boundaries for mapping different query values to display text. Must contain one element less than `sparkline_value_text_map_text`.\n"},"stackType":{"type":"string","description":"Type of stacked chart (applicable only if chart type is `stacked`). `zero` (default) means stacked from y=0. `expand` means normalized from 0 to 1.  `wiggle` means minimize weighted changes. `silhouette` means to center the stream. Valid options are `zero`, `expand`, `wiggle`, `silhouette`, and `bars`.\n"},"tagMode":{"type":"string","description":"For the tabular view, which mode to use to determine which point tags to display. Valid options are `all`, `top`, or `custom`.\n"},"timeBasedColoring":{"type":"boolean","description":"For x-y scatterplots, whether to color more recent points as darker than older points.\n"},"type":{"type":"string","description":"Chart Type. `line` refers to the Line Plot, `scatter` to the Point Plot, `stacked-area` to the Stacked Area plot, `table` to the Tabular View, `scatterplot-xy` to Scatter Plot, `markdown-widget` to the Markdown display, and `sparkline` to the Single Stat view. Valid options are`line`, `scatterplot`,\n`stacked-area`, `stacked-column`, `table`, `scatterplot-xy`, `markdown-widget`, `sparkline`, `globe`, `nodemap`, `top-k`, `status-list`, and `histogram`.\n"},"windowSize":{"type":"integer","description":"Width, in minutes, of the time window to use for `last` windowing.\n"},"windowing":{"type":"string","description":"For the tabular view, whether to use the full time window for the query or the last X minutes. Valid options are `full` or `last`.\n"},"xmax":{"type":"number","description":"For x-y scatterplots, max value for the X-axis. Set to null for auto.\n"},"xmin":{"type":"number","description":"For x-y scatterplots, min value for the X-axis. Set to null for auto.\n"},"y0ScaleSiBy1024":{"type":"boolean"},"y0UnitAutoscaling":{"type":"boolean","description":"(Optional) Whether to automatically adjust magnitude labels and units for the left Y-axis to favor smaller magnitudes and larger units.\n"},"y1Max":{"type":"number"},"y1Min":{"type":"number"},"y1ScaleSiBy1024":{"type":"boolean"},"y1UnitAutoscaling":{"type":"boolean","description":"(Optional) Whether to automatically adjust magnitude labels and units for the right Y-axis to favor smaller magnitudes and larger units.\n"},"y1Units":{"type":"string","description":"For plots with multiple Y-axes, units for right side Y-axis.\n"},"ymax":{"type":"number","description":"For x-y scatterplots, max value for the Y-axis. Set to null for auto.\n"},"ymin":{"type":"number","description":"For x-y scatterplots, min value for the Y-axis. Set to null for auto.\n"}},"type":"object","required":["autoColumnTags","columnTags","customTags","expectedDataSpacing","fixedLegendDisplayStats","fixedLegendEnabled","fixedLegendFilterField","fixedLegendFilterLimit","fixedLegendFilterSort","fixedLegendHideLabel","fixedLegendPosition","fixedLegendUseRawStats","groupBySource","invertDynamicLegendHoverControl","lineType","max","min","numTags","plainMarkdownContent","showHosts","showLabels","showRawValues","sortValuesDescending","sparklineDecimalPrecision","sparklineDisplayColor","sparklineDisplayFontSize","sparklineDisplayHorizontalPosition","sparklineDisplayPostfix","sparklineDisplayPrefix","sparklineDisplayValueType","sparklineDisplayVerticalPosition","sparklineFillColor","sparklineLineColor","sparklineSize","sparklineValueColorMapApplyTo","sparklineValueColorMapColors","sparklineValueColorMapValues","sparklineValueColorMapValuesV2s","sparklineValueTextMapTexts","sparklineValueTextMapThresholds","stackType","tagMode","timeBasedColoring","type","windowSize","windowing","xmax","xmin","y0ScaleSiBy1024","y0UnitAutoscaling","y1Max","y1Min","y1ScaleSiBy1024","y1UnitAutoscaling","y1Units","ymax","ymin"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDashboardSectionRowChartSource:getDashboardSectionRowChartSource":{"properties":{"disabled":{"type":"boolean","description":"Whether the source is disabled.\n"},"name":{"type":"string","description":"The name of the parameters.\n"},"query":{"type":"string","description":"Query expression to plot on the chart.\n"},"querybuilderEnabled":{"type":"boolean"},"scatterPlotSource":{"type":"string","description":"For scatter plots, does this query source the X-axis or the Y-axis, `X`, or `Y`.\n"},"secondaryAxis":{"type":"boolean"},"sourceColor":{"type":"string"},"sourceDescription":{"type":"string","description":"A description for the purpose of this source.\n"}},"type":"object","required":["disabled","name","query","querybuilderEnabled","scatterPlotSource","secondaryAxis","sourceColor","sourceDescription"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDashboardsDashboard:getDashboardsDashboard":{"properties":{"canModifies":{"type":"array","items":{"type":"string"},"description":"A list of users that have modify ACL access to the dashboard.\n"},"canViews":{"type":"array","items":{"type":"string"},"description":"A list of users that have view ACL access to the dashboard.\n"},"chartTitleBgColor":{"type":"string"},"chartTitleColor":{"type":"string"},"chartTitleScalar":{"type":"integer"},"createdEpochMillis":{"type":"integer"},"creatorId":{"type":"string"},"customer":{"type":"string"},"defaultEndTime":{"type":"integer"},"defaultStartTime":{"type":"integer"},"defaultTimeWindow":{"type":"string"},"deleted":{"type":"boolean"},"description":{"type":"string","description":"Description of the chart.\n"},"displayDescription":{"type":"boolean"},"displayQueryParameters":{"type":"boolean","description":"Whether the dashboard parameters section is opened by default when the dashboard is shown.\n"},"displaySectionTableOfContents":{"type":"boolean","description":"Whether the \"pills\" quick-linked the sections of the dashboard are displayed by default when the dashboard is shown.\n"},"eventFilterType":{"type":"string","description":"How charts belonging to this dashboard should display events. `BYCHART` is default if\nunspecified. Valid options are: `BYCHART`, `AUTOMATIC`, `ALL`, `NONE`, `BYDASHBOARD`, and `BYCHARTANDDASHBOARD`.\n"},"eventQuery":{"type":"string"},"favorite":{"type":"boolean"},"hidden":{"type":"boolean"},"id":{"type":"string"},"name":{"type":"string","description":"The name of the parameters.\n"},"numCharts":{"type":"integer"},"numFavorites":{"type":"integer"},"parameterDetails":{"type":"array","items":{"$ref":"#/types/wavefront:index/getDashboardsDashboardParameterDetail:getDashboardsDashboardParameterDetail"},"description":"The current JSON representation of dashboard parameters. See parameter details.\n"},"parameters":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"}},"sections":{"type":"array","items":{"$ref":"#/types/wavefront:index/getDashboardsDashboardSection:getDashboardsDashboardSection"}},"systemOwned":{"type":"boolean"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags to assign to this resource.\n"},"updatedEpochMillis":{"type":"integer"},"updaterId":{"type":"string"},"url":{"type":"string","description":"Unique identifier, also a URL slug of the dashboard.\n"},"viewsLastDay":{"type":"integer"},"viewsLastMonth":{"type":"integer"},"viewsLastWeek":{"type":"integer"}},"type":"object","required":["canModifies","canViews","chartTitleBgColor","chartTitleColor","chartTitleScalar","createdEpochMillis","creatorId","customer","defaultEndTime","defaultStartTime","defaultTimeWindow","deleted","description","displayDescription","displayQueryParameters","displaySectionTableOfContents","eventFilterType","eventQuery","favorite","hidden","id","name","numCharts","numFavorites","parameterDetails","parameters","sections","systemOwned","tags","updatedEpochMillis","updaterId","url","viewsLastDay","viewsLastMonth","viewsLastWeek"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDashboardsDashboardParameterDetail:getDashboardsDashboardParameterDetail":{"properties":{"defaultValue":{"type":"string","description":"The default value of the parameter.\n"},"dynamicFieldType":{"type":"string","description":"For `DYNAMIC` parameter types, the type of the field. Valid options are `SOURCE`,\n`SOURCE_TAG`, `METRIC_NAME`, `TAG_KEY`, and `MATCHING_SOURCE_TAG`.\n"},"hideFromView":{"type":"boolean","description":"If `true` the parameter will only be shown on the edit view of the dashboard.\n"},"label":{"type":"string","description":"The label for the parameter.\n"},"parameterType":{"type":"string","description":"The type of the parameter. `SIMPLE`, `LIST`, or `DYNAMIC`.\n"},"queryValue":{"type":"string","description":"For `DYNAMIC` parameter types, the query to execute to return values.\n"},"tagKey":{"type":"string","description":"For `TAG_KEY` dynamic field types, the tag key to return.\n"},"valuesToReadableStrings":{"type":"object","additionalProperties":{"type":"string"},"description":"A string to string map. At least one of the keys must match the value of\n`default_value`.\n"}},"type":"object","required":["defaultValue","dynamicFieldType","hideFromView","label","parameterType","queryValue","tagKey","valuesToReadableStrings"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDashboardsDashboardSection:getDashboardsDashboardSection":{"properties":{"name":{"type":"string","description":"The name of the parameters.\n"},"rows":{"type":"array","items":{"$ref":"#/types/wavefront:index/getDashboardsDashboardSectionRow:getDashboardsDashboardSectionRow"}}},"type":"object","required":["name","rows"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDashboardsDashboardSectionRow:getDashboardsDashboardSectionRow":{"properties":{"charts":{"type":"array","items":{"$ref":"#/types/wavefront:index/getDashboardsDashboardSectionRowChart:getDashboardsDashboardSectionRowChart"}},"heightFactor":{"type":"integer"},"name":{"type":"string","description":"The name of the parameters.\n"}},"type":"object","required":["charts","heightFactor","name"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDashboardsDashboardSectionRowChart:getDashboardsDashboardSectionRowChart":{"properties":{"base":{"type":"integer","description":"The base of logarithmic scale charts. Omit or set to 0 for the default linear scale. Usually set to 10 for the traditional logarithmic scale.\n"},"chartAttributes":{"type":"string"},"chartSettings":{"type":"array","items":{"$ref":"#/types/wavefront:index/getDashboardsDashboardSectionRowChartChartSetting:getDashboardsDashboardSectionRowChartChartSetting"}},"description":{"type":"string","description":"Description of the chart.\n"},"includeObsoleteMetrics":{"type":"boolean"},"interpolatePointsKey":{"type":"boolean"},"name":{"type":"string","description":"The name of the parameters.\n"},"noDefaultEvents":{"type":"boolean"},"sources":{"type":"array","items":{"$ref":"#/types/wavefront:index/getDashboardsDashboardSectionRowChartSource:getDashboardsDashboardSectionRowChartSource"}},"summarization":{"type":"string","description":"Summarization strategy for the chart. MEAN is default.\n"},"units":{"type":"string","description":"String to label the units of the chart on the Y-Axis.\n"}},"type":"object","required":["base","chartAttributes","chartSettings","description","includeObsoleteMetrics","interpolatePointsKey","name","noDefaultEvents","sources","summarization","units"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDashboardsDashboardSectionRowChartChartSetting:getDashboardsDashboardSectionRowChartChartSetting":{"properties":{"autoColumnTags":{"type":"boolean","description":"This setting is deprecated.\n"},"columnTags":{"type":"string","description":"This setting is deprecated.\n"},"customTags":{"type":"array","items":{"type":"string"},"description":"For the tabular view, a list of point tags to display when using the `custom` tag display mode.\n"},"expectedDataSpacing":{"type":"integer","description":"Threshold (in seconds) for time delta between consecutive points in a series above which a dotted line will replace a solid in line plots. Default is 60.\n"},"fixedLegendDisplayStats":{"type":"array","items":{"type":"string"},"description":"(Optional) For a chart with a fixed legend, a list of statistics to display in the legend.\n"},"fixedLegendEnabled":{"type":"boolean","description":"(Optional) Whether to enable a fixed tabular legend adjacent to the chart.\n"},"fixedLegendFilterField":{"type":"string","description":"(Optional) Statistic to use for determining whether a series is displayed on the fixed legend. Valid options are `CURRENT`, `MEAN`, `MEDIAN`, `SUM`, `MIN`, `MAX`, and `COUNT`.\n"},"fixedLegendFilterLimit":{"type":"integer","description":"(Optional) Number of series to include in the fixed legend.\n"},"fixedLegendFilterSort":{"type":"string","description":"(Optional) Whether to display `TOP` or `BOTTOM` ranked series in a fixed legend. Valid options are `TOP`, and `BOTTOM`.\n"},"fixedLegendHideLabel":{"type":"boolean","description":"(Optional) This setting is deprecated.\n"},"fixedLegendPosition":{"type":"string","description":"(Optional)  Where the fixed legend should be displayed with respect to the chart. Valid options are `RIGHT`, `TOP`, `LEFT`, `BOTTOM`.\n"},"fixedLegendUseRawStats":{"type":"boolean","description":"(Optional) If `true`, the legend uses non-summarized stats instead of summarized.\n"},"groupBySource":{"type":"boolean","description":"For the tabular view, whether to group multi metrics into a single row by a common source. If set to `false`, each source is displayed in its own row. If set to `true`, multiple metrics for the same host are displayed as different columns in the same row.\n"},"invertDynamicLegendHoverControl":{"type":"boolean","description":"(Optional) Whether to disable the display of the floating legend (but reenable it when the ctrl-key is pressed).\n"},"lineType":{"type":"string","description":"Plot interpolation type.  `linear` is default. Valid options are `linear`, `step-before`, `step-after`, `basis`, `cardinal`, and `monotone`.\n"},"max":{"type":"number","description":"Max value of the Y-axis. Set to null or leave blank for auto.\n"},"min":{"type":"number","description":"Min value of the Y-axis. Set to null or leave blank for auto.\n"},"numTags":{"type":"integer","description":"For the tabular view defines how many point tags to display.\n"},"plainMarkdownContent":{"type":"string","description":"The markdown content for a Markdown display, in plain text.\n"},"showHosts":{"type":"boolean","description":"For the tabular view, whether to display sources. Default is `true`.\n"},"showLabels":{"type":"boolean","description":"For the tabular view, whether to display labels. Default is `true`.\n"},"showRawValues":{"type":"boolean","description":"For the tabular view, whether to display raw values. Default is `false`.\n"},"sortValuesDescending":{"type":"boolean","description":"For the tabular view, whether to display values in descending order. Default is `false`.\n"},"sparklineDecimalPrecision":{"type":"integer","description":"For the single stat view, the decimal precision of the displayed number.\n"},"sparklineDisplayColor":{"type":"string","description":"For the single stat view, the color of the displayed text (when not dynamically determined). Values should be in RGBA format.\n"},"sparklineDisplayFontSize":{"type":"string","description":"For the single stat view, the font size of the displayed text, in percent.\n"},"sparklineDisplayHorizontalPosition":{"type":"string","description":"For the single stat view, the horizontal position of the displayed text. Valid options are `MIDDLE`, `LEFT`, `RIGHT`.\n"},"sparklineDisplayPostfix":{"type":"string","description":"For the single stat view, a string to append to the displayed text.\n"},"sparklineDisplayPrefix":{"type":"string","description":"For the single stat view, a string to add before the displayed text.\n"},"sparklineDisplayValueType":{"type":"string","description":"For the single stat view, where to display the name of the query or the value of the query. Valid options are `VALUE` or `LABEL`.\n"},"sparklineDisplayVerticalPosition":{"type":"string","description":"This setting is deprecated.\n"},"sparklineFillColor":{"type":"string","description":"For the single stat view, the color of the background fill. Values should be in RGBA format.\n"},"sparklineLineColor":{"type":"string","description":"For the single stat view, the color of the line. Values should be in RGBA format.\n"},"sparklineSize":{"type":"string","description":"For the single stat view, this determines whether the sparkline of the statistic is displayed in the chart. Valid options are `BACKGROUND`, `BOTTOM`, `NONE`.\n"},"sparklineValueColorMapApplyTo":{"type":"string","description":"For the single stat view, whether to apply dynamic color settings to the displayed `TEXT` or `BACKGROUND`. Valid options are `TEXT` or `BACKGROUND`.\n"},"sparklineValueColorMapColors":{"type":"array","items":{"type":"string"},"description":"For the single stat view, a list of colors that differing query values map to. Must contain one more element than `sparkline_value_color_map_values_v2`. Values should be in RGBA format.\n"},"sparklineValueColorMapValues":{"type":"array","items":{"type":"integer"},"description":"This setting is deprecated.\n"},"sparklineValueColorMapValuesV2s":{"type":"array","items":{"type":"number"},"description":"For the single stat view, a list of boundaries for mapping different query values to colors. Must contain one element less than `sparkline_value_color_map_colors`.\n"},"sparklineValueTextMapTexts":{"type":"array","items":{"type":"string"},"description":"For the single stat view, a list of display text values that different query values map to. Must contain one more element than `sparkline_value_text_map_thresholds`.\n"},"sparklineValueTextMapThresholds":{"type":"array","items":{"type":"number"},"description":"For the single stat view, a list of threshold boundaries for mapping different query values to display text. Must contain one element less than `sparkline_value_text_map_text`.\n"},"stackType":{"type":"string","description":"Type of stacked chart (applicable only if chart type is `stacked`). `zero` (default) means stacked from y=0. `expand` means normalized from 0 to 1.  `wiggle` means minimize weighted changes. `silhouette` means to center the stream. Valid options are `zero`, `expand`, `wiggle`, `silhouette`, and `bars`.\n"},"tagMode":{"type":"string","description":"For the tabular view, which mode to use to determine which point tags to display. Valid options are `all`, `top`, or `custom`.\n"},"timeBasedColoring":{"type":"boolean","description":"For x-y scatterplots, whether to color more recent points as darker than older points.\n"},"type":{"type":"string","description":"Chart Type. `line` refers to the Line Plot, `scatter` to the Point Plot, `stacked-area` to the Stacked Area plot, `table` to the Tabular View, `scatterplot-xy` to Scatter Plot, `markdown-widget` to the Markdown display, and `sparkline` to the Single Stat view. Valid options are`line`, `scatterplot`, `stacked-area`, `stacked-column`, `table`, `scatterplot-xy`, `markdown-widget`, `sparkline`, `globe`, `nodemap`, `top-k`, `status-list`, and `histogram`.\n"},"windowSize":{"type":"integer","description":"Width, in minutes, of the time window to use for `last` windowing.\n"},"windowing":{"type":"string","description":"For the tabular view, whether to use the full time window for the query or the last X minutes. Valid options are `full` or `last`.\n"},"xmax":{"type":"number","description":"For x-y scatterplots, max value for the X-axis. Set to null for auto.\n"},"xmin":{"type":"number","description":"For x-y scatterplots, min value for the X-axis. Set to null for auto.\n"},"y0ScaleSiBy1024":{"type":"boolean"},"y0UnitAutoscaling":{"type":"boolean","description":"(Optional) Whether to automatically adjust magnitude labels and units for the left Y-axis to favor smaller magnitudes and larger units.\n"},"y1Max":{"type":"number"},"y1Min":{"type":"number"},"y1ScaleSiBy1024":{"type":"boolean"},"y1UnitAutoscaling":{"type":"boolean","description":"(Optional) Whether to automatically adjust magnitude labels and units for the right Y-axis to favor smaller magnitudes and larger units.\n"},"y1Units":{"type":"string","description":"For plots with multiple Y-axes, units for right side Y-axis.\n"},"ymax":{"type":"number","description":"For x-y scatterplots, max value for the Y-axis. Set to null for auto.\n"},"ymin":{"type":"number","description":"For x-y scatterplots, min value for the Y-axis. Set to null for auto.\n"}},"type":"object","required":["autoColumnTags","columnTags","customTags","expectedDataSpacing","fixedLegendDisplayStats","fixedLegendEnabled","fixedLegendFilterField","fixedLegendFilterLimit","fixedLegendFilterSort","fixedLegendHideLabel","fixedLegendPosition","fixedLegendUseRawStats","groupBySource","invertDynamicLegendHoverControl","lineType","max","min","numTags","plainMarkdownContent","showHosts","showLabels","showRawValues","sortValuesDescending","sparklineDecimalPrecision","sparklineDisplayColor","sparklineDisplayFontSize","sparklineDisplayHorizontalPosition","sparklineDisplayPostfix","sparklineDisplayPrefix","sparklineDisplayValueType","sparklineDisplayVerticalPosition","sparklineFillColor","sparklineLineColor","sparklineSize","sparklineValueColorMapApplyTo","sparklineValueColorMapColors","sparklineValueColorMapValues","sparklineValueColorMapValuesV2s","sparklineValueTextMapTexts","sparklineValueTextMapThresholds","stackType","tagMode","timeBasedColoring","type","windowSize","windowing","xmax","xmin","y0ScaleSiBy1024","y0UnitAutoscaling","y1Max","y1Min","y1ScaleSiBy1024","y1UnitAutoscaling","y1Units","ymax","ymin"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDashboardsDashboardSectionRowChartSource:getDashboardsDashboardSectionRowChartSource":{"properties":{"disabled":{"type":"boolean","description":"Whether the source is disabled.\n"},"name":{"type":"string","description":"The name of the parameters.\n"},"query":{"type":"string","description":"Query expression to plot on the chart.\n"},"querybuilderEnabled":{"type":"boolean"},"scatterPlotSource":{"type":"string","description":"For scatter plots, does this query source the X-axis or the Y-axis, `X`, or `Y`.\n"},"secondaryAxis":{"type":"boolean"},"sourceColor":{"type":"string"},"sourceDescription":{"type":"string","description":"A description for the purpose of this source.\n"}},"type":"object","required":["disabled","name","query","querybuilderEnabled","scatterPlotSource","secondaryAxis","sourceColor","sourceDescription"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getDerivedMetricsDerivedMetric:getDerivedMetricsDerivedMetric":{"properties":{"additionalInformation":{"type":"string","description":"User-supplied additional explanatory information about the derived metric.\n"},"createUserId":{"type":"string","description":"The ID of the user who created the derived metric.\n"},"createdEpochMillis":{"type":"integer","description":"The timestamp in epoch milliseconds indicating when the derived metric is created.\n"},"deleted":{"type":"boolean","description":"A Boolean flag indicating whether the derived metric is deleted or not.\n"},"hostsUseds":{"type":"array","items":{"type":"string"},"description":"A list of hosts used in the derived metric.\n"},"id":{"type":"string","description":"The ID of the derived metric in Wavefront.\n"},"inTrash":{"type":"boolean","description":"A Boolean variable indicating trash status.\n"},"includeObsoleteMetrics":{"type":"boolean","description":"A Boolean flag indicating whether to include obsolete metrics or not.\n"},"lastErrorMessage":{"type":"string","description":"Last error message occurred.\n"},"lastFailedTime":{"type":"integer","description":"Timestamp of the last failed derived metric.\n"},"lastProcessedMillis":{"type":"integer","description":"The last processed timestamp.\n"},"lastQueryTime":{"type":"integer","description":"The timestamp indicating the last time the query was executed.\n"},"metricsUseds":{"type":"array","items":{"type":"string"},"description":"A list of metrics used in the derived metric.\n"},"minutes":{"type":"integer","description":"How frequently the query generating the derived metric is run.\n"},"name":{"type":"string","description":"The name of the derived metric in Wavefront.\n"},"pointsScannedAtLastQuery":{"type":"integer","description":"The number of points scanned when the last query was executed.\n"},"processRateMinutes":{"type":"integer","description":"The specified query is executed every `process_rate_minutes` minutes.\n"},"query":{"type":"string","description":"A Wavefront query that is evaluated at regular intervals (default is 1 minute).\n"},"queryFailing":{"type":"boolean","description":"A Boolean variable indicating whether query is failing for the derived metric.\n"},"queryQbEnabled":{"type":"boolean","description":"A Boolean flag for enabling `query_qb`\n"},"statuses":{"type":"array","items":{"type":"string"},"description":"The status of the derived metric.\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags assigned to the derived metric.\n"},"updateUserId":{"type":"string","description":"The ID of the user who updated the derived metric.\n"},"updatedEpochMillis":{"type":"integer","description":"The timestamp in epoch milliseconds indicating when the derived metric is updated.\n"}},"type":"object","required":["additionalInformation","createUserId","createdEpochMillis","deleted","hostsUseds","id","inTrash","includeObsoleteMetrics","lastErrorMessage","lastFailedTime","lastProcessedMillis","lastQueryTime","metricsUseds","minutes","name","pointsScannedAtLastQuery","processRateMinutes","query","queryFailing","queryQbEnabled","statuses","tags","updateUserId","updatedEpochMillis"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getEventsEvent:getEventsEvent":{"properties":{"annotations":{"type":"object","additionalProperties":{"type":"string"},"description":"Annotations associated with the event.\n"},"details":{"type":"string","description":"The description of the event.\n"},"endtimeKey":{"type":"integer"},"id":{"type":"string","description":"The ID of the event in Wavefront.\n"},"isEphemeral":{"type":"boolean","description":"A Boolean flag. If set to `true`, creates a point-in-time event (i.e. with no duration).\n"},"name":{"type":"string","description":"The name of the event in Wavefront.\n"},"severity":{"type":"string","description":"The severity category of the event.\n"},"startTime":{"type":"integer","description":"The start time of the event in epoch milliseconds.\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags assigned to the event.\n"},"type":{"type":"string","description":"The type of the event.\n"}},"type":"object","required":["annotations","details","endtimeKey","id","isEphemeral","name","severity","startTime","tags","type"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getExternalLinksExternalLink:getExternalLinksExternalLink":{"properties":{"createdEpochMillis":{"type":"integer","description":"The timestamp in epoch milliseconds indicating when the external link is created.\n"},"creatorId":{"type":"string","description":"The ID of the user who created the external link.\n"},"description":{"type":"string","description":"Human-readable description of the link.\n"},"id":{"type":"string","description":"The ID of the external link.\n"},"isLogIntegration":{"type":"boolean","description":"Whether this is a \"Log Integration\" subType of external link.\n"},"metricFilterRegex":{"type":"string","description":"Controls whether a link is displayed in the context menu of a highlighted series. If present, the metric name of the highlighted series must match this regular expression in order for the link to be displayed.\n"},"name":{"type":"string","description":"The name of the external link.\n"},"pointTagFilterRegexes":{"type":"object","additionalProperties":{"type":"string"},"description":"(Optional) Controls whether a link is displayed in the context menu of a highlighted\nseries. This is a map from string to regular expression. The highlighted series must contain point tags whose\nkeys are present in the keys of this map and whose values match the regular expressions associated with those\nkeys in order for the link to be displayed.\n"},"sourceFilterRegex":{"type":"string","description":"Controls whether a link is displayed in the context menu of a highlighted series. If present, the source name of the highlighted series must match this regular expression in order for the link to be displayed.\n"},"template":{"type":"string","description":"The mustache template for the link. The template must expand to a full URL, including scheme, origin, etc.\n"},"updatedEpochMillis":{"type":"integer","description":"The timestamp in epoch milliseconds indicating when the external link is updated.\n"},"updaterId":{"type":"string","description":"The ID of the user who updated the external link.\n"}},"type":"object","required":["createdEpochMillis","creatorId","description","id","isLogIntegration","metricFilterRegex","name","pointTagFilterRegexes","sourceFilterRegex","template","updatedEpochMillis","updaterId"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getMaintenanceWindowAllMaintenanceWindow:getMaintenanceWindowAllMaintenanceWindow":{"properties":{"createdEpochMillis":{"type":"integer"},"creatorId":{"type":"string"},"customerId":{"type":"string"},"endTimeInSeconds":{"type":"integer"},"eventName":{"type":"string"},"hostTagGroupHostNamesGroupAnded":{"type":"boolean"},"id":{"type":"string"},"reason":{"type":"string"},"relevantCustomerTags":{"type":"array","items":{"type":"string"}},"relevantHostNames":{"type":"array","items":{"type":"string"}},"relevantHostTags":{"type":"array","items":{"type":"string"}},"relevantHostTagsAnded":{"type":"boolean"},"runningState":{"type":"string"},"sortAttr":{"type":"integer"},"startTimeInSeconds":{"type":"integer"},"title":{"type":"string"},"updatedEpochMillis":{"type":"integer"},"updaterId":{"type":"string"}},"type":"object","required":["createdEpochMillis","creatorId","customerId","endTimeInSeconds","eventName","hostTagGroupHostNamesGroupAnded","id","reason","relevantCustomerTags","relevantHostNames","relevantHostTags","relevantHostTagsAnded","runningState","sortAttr","startTimeInSeconds","title","updatedEpochMillis","updaterId"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getMetricsPolicyPolicyRule:getMetricsPolicyPolicyRule":{"properties":{"accessType":{"type":"string"},"accountIds":{"type":"array","items":{"type":"string"}},"description":{"type":"string"},"name":{"type":"string"},"prefixes":{"type":"array","items":{"type":"string"}},"roleIds":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"$ref":"#/types/wavefront:index/getMetricsPolicyPolicyRuleTag:getMetricsPolicyPolicyRuleTag"}},"tagsAnded":{"type":"boolean"},"userGroupIds":{"type":"array","items":{"type":"string"}}},"type":"object","required":["accessType","accountIds","description","name","prefixes","roleIds","tags","tagsAnded","userGroupIds"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getMetricsPolicyPolicyRuleTag:getMetricsPolicyPolicyRuleTag":{"properties":{"key":{"type":"string"},"value":{"type":"string"}},"type":"object","required":["key","value"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getRolesRole:getRolesRole":{"properties":{"description":{"type":"string","description":"The Role's description.\n"},"id":{"type":"string","description":"The Role ID.\n"},"name":{"type":"string","description":"The Role Name.\n"},"permissions":{"type":"array","items":{"type":"string"},"description":"List of Permissions (Strings) associated with Role.\n"}},"type":"object","required":["description","id","name","permissions"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getUserGroupsUserGroup:getUserGroupsUserGroup":{"properties":{"description":{"type":"string","description":"The group description.\n"},"id":{"type":"string","description":"The group ID.\n"},"name":{"type":"string","description":"The group name.\n"},"roles":{"type":"array","items":{"type":"string"},"description":"List of roles associated with the group.\n"},"users":{"type":"array","items":{"type":"string"},"description":"List of users assigned to the group.\n"}},"type":"object","required":["description","id","name","roles","users"],"language":{"nodejs":{"requiredInputs":[]}}},"wavefront:index/getUsersUser:getUsersUser":{"properties":{"customer":{"type":"string","description":"The customer the user is associated with.\n"},"email":{"type":"string"},"lastSuccessfulLogin":{"type":"integer","description":"When the user last logged in to Wavefront.\n"},"permissions":{"type":"array","items":{"type":"string"},"description":"List of permissions granted to a user.\n"},"userGroupIds":{"type":"array","items":{"type":"string"},"description":"List of User Group Ids the user is a member of.\n"}},"type":"object","required":["customer","email","lastSuccessfulLogin","permissions","userGroupIds"],"language":{"nodejs":{"requiredInputs":[]}}}},"provider":{"description":"The provider type for the wavefront package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n","properties":{"address":{"type":"string"},"httpProxy":{"type":"string"},"token":{"type":"string"}},"required":["address","token"],"inputProperties":{"address":{"type":"string"},"httpProxy":{"type":"string"},"token":{"type":"string"}},"requiredInputs":["address","token"]},"resources":{"wavefront:index/alert:Alert":{"description":"Provides a Wavefront Alert resource. This allows alerts to be created, updated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst foobar = new wavefront.Alert(\"foobar\", {\n    condition: \"100-ts(\\\"cpu.usage_idle\\\", environment=preprod and cpu=cpu-total ) \u003e 80\",\n    displayExpression: \"100-ts(\\\"cpu.usage_idle\\\", environment=preprod and cpu=cpu-total )\",\n    minutes: 5,\n    resolveAfterMinutes: 5,\n    severity: \"WARN\",\n    tags: [\n        \"terraform\",\n        \"test\",\n    ],\n    target: \"test@example.com,target:alert-target-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nfoobar = wavefront.Alert(\"foobar\",\n    condition=\"100-ts(\\\"cpu.usage_idle\\\", environment=preprod and cpu=cpu-total ) \u003e 80\",\n    display_expression=\"100-ts(\\\"cpu.usage_idle\\\", environment=preprod and cpu=cpu-total )\",\n    minutes=5,\n    resolve_after_minutes=5,\n    severity=\"WARN\",\n    tags=[\n        \"terraform\",\n        \"test\",\n    ],\n    target=\"test@example.com,target:alert-target-id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foobar = new Wavefront.Alert(\"foobar\", new()\n    {\n        Condition = \"100-ts(\\\"cpu.usage_idle\\\", environment=preprod and cpu=cpu-total ) \u003e 80\",\n        DisplayExpression = \"100-ts(\\\"cpu.usage_idle\\\", environment=preprod and cpu=cpu-total )\",\n        Minutes = 5,\n        ResolveAfterMinutes = 5,\n        Severity = \"WARN\",\n        Tags = new[]\n        {\n            \"terraform\",\n            \"test\",\n        },\n        Target = \"test@example.com,target:alert-target-id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewAlert(ctx, \"foobar\", \u0026wavefront.AlertArgs{\n\t\t\tCondition:           pulumi.String(\"100-ts(\\\"cpu.usage_idle\\\", environment=preprod and cpu=cpu-total ) \u003e 80\"),\n\t\t\tDisplayExpression:   pulumi.String(\"100-ts(\\\"cpu.usage_idle\\\", environment=preprod and cpu=cpu-total )\"),\n\t\t\tMinutes:             pulumi.Int(5),\n\t\t\tResolveAfterMinutes: pulumi.Int(5),\n\t\t\tSeverity:            pulumi.String(\"WARN\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"terraform\"),\n\t\t\t\tpulumi.String(\"test\"),\n\t\t\t},\n\t\t\tTarget: pulumi.String(\"test@example.com,target:alert-target-id\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.Alert;\nimport com.pulumi.wavefront.AlertArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var foobar = new Alert(\"foobar\", AlertArgs.builder()        \n            .condition(\"100-ts(\\\"cpu.usage_idle\\\", environment=preprod and cpu=cpu-total ) \u003e 80\")\n            .displayExpression(\"100-ts(\\\"cpu.usage_idle\\\", environment=preprod and cpu=cpu-total )\")\n            .minutes(5)\n            .resolveAfterMinutes(5)\n            .severity(\"WARN\")\n            .tags(            \n                \"terraform\",\n                \"test\")\n            .target(\"test@example.com,target:alert-target-id\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  foobar:\n    type: wavefront:Alert\n    properties:\n      condition: 100-ts(\"cpu.usage_idle\", environment=preprod and cpu=cpu-total ) \u003e 80\n      displayExpression: 100-ts(\"cpu.usage_idle\", environment=preprod and cpu=cpu-total )\n      minutes: 5\n      resolveAfterMinutes: 5\n      severity: WARN\n      tags:\n        - terraform\n        - test\n      target: test@example.com,target:alert-target-id\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAlerts can be imported using the `id`, e.g.\n\n```sh\n $ pulumi import wavefront:index/alert:Alert alert_target 1479868728473\n```\n ","properties":{"additionalInformation":{"type":"string","description":"User-supplied additional explanatory information for this alert.\nUseful for linking runbooks, migrations, etc.\n"},"alertTriageDashboards":{"type":"array","items":{"$ref":"#/types/wavefront:index/AlertAlertTriageDashboard:AlertAlertTriageDashboard"},"description":"A set of user-supplied dashboard and parameters to create dashboard links for triaging alerts.\n"},"alertType":{"type":"string","description":"The type of alert in Wavefront. Either `CLASSIC` (default)\nor `THRESHOLD`.\n"},"canModifies":{"type":"array","items":{"type":"string"},"description":"A list of valid users or groups that can modify this resource on a tenant.\n"},"canViews":{"type":"array","items":{"type":"string"},"description":"A list of valid users or groups that can view this resource on a tenant. Default is Empty list.\n"},"condition":{"type":"string","description":"A Wavefront query that is evaluated at regular intervals (default is 1 minute).\nThe alert fires and notifications are triggered when a data series matching this query evaluates\nto a non-zero value for a set number of consecutive minutes.\n"},"conditions":{"type":"object","additionalProperties":{"type":"string"},"description":"a string-\u003estring map of `severity` to `condition`\nfor which this alert will trigger.\n"},"displayExpression":{"type":"string","description":"A second query whose results are displayed in the alert user\ninterface instead of the condition query. This field is often used to display a version\nof the condition query with Boolean operators removed so that numerical values are plotted.\n"},"minutes":{"type":"integer","description":"The number of consecutive minutes that a series matching the condition query must\nevaluate to \"true\" (non-zero value) before the alert fires.\n"},"name":{"type":"string","description":"The name of the alert as it is displayed in Wavefront.\n"},"notificationResendFrequencyMinutes":{"type":"integer","description":"How often to re-trigger a continually failing alert.\nIf absent or \u003c= 0, no re-triggering occurs.\n"},"processRateMinutes":{"type":"integer","description":"The specified query is executed every `process_rate_minutes` minutes. Default value is 5 minutes.\n"},"resolveAfterMinutes":{"type":"integer","description":"The number of consecutive minutes that a firing series matching the condition\nquery must evaluate to \"false\" (zero value) before the alert resolves. When unset, this defaults to\nthe same value as `minutes`.\n"},"runbookLinks":{"type":"array","items":{"type":"string"},"description":"A list of user-supplied runbook links for this alert.\n"},"severity":{"type":"string","description":"Severity of the alert, valid values are `INFO`, `SMOKE`, `WARN`, `SEVERE`.\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags to assign to this resource.\n"},"target":{"type":"string","description":"A comma-separated list of the email address or integration endpoint\n(such as PagerDuty or webhook) to notify when the alert status changes. Multiple target types can be in the list.\nAlert target format: ({email}|pd:{pd_key}|target:{alert-target-id}).\n"},"thresholdTargets":{"type":"object","additionalProperties":{"type":"string"},"description":"A string to string map of Targets for severity.\n"}},"required":["canModifies","minutes","name","severity","tags"],"inputProperties":{"additionalInformation":{"type":"string","description":"User-supplied additional explanatory information for this alert.\nUseful for linking runbooks, migrations, etc.\n"},"alertTriageDashboards":{"type":"array","items":{"$ref":"#/types/wavefront:index/AlertAlertTriageDashboard:AlertAlertTriageDashboard"},"description":"A set of user-supplied dashboard and parameters to create dashboard links for triaging alerts.\n"},"alertType":{"type":"string","description":"The type of alert in Wavefront. Either `CLASSIC` (default)\nor `THRESHOLD`.\n"},"canModifies":{"type":"array","items":{"type":"string"},"description":"A list of valid users or groups that can modify this resource on a tenant.\n"},"canViews":{"type":"array","items":{"type":"string"},"description":"A list of valid users or groups that can view this resource on a tenant. Default is Empty list.\n"},"condition":{"type":"string","description":"A Wavefront query that is evaluated at regular intervals (default is 1 minute).\nThe alert fires and notifications are triggered when a data series matching this query evaluates\nto a non-zero value for a set number of consecutive minutes.\n"},"conditions":{"type":"object","additionalProperties":{"type":"string"},"description":"a string-\u003estring map of `severity` to `condition`\nfor which this alert will trigger.\n"},"displayExpression":{"type":"string","description":"A second query whose results are displayed in the alert user\ninterface instead of the condition query. This field is often used to display a version\nof the condition query with Boolean operators removed so that numerical values are plotted.\n"},"minutes":{"type":"integer","description":"The number of consecutive minutes that a series matching the condition query must\nevaluate to \"true\" (non-zero value) before the alert fires.\n"},"name":{"type":"string","description":"The name of the alert as it is displayed in Wavefront.\n"},"notificationResendFrequencyMinutes":{"type":"integer","description":"How often to re-trigger a continually failing alert.\nIf absent or \u003c= 0, no re-triggering occurs.\n"},"processRateMinutes":{"type":"integer","description":"The specified query is executed every `process_rate_minutes` minutes. Default value is 5 minutes.\n"},"resolveAfterMinutes":{"type":"integer","description":"The number of consecutive minutes that a firing series matching the condition\nquery must evaluate to \"false\" (zero value) before the alert resolves. When unset, this defaults to\nthe same value as `minutes`.\n"},"runbookLinks":{"type":"array","items":{"type":"string"},"description":"A list of user-supplied runbook links for this alert.\n"},"severity":{"type":"string","description":"Severity of the alert, valid values are `INFO`, `SMOKE`, `WARN`, `SEVERE`.\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags to assign to this resource.\n"},"target":{"type":"string","description":"A comma-separated list of the email address or integration endpoint\n(such as PagerDuty or webhook) to notify when the alert status changes. Multiple target types can be in the list.\nAlert target format: ({email}|pd:{pd_key}|target:{alert-target-id}).\n"},"thresholdTargets":{"type":"object","additionalProperties":{"type":"string"},"description":"A string to string map of Targets for severity.\n"}},"requiredInputs":["minutes","tags"],"stateInputs":{"description":"Input properties used for looking up and filtering Alert resources.\n","properties":{"additionalInformation":{"type":"string","description":"User-supplied additional explanatory information for this alert.\nUseful for linking runbooks, migrations, etc.\n"},"alertTriageDashboards":{"type":"array","items":{"$ref":"#/types/wavefront:index/AlertAlertTriageDashboard:AlertAlertTriageDashboard"},"description":"A set of user-supplied dashboard and parameters to create dashboard links for triaging alerts.\n"},"alertType":{"type":"string","description":"The type of alert in Wavefront. Either `CLASSIC` (default)\nor `THRESHOLD`.\n"},"canModifies":{"type":"array","items":{"type":"string"},"description":"A list of valid users or groups that can modify this resource on a tenant.\n"},"canViews":{"type":"array","items":{"type":"string"},"description":"A list of valid users or groups that can view this resource on a tenant. Default is Empty list.\n"},"condition":{"type":"string","description":"A Wavefront query that is evaluated at regular intervals (default is 1 minute).\nThe alert fires and notifications are triggered when a data series matching this query evaluates\nto a non-zero value for a set number of consecutive minutes.\n"},"conditions":{"type":"object","additionalProperties":{"type":"string"},"description":"a string-\u003estring map of `severity` to `condition`\nfor which this alert will trigger.\n"},"displayExpression":{"type":"string","description":"A second query whose results are displayed in the alert user\ninterface instead of the condition query. This field is often used to display a version\nof the condition query with Boolean operators removed so that numerical values are plotted.\n"},"minutes":{"type":"integer","description":"The number of consecutive minutes that a series matching the condition query must\nevaluate to \"true\" (non-zero value) before the alert fires.\n"},"name":{"type":"string","description":"The name of the alert as it is displayed in Wavefront.\n"},"notificationResendFrequencyMinutes":{"type":"integer","description":"How often to re-trigger a continually failing alert.\nIf absent or \u003c= 0, no re-triggering occurs.\n"},"processRateMinutes":{"type":"integer","description":"The specified query is executed every `process_rate_minutes` minutes. Default value is 5 minutes.\n"},"resolveAfterMinutes":{"type":"integer","description":"The number of consecutive minutes that a firing series matching the condition\nquery must evaluate to \"false\" (zero value) before the alert resolves. When unset, this defaults to\nthe same value as `minutes`.\n"},"runbookLinks":{"type":"array","items":{"type":"string"},"description":"A list of user-supplied runbook links for this alert.\n"},"severity":{"type":"string","description":"Severity of the alert, valid values are `INFO`, `SMOKE`, `WARN`, `SEVERE`.\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags to assign to this resource.\n"},"target":{"type":"string","description":"A comma-separated list of the email address or integration endpoint\n(such as PagerDuty or webhook) to notify when the alert status changes. Multiple target types can be in the list.\nAlert target format: ({email}|pd:{pd_key}|target:{alert-target-id}).\n"},"thresholdTargets":{"type":"object","additionalProperties":{"type":"string"},"description":"A string to string map of Targets for severity.\n"}},"type":"object"}},"wavefront:index/alertTarget:AlertTarget":{"description":"Provides a wavefront Alert Target resource. This allows alert targets to created, updated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst testTarget = new wavefront.AlertTarget(\"testTarget\", {\n    contentType: \"application/json\",\n    customHeaders: {\n        Testing: \"true\",\n    },\n    description: \"Test target\",\n    method: \"WEBHOOK\",\n    recipient: \"https://hooks.slack.com/services/test/me\",\n    template: \"{}\",\n    triggers: [\n        \"ALERT_OPENED\",\n        \"ALERT_RESOLVED\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\ntest_target = wavefront.AlertTarget(\"testTarget\",\n    content_type=\"application/json\",\n    custom_headers={\n        \"Testing\": \"true\",\n    },\n    description=\"Test target\",\n    method=\"WEBHOOK\",\n    recipient=\"https://hooks.slack.com/services/test/me\",\n    template=\"{}\",\n    triggers=[\n        \"ALERT_OPENED\",\n        \"ALERT_RESOLVED\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testTarget = new Wavefront.AlertTarget(\"testTarget\", new()\n    {\n        ContentType = \"application/json\",\n        CustomHeaders = \n        {\n            { \"Testing\", \"true\" },\n        },\n        Description = \"Test target\",\n        Method = \"WEBHOOK\",\n        Recipient = \"https://hooks.slack.com/services/test/me\",\n        Template = \"{}\",\n        Triggers = new[]\n        {\n            \"ALERT_OPENED\",\n            \"ALERT_RESOLVED\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewAlertTarget(ctx, \"testTarget\", \u0026wavefront.AlertTargetArgs{\n\t\t\tContentType: pulumi.String(\"application/json\"),\n\t\t\tCustomHeaders: pulumi.StringMap{\n\t\t\t\t\"Testing\": pulumi.String(\"true\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"Test target\"),\n\t\t\tMethod:      pulumi.String(\"WEBHOOK\"),\n\t\t\tRecipient:   pulumi.String(\"https://hooks.slack.com/services/test/me\"),\n\t\t\tTemplate:    pulumi.String(\"{}\"),\n\t\t\tTriggers: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ALERT_OPENED\"),\n\t\t\t\tpulumi.String(\"ALERT_RESOLVED\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.AlertTarget;\nimport com.pulumi.wavefront.AlertTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testTarget = new AlertTarget(\"testTarget\", AlertTargetArgs.builder()        \n            .contentType(\"application/json\")\n            .customHeaders(Map.of(\"Testing\", \"true\"))\n            .description(\"Test target\")\n            .method(\"WEBHOOK\")\n            .recipient(\"https://hooks.slack.com/services/test/me\")\n            .template(\"{}\")\n            .triggers(            \n                \"ALERT_OPENED\",\n                \"ALERT_RESOLVED\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testTarget:\n    type: wavefront:AlertTarget\n    properties:\n      contentType: application/json\n      customHeaders:\n        Testing: 'true'\n      description: Test target\n      method: WEBHOOK\n      recipient: https://hooks.slack.com/services/test/me\n      template: '{}'\n      triggers:\n        - ALERT_OPENED\n        - ALERT_RESOLVED\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAlert Targets can be imported using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/alertTarget:AlertTarget alert_target abcdEFGhijKLMNO\n```\n ","properties":{"contentType":{"type":"string","description":"The value of the `Content-Type` header of the webhook.\n"},"customHeaders":{"type":"object","additionalProperties":{"type":"string"},"description":"A `string-\u003estring` map specifying the custom HTTP header key/value pairs that will be\nsent in the requests with a method of `WEBHOOK`.\n"},"description":{"type":"string","description":"Description describing this alert target.\n"},"emailSubject":{"type":"string","description":"The subject title of an email notification target.\n"},"isHtmlContent":{"type":"boolean","description":"Determine whether the email alert content is sent as HTML or text.\n"},"method":{"type":"string","description":"The notification method used for notification target. One of `WEBHOOK`, `EMAIL`, `PAGERDUTY`.\n"},"name":{"type":"string","description":"The name of the alert target as it is displayed in Wavefront.\n"},"recipient":{"type":"string","description":"The end point for the notification Target.  `EMAIL`: email address. `PAGERDUTY`: PagerDuty\nrouting key. `WEBHOOK`: URL endpoint.\n"},"routes":{"type":"array","items":{"$ref":"#/types/wavefront:index/AlertTargetRoute:AlertTargetRoute"},"description":"List of routing targets that this alert target will notify. See Route\n"},"targetId":{"type":"string","description":"The target ID prefixed with `target:` for interpolating into a Wavefront Alert.\n"},"template":{"type":"string","description":"A mustache template that will form the body of the POST request, email, and summary of the PagerDuty.\n"},"triggers":{"type":"array","items":{"type":"string"},"description":"A list of occurrences on which this webhook will be fired. Valid values are `ALERT_OPENED`,\n`ALERT_UPDATED`, `ALERT_RESOLVED`, `ALERT_MAINTENANCE`, `ALERT_SNOOZED`, `ALERT_NO_DATA`, `ALERT_NO_DATA_RESOLVED`, `ALERT_NO_DATA_MAINTENANCE`.\n"}},"required":["description","name","recipient","targetId","template","triggers"],"inputProperties":{"contentType":{"type":"string","description":"The value of the `Content-Type` header of the webhook.\n"},"customHeaders":{"type":"object","additionalProperties":{"type":"string"},"description":"A `string-\u003estring` map specifying the custom HTTP header key/value pairs that will be\nsent in the requests with a method of `WEBHOOK`.\n"},"description":{"type":"string","description":"Description describing this alert target.\n"},"emailSubject":{"type":"string","description":"The subject title of an email notification target.\n"},"isHtmlContent":{"type":"boolean","description":"Determine whether the email alert content is sent as HTML or text.\n"},"method":{"type":"string","description":"The notification method used for notification target. One of `WEBHOOK`, `EMAIL`, `PAGERDUTY`.\n"},"name":{"type":"string","description":"The name of the alert target as it is displayed in Wavefront.\n"},"recipient":{"type":"string","description":"The end point for the notification Target.  `EMAIL`: email address. `PAGERDUTY`: PagerDuty\nrouting key. `WEBHOOK`: URL endpoint.\n"},"routes":{"type":"array","items":{"$ref":"#/types/wavefront:index/AlertTargetRoute:AlertTargetRoute"},"description":"List of routing targets that this alert target will notify. See Route\n"},"template":{"type":"string","description":"A mustache template that will form the body of the POST request, email, and summary of the PagerDuty.\n"},"triggers":{"type":"array","items":{"type":"string"},"description":"A list of occurrences on which this webhook will be fired. Valid values are `ALERT_OPENED`,\n`ALERT_UPDATED`, `ALERT_RESOLVED`, `ALERT_MAINTENANCE`, `ALERT_SNOOZED`, `ALERT_NO_DATA`, `ALERT_NO_DATA_RESOLVED`, `ALERT_NO_DATA_MAINTENANCE`.\n"}},"requiredInputs":["description","recipient","template","triggers"],"stateInputs":{"description":"Input properties used for looking up and filtering AlertTarget resources.\n","properties":{"contentType":{"type":"string","description":"The value of the `Content-Type` header of the webhook.\n"},"customHeaders":{"type":"object","additionalProperties":{"type":"string"},"description":"A `string-\u003estring` map specifying the custom HTTP header key/value pairs that will be\nsent in the requests with a method of `WEBHOOK`.\n"},"description":{"type":"string","description":"Description describing this alert target.\n"},"emailSubject":{"type":"string","description":"The subject title of an email notification target.\n"},"isHtmlContent":{"type":"boolean","description":"Determine whether the email alert content is sent as HTML or text.\n"},"method":{"type":"string","description":"The notification method used for notification target. One of `WEBHOOK`, `EMAIL`, `PAGERDUTY`.\n"},"name":{"type":"string","description":"The name of the alert target as it is displayed in Wavefront.\n"},"recipient":{"type":"string","description":"The end point for the notification Target.  `EMAIL`: email address. `PAGERDUTY`: PagerDuty\nrouting key. `WEBHOOK`: URL endpoint.\n"},"routes":{"type":"array","items":{"$ref":"#/types/wavefront:index/AlertTargetRoute:AlertTargetRoute"},"description":"List of routing targets that this alert target will notify. See Route\n"},"targetId":{"type":"string","description":"The target ID prefixed with `target:` for interpolating into a Wavefront Alert.\n"},"template":{"type":"string","description":"A mustache template that will form the body of the POST request, email, and summary of the PagerDuty.\n"},"triggers":{"type":"array","items":{"type":"string"},"description":"A list of occurrences on which this webhook will be fired. Valid values are `ALERT_OPENED`,\n`ALERT_UPDATED`, `ALERT_RESOLVED`, `ALERT_MAINTENANCE`, `ALERT_SNOOZED`, `ALERT_NO_DATA`, `ALERT_NO_DATA_RESOLVED`, `ALERT_NO_DATA_MAINTENANCE`.\n"}},"type":"object"}},"wavefront:index/cloudIntegrationAppDynamics:CloudIntegrationAppDynamics":{"description":"Provides a Wavefront Cloud Integration for AppDynamics. This allows AppDynamics cloud integrations to be created,\nupdated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst appDynamics = new wavefront.CloudIntegrationAppDynamics(\"appDynamics\", {\n    controllerName: \"exampleController\",\n    encryptedPassword: \"encryptedPassword\",\n    userName: \"example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\napp_dynamics = wavefront.CloudIntegrationAppDynamics(\"appDynamics\",\n    controller_name=\"exampleController\",\n    encrypted_password=\"encryptedPassword\",\n    user_name=\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var appDynamics = new Wavefront.CloudIntegrationAppDynamics(\"appDynamics\", new()\n    {\n        ControllerName = \"exampleController\",\n        EncryptedPassword = \"encryptedPassword\",\n        UserName = \"example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewCloudIntegrationAppDynamics(ctx, \"appDynamics\", \u0026wavefront.CloudIntegrationAppDynamicsArgs{\n\t\t\tControllerName:    pulumi.String(\"exampleController\"),\n\t\t\tEncryptedPassword: pulumi.String(\"encryptedPassword\"),\n\t\t\tUserName:          pulumi.String(\"example\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.CloudIntegrationAppDynamics;\nimport com.pulumi.wavefront.CloudIntegrationAppDynamicsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var appDynamics = new CloudIntegrationAppDynamics(\"appDynamics\", CloudIntegrationAppDynamicsArgs.builder()        \n            .controllerName(\"exampleController\")\n            .encryptedPassword(\"encryptedPassword\")\n            .userName(\"example\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  appDynamics:\n    type: wavefront:CloudIntegrationAppDynamics\n    properties:\n      controllerName: exampleController\n      encryptedPassword: encryptedPassword\n      userName: example\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAppDynamic Cloud Integrations can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/cloudIntegrationAppDynamics:CloudIntegrationAppDynamics app_dynamics a411c16b-3cf7-4f03-bf11-8ca05aab898d\n```\n ","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"appFilterRegexes":{"type":"array","items":{"type":"string"},"description":"List of regular expressions that an application name must match (case-insensitively)\nin order to be ingested.\n"},"controllerName":{"type":"string","description":"Name of the SaaS controller.\n"},"enableAppInfraMetrics":{"type":"boolean","description":"Boolean flag to control Application Infrastructure metric ingestion.\n"},"enableBackendMetrics":{"type":"boolean","description":"Boolean flag to control Backend metric ingestion.\n"},"enableBusinessTrxMetrics":{"type":"boolean","description":"Boolean flag to control Business Transaction metric ingestion.\n"},"enableErrorMetrics":{"type":"boolean","description":"Boolean flag to control Error metric ingestion.\n"},"enableIndividualNodeMetrics":{"type":"boolean","description":"Boolean flag to control Individual Node metric ingestion.\n"},"enableOverallPerfMetrics":{"type":"boolean","description":"Boolean flag to control Overall Performance metric ingestion.\n"},"enableRollup":{"type":"boolean","description":"Set this to `false` to get separate results for all values within the time range,\nby default it is `true`.\n"},"enableServiceEndpointMetrics":{"type":"boolean","description":"Boolean flag to control Service End point metric ingestion.\n"},"encryptedPassword":{"type":"string","description":"Password for AppDynamics user.\n","secret":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n"},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"},"userName":{"type":"string","description":"Username is a combination of userName and the account name.\n"}},"required":["controllerName","encryptedPassword","name","service","userName"],"inputProperties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"appFilterRegexes":{"type":"array","items":{"type":"string"},"description":"List of regular expressions that an application name must match (case-insensitively)\nin order to be ingested.\n"},"controllerName":{"type":"string","description":"Name of the SaaS controller.\n"},"enableAppInfraMetrics":{"type":"boolean","description":"Boolean flag to control Application Infrastructure metric ingestion.\n"},"enableBackendMetrics":{"type":"boolean","description":"Boolean flag to control Backend metric ingestion.\n"},"enableBusinessTrxMetrics":{"type":"boolean","description":"Boolean flag to control Business Transaction metric ingestion.\n"},"enableErrorMetrics":{"type":"boolean","description":"Boolean flag to control Error metric ingestion.\n"},"enableIndividualNodeMetrics":{"type":"boolean","description":"Boolean flag to control Individual Node metric ingestion.\n"},"enableOverallPerfMetrics":{"type":"boolean","description":"Boolean flag to control Overall Performance metric ingestion.\n"},"enableRollup":{"type":"boolean","description":"Set this to `false` to get separate results for all values within the time range,\nby default it is `true`.\n"},"enableServiceEndpointMetrics":{"type":"boolean","description":"Boolean flag to control Service End point metric ingestion.\n"},"encryptedPassword":{"type":"string","description":"Password for AppDynamics user.\n","secret":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"},"userName":{"type":"string","description":"Username is a combination of userName and the account name.\n"}},"requiredInputs":["controllerName","encryptedPassword","service","userName"],"stateInputs":{"description":"Input properties used for looking up and filtering CloudIntegrationAppDynamics resources.\n","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"appFilterRegexes":{"type":"array","items":{"type":"string"},"description":"List of regular expressions that an application name must match (case-insensitively)\nin order to be ingested.\n"},"controllerName":{"type":"string","description":"Name of the SaaS controller.\n"},"enableAppInfraMetrics":{"type":"boolean","description":"Boolean flag to control Application Infrastructure metric ingestion.\n"},"enableBackendMetrics":{"type":"boolean","description":"Boolean flag to control Backend metric ingestion.\n"},"enableBusinessTrxMetrics":{"type":"boolean","description":"Boolean flag to control Business Transaction metric ingestion.\n"},"enableErrorMetrics":{"type":"boolean","description":"Boolean flag to control Error metric ingestion.\n"},"enableIndividualNodeMetrics":{"type":"boolean","description":"Boolean flag to control Individual Node metric ingestion.\n"},"enableOverallPerfMetrics":{"type":"boolean","description":"Boolean flag to control Overall Performance metric ingestion.\n"},"enableRollup":{"type":"boolean","description":"Set this to `false` to get separate results for all values within the time range,\nby default it is `true`.\n"},"enableServiceEndpointMetrics":{"type":"boolean","description":"Boolean flag to control Service End point metric ingestion.\n"},"encryptedPassword":{"type":"string","description":"Password for AppDynamics user.\n","secret":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"},"userName":{"type":"string","description":"Username is a combination of userName and the account name.\n"}},"type":"object"}},"wavefront:index/cloudIntegrationAwsExternalId:CloudIntegrationAwsExternalId":{"description":"Provides an External ID for use in Amazon Web Services IAM Roles. This allows External IDs to be created and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst externalId = new wavefront.CloudIntegrationAwsExternalId(\"externalId\", {});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexternal_id = wavefront.CloudIntegrationAwsExternalId(\"externalId\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var externalId = new Wavefront.CloudIntegrationAwsExternalId(\"externalId\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewCloudIntegrationAwsExternalId(ctx, \"externalId\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.CloudIntegrationAwsExternalId;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var externalId = new CloudIntegrationAwsExternalId(\"externalId\");\n\n    }\n}\n```\n```yaml\nresources:\n  externalId:\n    type: wavefront:CloudIntegrationAwsExternalId\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nExternal IDs can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/cloudIntegrationAwsExternalId:CloudIntegrationAwsExternalId external_id uGJdkH3k\n```\n ","stateInputs":{"description":"Input properties used for looking up and filtering CloudIntegrationAwsExternalId resources.\n","type":"object"}},"wavefront:index/cloudIntegrationAzure:CloudIntegrationAzure":{"description":"Provides a Wavefront Cloud Integration for Microsoft Azure. This allows Azure cloud integrations to be created,\nupdated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst azureActivityLog = new wavefront.CloudIntegrationAzureActivityLog(\"azureActivityLog\", {\n    clientId: \"client-id2\",\n    clientSecret: \"client-secret2\",\n    tenant: \"my-tenant2\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nazure_activity_log = wavefront.CloudIntegrationAzureActivityLog(\"azureActivityLog\",\n    client_id=\"client-id2\",\n    client_secret=\"client-secret2\",\n    tenant=\"my-tenant2\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var azureActivityLog = new Wavefront.CloudIntegrationAzureActivityLog(\"azureActivityLog\", new()\n    {\n        ClientId = \"client-id2\",\n        ClientSecret = \"client-secret2\",\n        Tenant = \"my-tenant2\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewCloudIntegrationAzureActivityLog(ctx, \"azureActivityLog\", \u0026wavefront.CloudIntegrationAzureActivityLogArgs{\n\t\t\tClientId:     pulumi.String(\"client-id2\"),\n\t\t\tClientSecret: pulumi.String(\"client-secret2\"),\n\t\t\tTenant:       pulumi.String(\"my-tenant2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.CloudIntegrationAzureActivityLog;\nimport com.pulumi.wavefront.CloudIntegrationAzureActivityLogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var azureActivityLog = new CloudIntegrationAzureActivityLog(\"azureActivityLog\", CloudIntegrationAzureActivityLogArgs.builder()        \n            .clientId(\"client-id2\")\n            .clientSecret(\"client-secret2\")\n            .tenant(\"my-tenant2\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  azureActivityLog:\n    type: wavefront:CloudIntegrationAzureActivityLog\n    properties:\n      clientId: client-id2\n      clientSecret: client-secret2\n      tenant: my-tenant2\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAzure Cloud Integrations can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/cloudIntegrationAzure:CloudIntegrationAzure azure a411c16b-3cf7-4f03-bf11-8ca05aab898d\n```\n ","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"categoryFilters":{"type":"array","items":{"type":"string"},"description":"A list of Azure Activity Log categories.\n"},"clientId":{"type":"string","description":"Client ID for an Azure service account within your project.\n"},"clientSecret":{"type":"string","description":"Client secret for an Azure service account within your project.\n","secret":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"metricFilterRegex":{"type":"string","description":"A regular expression that a metric name must match (case-insensitively) in order to be ingested.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"resourceGroupFilters":{"type":"array","items":{"type":"string"},"description":"A list of Azure resource groups from which to pull metrics.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n"},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"},"tenant":{"type":"string","description":"Tenant ID for an Azure service account within your project.\n"}},"required":["clientId","clientSecret","name","service","tenant"],"inputProperties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"categoryFilters":{"type":"array","items":{"type":"string"},"description":"A list of Azure Activity Log categories.\n"},"clientId":{"type":"string","description":"Client ID for an Azure service account within your project.\n"},"clientSecret":{"type":"string","description":"Client secret for an Azure service account within your project.\n","secret":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"metricFilterRegex":{"type":"string","description":"A regular expression that a metric name must match (case-insensitively) in order to be ingested.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"resourceGroupFilters":{"type":"array","items":{"type":"string"},"description":"A list of Azure resource groups from which to pull metrics.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"},"tenant":{"type":"string","description":"Tenant ID for an Azure service account within your project.\n"}},"requiredInputs":["clientId","clientSecret","service","tenant"],"stateInputs":{"description":"Input properties used for looking up and filtering CloudIntegrationAzure resources.\n","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"categoryFilters":{"type":"array","items":{"type":"string"},"description":"A list of Azure Activity Log categories.\n"},"clientId":{"type":"string","description":"Client ID for an Azure service account within your project.\n"},"clientSecret":{"type":"string","description":"Client secret for an Azure service account within your project.\n","secret":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"metricFilterRegex":{"type":"string","description":"A regular expression that a metric name must match (case-insensitively) in order to be ingested.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"resourceGroupFilters":{"type":"array","items":{"type":"string"},"description":"A list of Azure resource groups from which to pull metrics.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"},"tenant":{"type":"string","description":"Tenant ID for an Azure service account within your project.\n"}},"type":"object"}},"wavefront:index/cloudIntegrationAzureActivityLog:CloudIntegrationAzureActivityLog":{"description":"Provides a Wavefront Cloud Integration for Azure Activity Logs. This allows Azure activity log cloud integrations to be created,\nupdated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst azureActivityLog = new wavefront.CloudIntegrationAzureActivityLog(\"azureActivityLog\", {\n    categoryFilters: [\"ADMINISTRATIVE\"],\n    clientId: \"client-id2\",\n    clientSecret: \"client-secret2\",\n    tenant: \"my-tenant2\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nazure_activity_log = wavefront.CloudIntegrationAzureActivityLog(\"azureActivityLog\",\n    category_filters=[\"ADMINISTRATIVE\"],\n    client_id=\"client-id2\",\n    client_secret=\"client-secret2\",\n    tenant=\"my-tenant2\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var azureActivityLog = new Wavefront.CloudIntegrationAzureActivityLog(\"azureActivityLog\", new()\n    {\n        CategoryFilters = new[]\n        {\n            \"ADMINISTRATIVE\",\n        },\n        ClientId = \"client-id2\",\n        ClientSecret = \"client-secret2\",\n        Tenant = \"my-tenant2\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewCloudIntegrationAzureActivityLog(ctx, \"azureActivityLog\", \u0026wavefront.CloudIntegrationAzureActivityLogArgs{\n\t\t\tCategoryFilters: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ADMINISTRATIVE\"),\n\t\t\t},\n\t\t\tClientId:     pulumi.String(\"client-id2\"),\n\t\t\tClientSecret: pulumi.String(\"client-secret2\"),\n\t\t\tTenant:       pulumi.String(\"my-tenant2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.CloudIntegrationAzureActivityLog;\nimport com.pulumi.wavefront.CloudIntegrationAzureActivityLogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var azureActivityLog = new CloudIntegrationAzureActivityLog(\"azureActivityLog\", CloudIntegrationAzureActivityLogArgs.builder()        \n            .categoryFilters(\"ADMINISTRATIVE\")\n            .clientId(\"client-id2\")\n            .clientSecret(\"client-secret2\")\n            .tenant(\"my-tenant2\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  azureActivityLog:\n    type: wavefront:CloudIntegrationAzureActivityLog\n    properties:\n      categoryFilters:\n        - ADMINISTRATIVE\n      clientId: client-id2\n      clientSecret: client-secret2\n      tenant: my-tenant2\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAzure Activity Log Cloud Integrations can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/cloudIntegrationAzureActivityLog:CloudIntegrationAzureActivityLog azure_al a411c16b-3cf7-4f03-bf11-8ca05aab898d\n```\n ","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"categoryFilters":{"type":"array","items":{"type":"string"},"description":"A list of Azure services (such as Microsoft.Compute/virtualMachines) from which to pull metrics.\n"},"clientId":{"type":"string","description":"Client ID for an Azure service account within your project.\n"},"clientSecret":{"type":"string","description":"Client secret for an Azure service account within your project.\n","secret":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n"},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"},"tenant":{"type":"string","description":"Tenant ID for an Azure service account within your project.\n"}},"required":["clientId","clientSecret","name","service","tenant"],"inputProperties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"categoryFilters":{"type":"array","items":{"type":"string"},"description":"A list of Azure services (such as Microsoft.Compute/virtualMachines) from which to pull metrics.\n"},"clientId":{"type":"string","description":"Client ID for an Azure service account within your project.\n"},"clientSecret":{"type":"string","description":"Client secret for an Azure service account within your project.\n","secret":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"},"tenant":{"type":"string","description":"Tenant ID for an Azure service account within your project.\n"}},"requiredInputs":["clientId","clientSecret","service","tenant"],"stateInputs":{"description":"Input properties used for looking up and filtering CloudIntegrationAzureActivityLog resources.\n","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"categoryFilters":{"type":"array","items":{"type":"string"},"description":"A list of Azure services (such as Microsoft.Compute/virtualMachines) from which to pull metrics.\n"},"clientId":{"type":"string","description":"Client ID for an Azure service account within your project.\n"},"clientSecret":{"type":"string","description":"Client secret for an Azure service account within your project.\n","secret":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"},"tenant":{"type":"string","description":"Tenant ID for an Azure service account within your project.\n"}},"type":"object"}},"wavefront:index/cloudIntegrationCloudTrail:CloudIntegrationCloudTrail":{"description":"Provides a Wavefront Cloud Integration for CloudTrail. This allows CloudTrail cloud integrations to be created,\nupdated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst extId = new wavefront.CloudIntegrationAwsExternalId(\"extId\", {});\nconst cloudtrail = new wavefront.CloudIntegrationCloudTrail(\"cloudtrail\", {\n    roleArn: \"arn:aws::1234567:role/example-arn\",\n    externalId: extId.id,\n    region: \"us-west-2\",\n    bucketName: \"example-s3-bucket\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\next_id = wavefront.CloudIntegrationAwsExternalId(\"extId\")\ncloudtrail = wavefront.CloudIntegrationCloudTrail(\"cloudtrail\",\n    role_arn=\"arn:aws::1234567:role/example-arn\",\n    external_id=ext_id.id,\n    region=\"us-west-2\",\n    bucket_name=\"example-s3-bucket\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var extId = new Wavefront.CloudIntegrationAwsExternalId(\"extId\");\n\n    var cloudtrail = new Wavefront.CloudIntegrationCloudTrail(\"cloudtrail\", new()\n    {\n        RoleArn = \"arn:aws::1234567:role/example-arn\",\n        ExternalId = extId.Id,\n        Region = \"us-west-2\",\n        BucketName = \"example-s3-bucket\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\textId, err := wavefront.NewCloudIntegrationAwsExternalId(ctx, \"extId\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = wavefront.NewCloudIntegrationCloudTrail(ctx, \"cloudtrail\", \u0026wavefront.CloudIntegrationCloudTrailArgs{\n\t\t\tRoleArn:    pulumi.String(\"arn:aws::1234567:role/example-arn\"),\n\t\t\tExternalId: extId.ID(),\n\t\t\tRegion:     pulumi.String(\"us-west-2\"),\n\t\t\tBucketName: pulumi.String(\"example-s3-bucket\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.CloudIntegrationAwsExternalId;\nimport com.pulumi.wavefront.CloudIntegrationCloudTrail;\nimport com.pulumi.wavefront.CloudIntegrationCloudTrailArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var extId = new CloudIntegrationAwsExternalId(\"extId\");\n\n        var cloudtrail = new CloudIntegrationCloudTrail(\"cloudtrail\", CloudIntegrationCloudTrailArgs.builder()        \n            .roleArn(\"arn:aws::1234567:role/example-arn\")\n            .externalId(extId.id())\n            .region(\"us-west-2\")\n            .bucketName(\"example-s3-bucket\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  extId:\n    type: wavefront:CloudIntegrationAwsExternalId\n  cloudtrail:\n    type: wavefront:CloudIntegrationCloudTrail\n    properties:\n      roleArn: arn:aws::1234567:role/example-arn\n      externalId: ${extId.id}\n      region: us-west-2\n      bucketName: example-s3-bucket\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCloudTrail Cloud Integrations can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/cloudIntegrationCloudTrail:CloudIntegrationCloudTrail cloudtrail a411c16b-3cf7-4f03-bf11-8ca05aab898d\n```\n ","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"bucketName":{"type":"string","description":"Name of the S3 bucket where CloudTrail logs are stored.\n"},"externalId":{"type":"string","description":"The Role ARN that the customer has created in AWS IAM to allow access to Wavefront.\n"},"filterRule":{"type":"string","description":"Rule to filter CloudTrail log event.\n"},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"prefix":{"type":"string","description":"The common prefix, if any, appended to all CloudTrail log files.\n"},"region":{"type":"string","description":"The AWS region of the S3 bucket where CloudTrail logs are stored.\n"},"roleArn":{"type":"string","description":"The external ID corresponding to the Role ARN.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n"},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"required":["bucketName","externalId","name","region","roleArn","service"],"inputProperties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"bucketName":{"type":"string","description":"Name of the S3 bucket where CloudTrail logs are stored.\n"},"externalId":{"type":"string","description":"The Role ARN that the customer has created in AWS IAM to allow access to Wavefront.\n","willReplaceOnChanges":true},"filterRule":{"type":"string","description":"Rule to filter CloudTrail log event.\n"},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"prefix":{"type":"string","description":"The common prefix, if any, appended to all CloudTrail log files.\n"},"region":{"type":"string","description":"The AWS region of the S3 bucket where CloudTrail logs are stored.\n"},"roleArn":{"type":"string","description":"The external ID corresponding to the Role ARN.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"requiredInputs":["bucketName","externalId","region","roleArn","service"],"stateInputs":{"description":"Input properties used for looking up and filtering CloudIntegrationCloudTrail resources.\n","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"bucketName":{"type":"string","description":"Name of the S3 bucket where CloudTrail logs are stored.\n"},"externalId":{"type":"string","description":"The Role ARN that the customer has created in AWS IAM to allow access to Wavefront.\n","willReplaceOnChanges":true},"filterRule":{"type":"string","description":"Rule to filter CloudTrail log event.\n"},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"prefix":{"type":"string","description":"The common prefix, if any, appended to all CloudTrail log files.\n"},"region":{"type":"string","description":"The AWS region of the S3 bucket where CloudTrail logs are stored.\n"},"roleArn":{"type":"string","description":"The external ID corresponding to the Role ARN.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"type":"object"}},"wavefront:index/cloudIntegrationCloudWatch:CloudIntegrationCloudWatch":{"description":"Provides a Wavefront Cloud Integration for CloudWatch. This allows CloudWatch cloud integrations to be created,\nupdated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst extId = new wavefront.CloudIntegrationAwsExternalId(\"extId\", {});\nconst cloudwatch = new wavefront.CloudIntegrationCloudWatch(\"cloudwatch\", {\n    forceSave: true,\n    roleArn: \"arn:aws::1234567:role/example-arn\",\n    externalId: extId.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\next_id = wavefront.CloudIntegrationAwsExternalId(\"extId\")\ncloudwatch = wavefront.CloudIntegrationCloudWatch(\"cloudwatch\",\n    force_save=True,\n    role_arn=\"arn:aws::1234567:role/example-arn\",\n    external_id=ext_id.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var extId = new Wavefront.CloudIntegrationAwsExternalId(\"extId\");\n\n    var cloudwatch = new Wavefront.CloudIntegrationCloudWatch(\"cloudwatch\", new()\n    {\n        ForceSave = true,\n        RoleArn = \"arn:aws::1234567:role/example-arn\",\n        ExternalId = extId.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\textId, err := wavefront.NewCloudIntegrationAwsExternalId(ctx, \"extId\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = wavefront.NewCloudIntegrationCloudWatch(ctx, \"cloudwatch\", \u0026wavefront.CloudIntegrationCloudWatchArgs{\n\t\t\tForceSave:  pulumi.Bool(true),\n\t\t\tRoleArn:    pulumi.String(\"arn:aws::1234567:role/example-arn\"),\n\t\t\tExternalId: extId.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.CloudIntegrationAwsExternalId;\nimport com.pulumi.wavefront.CloudIntegrationCloudWatch;\nimport com.pulumi.wavefront.CloudIntegrationCloudWatchArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var extId = new CloudIntegrationAwsExternalId(\"extId\");\n\n        var cloudwatch = new CloudIntegrationCloudWatch(\"cloudwatch\", CloudIntegrationCloudWatchArgs.builder()        \n            .forceSave(true)\n            .roleArn(\"arn:aws::1234567:role/example-arn\")\n            .externalId(extId.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  extId:\n    type: wavefront:CloudIntegrationAwsExternalId\n  cloudwatch:\n    type: wavefront:CloudIntegrationCloudWatch\n    properties:\n      forceSave: true\n      roleArn: arn:aws::1234567:role/example-arn\n      externalId: ${extId.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCloudWatch Cloud Integrations can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/cloudIntegrationCloudWatch:CloudIntegrationCloudWatch cloudwatch a411c16b-3cf7-4f03-bf11-8ca05aab898d\n```\n ","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"externalId":{"type":"string","description":"The Role ARN that the customer has created in AWS IAM to allow access to Wavefront.\n"},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"instanceSelectionTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A string-\u003estring map allow list of instance tag-value pairs (in AWS).\nIf the instance's AWS tags match this allow list, CloudWatch data about this instance is ingested.\nMultiple entries are OR'ed.\n"},"metricFilterRegex":{"type":"string","description":"A regular expression that a CloudWatch metric name must match (case-insensitively) in order to be ingested.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"namespaces":{"type":"array","items":{"type":"string"},"description":"A list of namespaces that limit what we query from CloudWatch.\n"},"pointTagFilterRegex":{"type":"string","description":"A regular expression that AWS tag key name must match (case-insensitively)\nin order to be ingested.\n"},"roleArn":{"type":"string","description":"The external ID corresponding to the Role ARN.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n"},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"},"volumeSelectionTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A string-\u003estring map of allow list of volume tag-value pairs (in AWS).\nIf the volume's AWS tags match this allow list, CloudWatch data about this volume is ingested.\nMultiple entries are OR'ed.\n"}},"required":["externalId","name","roleArn","service"],"inputProperties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"externalId":{"type":"string","description":"The Role ARN that the customer has created in AWS IAM to allow access to Wavefront.\n","willReplaceOnChanges":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"instanceSelectionTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A string-\u003estring map allow list of instance tag-value pairs (in AWS).\nIf the instance's AWS tags match this allow list, CloudWatch data about this instance is ingested.\nMultiple entries are OR'ed.\n"},"metricFilterRegex":{"type":"string","description":"A regular expression that a CloudWatch metric name must match (case-insensitively) in order to be ingested.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"namespaces":{"type":"array","items":{"type":"string"},"description":"A list of namespaces that limit what we query from CloudWatch.\n"},"pointTagFilterRegex":{"type":"string","description":"A regular expression that AWS tag key name must match (case-insensitively)\nin order to be ingested.\n"},"roleArn":{"type":"string","description":"The external ID corresponding to the Role ARN.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"},"volumeSelectionTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A string-\u003estring map of allow list of volume tag-value pairs (in AWS).\nIf the volume's AWS tags match this allow list, CloudWatch data about this volume is ingested.\nMultiple entries are OR'ed.\n"}},"requiredInputs":["externalId","roleArn","service"],"stateInputs":{"description":"Input properties used for looking up and filtering CloudIntegrationCloudWatch resources.\n","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"externalId":{"type":"string","description":"The Role ARN that the customer has created in AWS IAM to allow access to Wavefront.\n","willReplaceOnChanges":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"instanceSelectionTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A string-\u003estring map allow list of instance tag-value pairs (in AWS).\nIf the instance's AWS tags match this allow list, CloudWatch data about this instance is ingested.\nMultiple entries are OR'ed.\n"},"metricFilterRegex":{"type":"string","description":"A regular expression that a CloudWatch metric name must match (case-insensitively) in order to be ingested.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"namespaces":{"type":"array","items":{"type":"string"},"description":"A list of namespaces that limit what we query from CloudWatch.\n"},"pointTagFilterRegex":{"type":"string","description":"A regular expression that AWS tag key name must match (case-insensitively)\nin order to be ingested.\n"},"roleArn":{"type":"string","description":"The external ID corresponding to the Role ARN.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"},"volumeSelectionTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A string-\u003estring map of allow list of volume tag-value pairs (in AWS).\nIf the volume's AWS tags match this allow list, CloudWatch data about this volume is ingested.\nMultiple entries are OR'ed.\n"}},"type":"object"}},"wavefront:index/cloudIntegrationEc2:CloudIntegrationEc2":{"description":"Provides a Wavefront Cloud Integration for EC2. This allows EC2 cloud integrations to be created,\nupdated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst extId = new wavefront.CloudIntegrationAwsExternalId(\"extId\", {});\nconst ec2 = new wavefront.CloudIntegrationEc2(\"ec2\", {\n    roleArn: \"arn:aws::1234567:role/example-arn\",\n    externalId: extId.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\next_id = wavefront.CloudIntegrationAwsExternalId(\"extId\")\nec2 = wavefront.CloudIntegrationEc2(\"ec2\",\n    role_arn=\"arn:aws::1234567:role/example-arn\",\n    external_id=ext_id.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var extId = new Wavefront.CloudIntegrationAwsExternalId(\"extId\");\n\n    var ec2 = new Wavefront.CloudIntegrationEc2(\"ec2\", new()\n    {\n        RoleArn = \"arn:aws::1234567:role/example-arn\",\n        ExternalId = extId.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\textId, err := wavefront.NewCloudIntegrationAwsExternalId(ctx, \"extId\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = wavefront.NewCloudIntegrationEc2(ctx, \"ec2\", \u0026wavefront.CloudIntegrationEc2Args{\n\t\t\tRoleArn:    pulumi.String(\"arn:aws::1234567:role/example-arn\"),\n\t\t\tExternalId: extId.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.CloudIntegrationAwsExternalId;\nimport com.pulumi.wavefront.CloudIntegrationEc2;\nimport com.pulumi.wavefront.CloudIntegrationEc2Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var extId = new CloudIntegrationAwsExternalId(\"extId\");\n\n        var ec2 = new CloudIntegrationEc2(\"ec2\", CloudIntegrationEc2Args.builder()        \n            .roleArn(\"arn:aws::1234567:role/example-arn\")\n            .externalId(extId.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  extId:\n    type: wavefront:CloudIntegrationAwsExternalId\n  ec2:\n    type: wavefront:CloudIntegrationEc2\n    properties:\n      roleArn: arn:aws::1234567:role/example-arn\n      externalId: ${extId.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nEC2 Cloud Integrations can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/cloudIntegrationEc2:CloudIntegrationEc2 ec2 a411c16b-3cf7-4f03-bf11-8ca05aab898d\n```\n ","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"externalId":{"type":"string","description":"The Role ARN that the customer has created in AWS IAM to allow access to Wavefront.\n"},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"hostnameTags":{"type":"array","items":{"type":"string"},"description":"A list of AWS instance tags to use as the `source` name\nin a series. Default is `[\"hostname\", \"host\", \"name\"]`. If no tag in the list is found, the series source\nis set to the instance id.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"roleArn":{"type":"string","description":"The external ID corresponding to the Role ARN.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n"},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"required":["externalId","name","roleArn","service"],"inputProperties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"externalId":{"type":"string","description":"The Role ARN that the customer has created in AWS IAM to allow access to Wavefront.\n","willReplaceOnChanges":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"hostnameTags":{"type":"array","items":{"type":"string"},"description":"A list of AWS instance tags to use as the `source` name\nin a series. Default is `[\"hostname\", \"host\", \"name\"]`. If no tag in the list is found, the series source\nis set to the instance id.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"roleArn":{"type":"string","description":"The external ID corresponding to the Role ARN.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"requiredInputs":["externalId","roleArn","service"],"stateInputs":{"description":"Input properties used for looking up and filtering CloudIntegrationEc2 resources.\n","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"externalId":{"type":"string","description":"The Role ARN that the customer has created in AWS IAM to allow access to Wavefront.\n","willReplaceOnChanges":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"hostnameTags":{"type":"array","items":{"type":"string"},"description":"A list of AWS instance tags to use as the `source` name\nin a series. Default is `[\"hostname\", \"host\", \"name\"]`. If no tag in the list is found, the series source\nis set to the instance id.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"roleArn":{"type":"string","description":"The external ID corresponding to the Role ARN.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"type":"object"}},"wavefront:index/cloudIntegrationGcp:CloudIntegrationGcp":{"description":"Provides a Wavefront Cloud Integration for Google Cloud Platform. This allows Google Cloud Platform cloud\nintegrations to be created, updated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst gcp = new wavefront.CloudIntegrationGcp(\"gcp\", {\n    jsonKey: `{...your gcp key ...}\n\n`,\n    projectId: \"example-gcp-project\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\ngcp = wavefront.CloudIntegrationGcp(\"gcp\",\n    json_key=\"\"\"{...your gcp key ...}\n\n\"\"\",\n    project_id=\"example-gcp-project\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var gcp = new Wavefront.CloudIntegrationGcp(\"gcp\", new()\n    {\n        JsonKey = @\"{...your gcp key ...}\n\n\",\n        ProjectId = \"example-gcp-project\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewCloudIntegrationGcp(ctx, \"gcp\", \u0026wavefront.CloudIntegrationGcpArgs{\n\t\t\tJsonKey:   pulumi.String(\"{...your gcp key ...}\\n\\n\"),\n\t\t\tProjectId: pulumi.String(\"example-gcp-project\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.CloudIntegrationGcp;\nimport com.pulumi.wavefront.CloudIntegrationGcpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var gcp = new CloudIntegrationGcp(\"gcp\", CloudIntegrationGcpArgs.builder()        \n            .jsonKey(\"\"\"\n{...your gcp key ...}\n\n            \"\"\")\n            .projectId(\"example-gcp-project\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  gcp:\n    type: wavefront:CloudIntegrationGcp\n    properties:\n      jsonKey: |+\n        {...your gcp key ...}\n\n      projectId: example-gcp-project\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nGCP Cloud Integrations can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/cloudIntegrationGcp:CloudIntegrationGcp gcp a411c16b-3cf7-4f03-bf11-8ca05aab898d\n```\n ","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"categories":{"type":"array","items":{"type":"string"},"description":"A list of Google Cloud Platform (GCP) services. Valid values are `APPENGINE`,\n`BIGQUERY`, `BIGTABLE`, `CLOUDFUNCTIONS`, `CLOUDIOT`, `CLOUDSQL`, `CLOUDTASKS`, `COMPUTE`, `CONTAINER`,\n`DATAFLOW`, `DATAPROC`, `DATASTORE`, `FIREBASEDATABASE`, `FIREBASEHOSTING`, `FIRESTORE`, `INTERCONNECT`,\n`LOADBALANCING`, `LOGGING`, `ML`, `MONITORING`, `PUBSUB`, `REDIS`, `ROUTER`, `SERVICERUNTIME`, `SPANNER`, `STORAGE`,\n`TPU`, and `VPN`.\n"},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"jsonKey":{"type":"string","description":"Private key for a Google Cloud Platform (GCP) service account within your project.\nThe account must have at least Viewer permissions. This key must be in the JSON format generated by GCP.\n","secret":true},"metricFilterRegex":{"type":"string","description":"A regular expression that a metric name must match (case-insensitively) in order to be ingested.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"projectId":{"type":"string","description":"The Google Cloud Platform (GCP) Project ID.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n"},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"required":["jsonKey","name","projectId","service"],"inputProperties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"categories":{"type":"array","items":{"type":"string"},"description":"A list of Google Cloud Platform (GCP) services. Valid values are `APPENGINE`,\n`BIGQUERY`, `BIGTABLE`, `CLOUDFUNCTIONS`, `CLOUDIOT`, `CLOUDSQL`, `CLOUDTASKS`, `COMPUTE`, `CONTAINER`,\n`DATAFLOW`, `DATAPROC`, `DATASTORE`, `FIREBASEDATABASE`, `FIREBASEHOSTING`, `FIRESTORE`, `INTERCONNECT`,\n`LOADBALANCING`, `LOGGING`, `ML`, `MONITORING`, `PUBSUB`, `REDIS`, `ROUTER`, `SERVICERUNTIME`, `SPANNER`, `STORAGE`,\n`TPU`, and `VPN`.\n"},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"jsonKey":{"type":"string","description":"Private key for a Google Cloud Platform (GCP) service account within your project.\nThe account must have at least Viewer permissions. This key must be in the JSON format generated by GCP.\n","secret":true},"metricFilterRegex":{"type":"string","description":"A regular expression that a metric name must match (case-insensitively) in order to be ingested.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"projectId":{"type":"string","description":"The Google Cloud Platform (GCP) Project ID.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"requiredInputs":["jsonKey","projectId","service"],"stateInputs":{"description":"Input properties used for looking up and filtering CloudIntegrationGcp resources.\n","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"categories":{"type":"array","items":{"type":"string"},"description":"A list of Google Cloud Platform (GCP) services. Valid values are `APPENGINE`,\n`BIGQUERY`, `BIGTABLE`, `CLOUDFUNCTIONS`, `CLOUDIOT`, `CLOUDSQL`, `CLOUDTASKS`, `COMPUTE`, `CONTAINER`,\n`DATAFLOW`, `DATAPROC`, `DATASTORE`, `FIREBASEDATABASE`, `FIREBASEHOSTING`, `FIRESTORE`, `INTERCONNECT`,\n`LOADBALANCING`, `LOGGING`, `ML`, `MONITORING`, `PUBSUB`, `REDIS`, `ROUTER`, `SERVICERUNTIME`, `SPANNER`, `STORAGE`,\n`TPU`, and `VPN`.\n"},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"jsonKey":{"type":"string","description":"Private key for a Google Cloud Platform (GCP) service account within your project.\nThe account must have at least Viewer permissions. This key must be in the JSON format generated by GCP.\n","secret":true},"metricFilterRegex":{"type":"string","description":"A regular expression that a metric name must match (case-insensitively) in order to be ingested.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"projectId":{"type":"string","description":"The Google Cloud Platform (GCP) Project ID.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"type":"object"}},"wavefront:index/cloudIntegrationGcpBilling:CloudIntegrationGcpBilling":{"description":"Provides a Wavefront Cloud Integration for Google Cloud Billing. This allows GCP Billing cloud integrations to be created,\nupdated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst gcpBilling = new wavefront.CloudIntegrationGcpBilling(\"gcpBilling\", {\n    apiKey: \"example-api-key\",\n    jsonKey: `{...your gcp key ...}\n\n`,\n    projectId: \"example-gcp-project\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\ngcp_billing = wavefront.CloudIntegrationGcpBilling(\"gcpBilling\",\n    api_key=\"example-api-key\",\n    json_key=\"\"\"{...your gcp key ...}\n\n\"\"\",\n    project_id=\"example-gcp-project\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var gcpBilling = new Wavefront.CloudIntegrationGcpBilling(\"gcpBilling\", new()\n    {\n        ApiKey = \"example-api-key\",\n        JsonKey = @\"{...your gcp key ...}\n\n\",\n        ProjectId = \"example-gcp-project\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewCloudIntegrationGcpBilling(ctx, \"gcpBilling\", \u0026wavefront.CloudIntegrationGcpBillingArgs{\n\t\t\tApiKey:    pulumi.String(\"example-api-key\"),\n\t\t\tJsonKey:   pulumi.String(\"{...your gcp key ...}\\n\\n\"),\n\t\t\tProjectId: pulumi.String(\"example-gcp-project\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.CloudIntegrationGcpBilling;\nimport com.pulumi.wavefront.CloudIntegrationGcpBillingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var gcpBilling = new CloudIntegrationGcpBilling(\"gcpBilling\", CloudIntegrationGcpBillingArgs.builder()        \n            .apiKey(\"example-api-key\")\n            .jsonKey(\"\"\"\n{...your gcp key ...}\n\n            \"\"\")\n            .projectId(\"example-gcp-project\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  gcpBilling:\n    type: wavefront:CloudIntegrationGcpBilling\n    properties:\n      apiKey: example-api-key\n      jsonKey: |+\n        {...your gcp key ...}\n\n      projectId: example-gcp-project\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nGCP Billing Cloud Integrations can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/cloudIntegrationGcpBilling:CloudIntegrationGcpBilling gcp_billing a411c16b-3cf7-4f03-bf11-8ca05aab898d\n```\n ","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"apiKey":{"type":"string","description":"API key for Google Cloud Platform (GCP).\n","secret":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"jsonKey":{"type":"string","description":"Private key for a Google Cloud Platform (GCP) service account within your project.\nThe account must have at least Viewer permissions. This key must be in the JSON format generated by GCP.\n","secret":true},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"projectId":{"type":"string","description":"The Google Cloud Platform (GCP) Project ID.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n"},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"required":["apiKey","jsonKey","name","projectId","service"],"inputProperties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"apiKey":{"type":"string","description":"API key for Google Cloud Platform (GCP).\n","secret":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"jsonKey":{"type":"string","description":"Private key for a Google Cloud Platform (GCP) service account within your project.\nThe account must have at least Viewer permissions. This key must be in the JSON format generated by GCP.\n","secret":true},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"projectId":{"type":"string","description":"The Google Cloud Platform (GCP) Project ID.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"requiredInputs":["apiKey","jsonKey","projectId","service"],"stateInputs":{"description":"Input properties used for looking up and filtering CloudIntegrationGcpBilling resources.\n","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"apiKey":{"type":"string","description":"API key for Google Cloud Platform (GCP).\n","secret":true},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"jsonKey":{"type":"string","description":"Private key for a Google Cloud Platform (GCP) service account within your project.\nThe account must have at least Viewer permissions. This key must be in the JSON format generated by GCP.\n","secret":true},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"projectId":{"type":"string","description":"The Google Cloud Platform (GCP) Project ID.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"type":"object"}},"wavefront:index/cloudIntegrationNewRelic:CloudIntegrationNewRelic":{"description":"Provides a Wavefront Cloud Integration for New Relic. This allows New Relic cloud integrations to be created,\nupdated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst newrelic = new wavefront.CloudIntegrationNewRelic(\"newrelic\", {apiKey: \"example-api-key\"});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nnewrelic = wavefront.CloudIntegrationNewRelic(\"newrelic\", api_key=\"example-api-key\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var newrelic = new Wavefront.CloudIntegrationNewRelic(\"newrelic\", new()\n    {\n        ApiKey = \"example-api-key\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewCloudIntegrationNewRelic(ctx, \"newrelic\", \u0026wavefront.CloudIntegrationNewRelicArgs{\n\t\t\tApiKey: pulumi.String(\"example-api-key\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.CloudIntegrationNewRelic;\nimport com.pulumi.wavefront.CloudIntegrationNewRelicArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var newrelic = new CloudIntegrationNewRelic(\"newrelic\", CloudIntegrationNewRelicArgs.builder()        \n            .apiKey(\"example-api-key\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  newrelic:\n    type: wavefront:CloudIntegrationNewRelic\n    properties:\n      apiKey: example-api-key\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nNewRelic Integrations can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/cloudIntegrationNewRelic:CloudIntegrationNewRelic newrelic a411c16b-3cf7-4f03-bf11-8ca05aab898d\n```\n ","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"apiKey":{"type":"string","description":"New Relic REST API key.\n","secret":true},"appFilterRegex":{"type":"string","description":"A regular expression that an application name must match (case-insensitively) in order to collect metrics.\n"},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"hostFilterRegex":{"type":"string","description":"A regular expression that a host name must match (case-insensitively) in order to collect metrics.\n"},"metricFilters":{"type":"array","items":{"$ref":"#/types/wavefront:index/CloudIntegrationNewRelicMetricFilter:CloudIntegrationNewRelicMetricFilter"},"description":"See Metric Filter.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n"},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"required":["apiKey","name","service"],"inputProperties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"apiKey":{"type":"string","description":"New Relic REST API key.\n","secret":true},"appFilterRegex":{"type":"string","description":"A regular expression that an application name must match (case-insensitively) in order to collect metrics.\n"},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"hostFilterRegex":{"type":"string","description":"A regular expression that a host name must match (case-insensitively) in order to collect metrics.\n"},"metricFilters":{"type":"array","items":{"$ref":"#/types/wavefront:index/CloudIntegrationNewRelicMetricFilter:CloudIntegrationNewRelicMetricFilter"},"description":"See Metric Filter.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"requiredInputs":["apiKey","service"],"stateInputs":{"description":"Input properties used for looking up and filtering CloudIntegrationNewRelic resources.\n","properties":{"additionalTags":{"type":"object","additionalProperties":{"type":"string"},"description":"A list of point tag key-values to add to every point ingested using this integration.\n"},"apiKey":{"type":"string","description":"New Relic REST API key.\n","secret":true},"appFilterRegex":{"type":"string","description":"A regular expression that an application name must match (case-insensitively) in order to collect metrics.\n"},"forceSave":{"type":"boolean","description":"Forces this resource to save, even if errors are present.\n"},"hostFilterRegex":{"type":"string","description":"A regular expression that a host name must match (case-insensitively) in order to collect metrics.\n"},"metricFilters":{"type":"array","items":{"$ref":"#/types/wavefront:index/CloudIntegrationNewRelicMetricFilter:CloudIntegrationNewRelicMetricFilter"},"description":"See Metric Filter.\n"},"name":{"type":"string","description":"The human-readable name of this integration.\n"},"service":{"type":"string","description":"A value denoting which cloud service this service integrates with.\n","willReplaceOnChanges":true},"serviceRefreshRateInMinutes":{"type":"integer","description":"How often, in minutes, to refresh the service.\n"}},"type":"object"}},"wavefront:index/dashboard:Dashboard":{"description":"Provides a Wavefront Dashboard resource. This allows dashboards to be created, updated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.User;\nimport com.pulumi.wavefront.UserArgs;\nimport com.pulumi.wavefront.Dashboard;\nimport com.pulumi.wavefront.DashboardArgs;\nimport com.pulumi.wavefront.inputs.DashboardSectionArgs;\nimport com.pulumi.wavefront.inputs.DashboardParameterDetailArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var basic = new User(\"basic\", UserArgs.builder()        \n            .email(\"test+tftesting@example.com\")\n            .groups(            \n                \"agent_management\",\n                \"alerts_management\")\n            .build());\n\n        var testDashboard = new Dashboard(\"testDashboard\", DashboardArgs.builder()        \n            .description(\"testing, testing\")\n            .url(\"tftestcreate\")\n            .displaySectionTableOfContents(true)\n            .displayQueryParameters(true)\n            .canViews(basic.id())\n            .sections(DashboardSectionArgs.builder()\n                .name(\"section 1\")\n                .rows(DashboardSectionRowArgs.builder()\n                    .charts(DashboardSectionRowChartArgs.builder()\n                        .name(\"chart 1\")\n                        .description(\"chart number 1\")\n                        .units(\"something per unit\")\n                        .sources(DashboardSectionRowChartSourceArgs.builder()\n                            .name(\"source name\")\n                            .query(\"ts()\")\n                            .build())\n                        .chartSetting(DashboardSectionRowChartChartSettingArgs.builder()\n                            .type(\"linear\")\n                            .build())\n                        .summarization(\"MEAN\")\n                        .build())\n                    .build())\n                .build())\n            .parameterDetails(DashboardParameterDetailArgs.builder()\n                .name(\"param1\")\n                .label(\"param1\")\n                .defaultValue(\"Label\")\n                .hideFromView(false)\n                .parameterType(\"SIMPLE\")\n                .valuesToReadableStrings(Map.of(\"Label\", \"test\"))\n                .build())\n            .tags(            \n                \"b\",\n                \"terraform\",\n                \"a\",\n                \"test\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  basic:\n    type: wavefront:User\n    properties:\n      email: test+tftesting@example.com\n      groups:\n        - agent_management\n        - alerts_management\n  testDashboard:\n    type: wavefront:Dashboard\n    properties:\n      description: testing, testing\n      url: tftestcreate\n      displaySectionTableOfContents: true\n      displayQueryParameters: true\n      canViews:\n        - ${basic.id}\n      sections:\n        - name: section 1\n          rows:\n            - charts:\n                - name: chart 1\n                  description: chart number 1\n                  units: something per unit\n                  sources:\n                    - name: source name\n                      query: ts()\n                  chartSetting:\n                    type: linear\n                  summarization: MEAN\n      parameterDetails:\n        - name: param1\n          label: param1\n          defaultValue: Label\n          hideFromView: false\n          parameterType: SIMPLE\n          valuesToReadableStrings:\n            Label: test\n      tags:\n        - b\n        - terraform\n        - a\n        - test\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nDashboards can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/dashboard:Dashboard dashboard tftestimport\n```\n ","properties":{"canModifies":{"type":"array","items":{"type":"string"},"description":"A list of users/groups/roles that can modify the dashboard.\n"},"canViews":{"type":"array","items":{"type":"string"},"description":"A list of users/groups/roles that can view the dashboard.\n"},"description":{"type":"string","description":"Human-readable description of the dashboard.\n"},"displayQueryParameters":{"type":"boolean","description":"Whether the dashboard parameters section is opened by default when the dashboard\nis shown.\n"},"displaySectionTableOfContents":{"type":"boolean","description":"Whether the \"pills\" quick-linked the sections of the dashboard are\ndisplayed by default when the dashboard is shown.\n"},"eventFilterType":{"type":"string","description":"How charts belonging to this dashboard should display events. `BYCHART` is default if\nunspecified. Valid options are: `BYCHART`, `AUTOMATIC`, `ALL`, `NONE`, `BYDASHBOARD`, and `BYCHARTANDDASHBOARD`.\n"},"name":{"type":"string","description":"Name of the dashboard.\n"},"parameterDetails":{"type":"array","items":{"$ref":"#/types/wavefront:index/DashboardParameterDetail:DashboardParameterDetail"},"description":"The current JSON representation of dashboard parameters. See parameter details.\n"},"sections":{"type":"array","items":{"$ref":"#/types/wavefront:index/DashboardSection:DashboardSection"},"description":"Dashboard chart sections. See dashboard sections.\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags to assign to this resource.\n"},"url":{"type":"string","description":"Unique identifier, also a URL slug of the dashboard.\n"}},"required":["canModifies","description","name","sections","tags","url"],"inputProperties":{"canModifies":{"type":"array","items":{"type":"string"},"description":"A list of users/groups/roles that can modify the dashboard.\n"},"canViews":{"type":"array","items":{"type":"string"},"description":"A list of users/groups/roles that can view the dashboard.\n"},"description":{"type":"string","description":"Human-readable description of the dashboard.\n"},"displayQueryParameters":{"type":"boolean","description":"Whether the dashboard parameters section is opened by default when the dashboard\nis shown.\n"},"displaySectionTableOfContents":{"type":"boolean","description":"Whether the \"pills\" quick-linked the sections of the dashboard are\ndisplayed by default when the dashboard is shown.\n"},"eventFilterType":{"type":"string","description":"How charts belonging to this dashboard should display events. `BYCHART` is default if\nunspecified. Valid options are: `BYCHART`, `AUTOMATIC`, `ALL`, `NONE`, `BYDASHBOARD`, and `BYCHARTANDDASHBOARD`.\n"},"name":{"type":"string","description":"Name of the dashboard.\n"},"parameterDetails":{"type":"array","items":{"$ref":"#/types/wavefront:index/DashboardParameterDetail:DashboardParameterDetail"},"description":"The current JSON representation of dashboard parameters. See parameter details.\n"},"sections":{"type":"array","items":{"$ref":"#/types/wavefront:index/DashboardSection:DashboardSection"},"description":"Dashboard chart sections. See dashboard sections.\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags to assign to this resource.\n"},"url":{"type":"string","description":"Unique identifier, also a URL slug of the dashboard.\n"}},"requiredInputs":["description","sections","tags","url"],"stateInputs":{"description":"Input properties used for looking up and filtering Dashboard resources.\n","properties":{"canModifies":{"type":"array","items":{"type":"string"},"description":"A list of users/groups/roles that can modify the dashboard.\n"},"canViews":{"type":"array","items":{"type":"string"},"description":"A list of users/groups/roles that can view the dashboard.\n"},"description":{"type":"string","description":"Human-readable description of the dashboard.\n"},"displayQueryParameters":{"type":"boolean","description":"Whether the dashboard parameters section is opened by default when the dashboard\nis shown.\n"},"displaySectionTableOfContents":{"type":"boolean","description":"Whether the \"pills\" quick-linked the sections of the dashboard are\ndisplayed by default when the dashboard is shown.\n"},"eventFilterType":{"type":"string","description":"How charts belonging to this dashboard should display events. `BYCHART` is default if\nunspecified. Valid options are: `BYCHART`, `AUTOMATIC`, `ALL`, `NONE`, `BYDASHBOARD`, and `BYCHARTANDDASHBOARD`.\n"},"name":{"type":"string","description":"Name of the dashboard.\n"},"parameterDetails":{"type":"array","items":{"$ref":"#/types/wavefront:index/DashboardParameterDetail:DashboardParameterDetail"},"description":"The current JSON representation of dashboard parameters. See parameter details.\n"},"sections":{"type":"array","items":{"$ref":"#/types/wavefront:index/DashboardSection:DashboardSection"},"description":"Dashboard chart sections. See dashboard sections.\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags to assign to this resource.\n"},"url":{"type":"string","description":"Unique identifier, also a URL slug of the dashboard.\n"}},"type":"object"}},"wavefront:index/dashboardJson:DashboardJson":{"description":"Provides a Wavefront Dashboard JSON resource. This allows dashboards to be created, updated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst testDashboardJson = new wavefront.DashboardJson(\"testDashboardJson\", {dashboardJson: `  {\n    \"acl\": {\n      \"canModify\": [\n        \"group-uuid\",\n        \"role-uuid\"\n      ],\n      \"canView\": [\n        \"group-uuid\",\n        \"role-uuid\"\n      ]\n    },\n    \"name\": \"Terraform Test Dashboard Json\",\n    \"description\": \"a\",\n    \"eventFilterType\": \"BYCHART\",\n    \"eventQuery\": \"\",\n    \"defaultTimeWindow\": \"\",\n    \"url\": \"tftestimport\",\n    \"displayDescription\": false,\n    \"displaySectionTableOfContents\": true,\n    \"displayQueryParameters\": false,\n    \"sections\": [\n      {\n        \"name\": \"section 1\",\n        \"rows\": [\n          {\n            \"charts\": [\n              {\n                \"name\": \"chart 1\",\n                \"sources\": [\n                  {\n                    \"name\": \"source 1\",\n                    \"query\": \"ts()\",\n                    \"scatterPlotSource\": \"Y\",\n                    \"querybuilderEnabled\": false,\n                    \"sourceDescription\": \"\"\n                  }\n                ],\n                \"units\": \"someunit\",\n                \"base\": 0,\n                \"noDefaultEvents\": false,\n                \"interpolatePoints\": false,\n                \"includeObsoleteMetrics\": false,\n                \"description\": \"This is chart 1, showing something\",\n                \"chartSettings\": {\n                  \"type\": \"markdown-widget\",\n                  \"max\": 100,\n                  \"expectedDataSpacing\": 120,\n                  \"windowing\": \"full\",\n                  \"windowSize\": 10,\n                  \"autoColumnTags\": false,\n                  \"columnTags\": \"deprecated\",\n                  \"tagMode\": \"all\",\n                  \"numTags\": 2,\n                  \"customTags\": [\n                    \"tag1\",\n                    \"tag2\"\n                  ],\n                  \"groupBySource\": true,\n                  \"y1Max\": 100,\n                  \"y1Units\": \"units\",\n                  \"y0ScaleSIBy1024\": true,\n                  \"y1ScaleSIBy1024\": true,\n                  \"y0UnitAutoscaling\": true,\n                  \"y1UnitAutoscaling\": true,\n                  \"fixedLegendEnabled\": true,\n                  \"fixedLegendUseRawStats\": true,\n                  \"fixedLegendPosition\": \"RIGHT\",\n                  \"fixedLegendDisplayStats\": [\n                    \"stat1\",\n                    \"stat2\"\n                  ],\n                  \"fixedLegendFilterSort\": \"TOP\",\n                  \"fixedLegendFilterLimit\": 1,\n                  \"fixedLegendFilterField\": \"CURRENT\",\n                  \"plainMarkdownContent\": \"markdown content\"\n                },\n                \"chartAttributes\": {\n                  \"dashboardLinks\": {\n                    \"*\": {\n                      \"variables\": {\n                        \"xxx\": \"xxx\"\n                      },\n                      \"destination\": \"/dashboards/xxxx\"\n                    }\n                  }\n                },\n                \"summarization\": \"MEAN\"\n              }\n            ],\n            \"heightFactor\": 50\n          }\n        ]\n      }\n    ],\n    \"parameterDetails\": {\n      \"param\": {\n        \"hideFromView\": false,\n        \"description\": null,\n        \"allowAll\": null,\n        \"tagKey\": null,\n        \"queryValue\": null,\n        \"dynamicFieldType\": null,\n        \"reverseDynSort\": null,\n        \"parameterType\": \"SIMPLE\",\n        \"label\": \"test\",\n        \"defaultValue\": \"Label\",\n        \"valuesToReadableStrings\": {\n          \"Label\": \"test\"\n        },\n        \"selectedLabel\": \"Label\",\n        \"value\": \"test\"\n      }\n    },\n    \"tags\": {\n      \"customerTags\": [\n        \"terraform\"\n      ]\n    }\n  }\n\n`});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\ntest_dashboard_json = wavefront.DashboardJson(\"testDashboardJson\", dashboard_json=\"\"\"  {\n    \"acl\": {\n      \"canModify\": [\n        \"group-uuid\",\n        \"role-uuid\"\n      ],\n      \"canView\": [\n        \"group-uuid\",\n        \"role-uuid\"\n      ]\n    },\n    \"name\": \"Terraform Test Dashboard Json\",\n    \"description\": \"a\",\n    \"eventFilterType\": \"BYCHART\",\n    \"eventQuery\": \"\",\n    \"defaultTimeWindow\": \"\",\n    \"url\": \"tftestimport\",\n    \"displayDescription\": false,\n    \"displaySectionTableOfContents\": true,\n    \"displayQueryParameters\": false,\n    \"sections\": [\n      {\n        \"name\": \"section 1\",\n        \"rows\": [\n          {\n            \"charts\": [\n              {\n                \"name\": \"chart 1\",\n                \"sources\": [\n                  {\n                    \"name\": \"source 1\",\n                    \"query\": \"ts()\",\n                    \"scatterPlotSource\": \"Y\",\n                    \"querybuilderEnabled\": false,\n                    \"sourceDescription\": \"\"\n                  }\n                ],\n                \"units\": \"someunit\",\n                \"base\": 0,\n                \"noDefaultEvents\": false,\n                \"interpolatePoints\": false,\n                \"includeObsoleteMetrics\": false,\n                \"description\": \"This is chart 1, showing something\",\n                \"chartSettings\": {\n                  \"type\": \"markdown-widget\",\n                  \"max\": 100,\n                  \"expectedDataSpacing\": 120,\n                  \"windowing\": \"full\",\n                  \"windowSize\": 10,\n                  \"autoColumnTags\": false,\n                  \"columnTags\": \"deprecated\",\n                  \"tagMode\": \"all\",\n                  \"numTags\": 2,\n                  \"customTags\": [\n                    \"tag1\",\n                    \"tag2\"\n                  ],\n                  \"groupBySource\": true,\n                  \"y1Max\": 100,\n                  \"y1Units\": \"units\",\n                  \"y0ScaleSIBy1024\": true,\n                  \"y1ScaleSIBy1024\": true,\n                  \"y0UnitAutoscaling\": true,\n                  \"y1UnitAutoscaling\": true,\n                  \"fixedLegendEnabled\": true,\n                  \"fixedLegendUseRawStats\": true,\n                  \"fixedLegendPosition\": \"RIGHT\",\n                  \"fixedLegendDisplayStats\": [\n                    \"stat1\",\n                    \"stat2\"\n                  ],\n                  \"fixedLegendFilterSort\": \"TOP\",\n                  \"fixedLegendFilterLimit\": 1,\n                  \"fixedLegendFilterField\": \"CURRENT\",\n                  \"plainMarkdownContent\": \"markdown content\"\n                },\n                \"chartAttributes\": {\n                  \"dashboardLinks\": {\n                    \"*\": {\n                      \"variables\": {\n                        \"xxx\": \"xxx\"\n                      },\n                      \"destination\": \"/dashboards/xxxx\"\n                    }\n                  }\n                },\n                \"summarization\": \"MEAN\"\n              }\n            ],\n            \"heightFactor\": 50\n          }\n        ]\n      }\n    ],\n    \"parameterDetails\": {\n      \"param\": {\n        \"hideFromView\": false,\n        \"description\": null,\n        \"allowAll\": null,\n        \"tagKey\": null,\n        \"queryValue\": null,\n        \"dynamicFieldType\": null,\n        \"reverseDynSort\": null,\n        \"parameterType\": \"SIMPLE\",\n        \"label\": \"test\",\n        \"defaultValue\": \"Label\",\n        \"valuesToReadableStrings\": {\n          \"Label\": \"test\"\n        },\n        \"selectedLabel\": \"Label\",\n        \"value\": \"test\"\n      }\n    },\n    \"tags\": {\n      \"customerTags\": [\n        \"terraform\"\n      ]\n    }\n  }\n\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testDashboardJson = new Wavefront.DashboardJson(\"testDashboardJson\", new()\n    {\n        JSON = @\"  {\n    \"\"acl\"\": {\n      \"\"canModify\"\": [\n        \"\"group-uuid\"\",\n        \"\"role-uuid\"\"\n      ],\n      \"\"canView\"\": [\n        \"\"group-uuid\"\",\n        \"\"role-uuid\"\"\n      ]\n    },\n    \"\"name\"\": \"\"Terraform Test Dashboard Json\"\",\n    \"\"description\"\": \"\"a\"\",\n    \"\"eventFilterType\"\": \"\"BYCHART\"\",\n    \"\"eventQuery\"\": \"\"\"\",\n    \"\"defaultTimeWindow\"\": \"\"\"\",\n    \"\"url\"\": \"\"tftestimport\"\",\n    \"\"displayDescription\"\": false,\n    \"\"displaySectionTableOfContents\"\": true,\n    \"\"displayQueryParameters\"\": false,\n    \"\"sections\"\": [\n      {\n        \"\"name\"\": \"\"section 1\"\",\n        \"\"rows\"\": [\n          {\n            \"\"charts\"\": [\n              {\n                \"\"name\"\": \"\"chart 1\"\",\n                \"\"sources\"\": [\n                  {\n                    \"\"name\"\": \"\"source 1\"\",\n                    \"\"query\"\": \"\"ts()\"\",\n                    \"\"scatterPlotSource\"\": \"\"Y\"\",\n                    \"\"querybuilderEnabled\"\": false,\n                    \"\"sourceDescription\"\": \"\"\"\"\n                  }\n                ],\n                \"\"units\"\": \"\"someunit\"\",\n                \"\"base\"\": 0,\n                \"\"noDefaultEvents\"\": false,\n                \"\"interpolatePoints\"\": false,\n                \"\"includeObsoleteMetrics\"\": false,\n                \"\"description\"\": \"\"This is chart 1, showing something\"\",\n                \"\"chartSettings\"\": {\n                  \"\"type\"\": \"\"markdown-widget\"\",\n                  \"\"max\"\": 100,\n                  \"\"expectedDataSpacing\"\": 120,\n                  \"\"windowing\"\": \"\"full\"\",\n                  \"\"windowSize\"\": 10,\n                  \"\"autoColumnTags\"\": false,\n                  \"\"columnTags\"\": \"\"deprecated\"\",\n                  \"\"tagMode\"\": \"\"all\"\",\n                  \"\"numTags\"\": 2,\n                  \"\"customTags\"\": [\n                    \"\"tag1\"\",\n                    \"\"tag2\"\"\n                  ],\n                  \"\"groupBySource\"\": true,\n                  \"\"y1Max\"\": 100,\n                  \"\"y1Units\"\": \"\"units\"\",\n                  \"\"y0ScaleSIBy1024\"\": true,\n                  \"\"y1ScaleSIBy1024\"\": true,\n                  \"\"y0UnitAutoscaling\"\": true,\n                  \"\"y1UnitAutoscaling\"\": true,\n                  \"\"fixedLegendEnabled\"\": true,\n                  \"\"fixedLegendUseRawStats\"\": true,\n                  \"\"fixedLegendPosition\"\": \"\"RIGHT\"\",\n                  \"\"fixedLegendDisplayStats\"\": [\n                    \"\"stat1\"\",\n                    \"\"stat2\"\"\n                  ],\n                  \"\"fixedLegendFilterSort\"\": \"\"TOP\"\",\n                  \"\"fixedLegendFilterLimit\"\": 1,\n                  \"\"fixedLegendFilterField\"\": \"\"CURRENT\"\",\n                  \"\"plainMarkdownContent\"\": \"\"markdown content\"\"\n                },\n                \"\"chartAttributes\"\": {\n                  \"\"dashboardLinks\"\": {\n                    \"\"*\"\": {\n                      \"\"variables\"\": {\n                        \"\"xxx\"\": \"\"xxx\"\"\n                      },\n                      \"\"destination\"\": \"\"/dashboards/xxxx\"\"\n                    }\n                  }\n                },\n                \"\"summarization\"\": \"\"MEAN\"\"\n              }\n            ],\n            \"\"heightFactor\"\": 50\n          }\n        ]\n      }\n    ],\n    \"\"parameterDetails\"\": {\n      \"\"param\"\": {\n        \"\"hideFromView\"\": false,\n        \"\"description\"\": null,\n        \"\"allowAll\"\": null,\n        \"\"tagKey\"\": null,\n        \"\"queryValue\"\": null,\n        \"\"dynamicFieldType\"\": null,\n        \"\"reverseDynSort\"\": null,\n        \"\"parameterType\"\": \"\"SIMPLE\"\",\n        \"\"label\"\": \"\"test\"\",\n        \"\"defaultValue\"\": \"\"Label\"\",\n        \"\"valuesToReadableStrings\"\": {\n          \"\"Label\"\": \"\"test\"\"\n        },\n        \"\"selectedLabel\"\": \"\"Label\"\",\n        \"\"value\"\": \"\"test\"\"\n      }\n    },\n    \"\"tags\"\": {\n      \"\"customerTags\"\": [\n        \"\"terraform\"\"\n      ]\n    }\n  }\n\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewDashboardJson(ctx, \"testDashboardJson\", \u0026wavefront.DashboardJsonArgs{\n\t\t\tDashboardJson: pulumi.String(`  {\n    \"acl\": {\n      \"canModify\": [\n        \"group-uuid\",\n        \"role-uuid\"\n      ],\n      \"canView\": [\n        \"group-uuid\",\n        \"role-uuid\"\n      ]\n    },\n    \"name\": \"Terraform Test Dashboard Json\",\n    \"description\": \"a\",\n    \"eventFilterType\": \"BYCHART\",\n    \"eventQuery\": \"\",\n    \"defaultTimeWindow\": \"\",\n    \"url\": \"tftestimport\",\n    \"displayDescription\": false,\n    \"displaySectionTableOfContents\": true,\n    \"displayQueryParameters\": false,\n    \"sections\": [\n      {\n        \"name\": \"section 1\",\n        \"rows\": [\n          {\n            \"charts\": [\n              {\n                \"name\": \"chart 1\",\n                \"sources\": [\n                  {\n                    \"name\": \"source 1\",\n                    \"query\": \"ts()\",\n                    \"scatterPlotSource\": \"Y\",\n                    \"querybuilderEnabled\": false,\n                    \"sourceDescription\": \"\"\n                  }\n                ],\n                \"units\": \"someunit\",\n                \"base\": 0,\n                \"noDefaultEvents\": false,\n                \"interpolatePoints\": false,\n                \"includeObsoleteMetrics\": false,\n                \"description\": \"This is chart 1, showing something\",\n                \"chartSettings\": {\n                  \"type\": \"markdown-widget\",\n                  \"max\": 100,\n                  \"expectedDataSpacing\": 120,\n                  \"windowing\": \"full\",\n                  \"windowSize\": 10,\n                  \"autoColumnTags\": false,\n                  \"columnTags\": \"deprecated\",\n                  \"tagMode\": \"all\",\n                  \"numTags\": 2,\n                  \"customTags\": [\n                    \"tag1\",\n                    \"tag2\"\n                  ],\n                  \"groupBySource\": true,\n                  \"y1Max\": 100,\n                  \"y1Units\": \"units\",\n                  \"y0ScaleSIBy1024\": true,\n                  \"y1ScaleSIBy1024\": true,\n                  \"y0UnitAutoscaling\": true,\n                  \"y1UnitAutoscaling\": true,\n                  \"fixedLegendEnabled\": true,\n                  \"fixedLegendUseRawStats\": true,\n                  \"fixedLegendPosition\": \"RIGHT\",\n                  \"fixedLegendDisplayStats\": [\n                    \"stat1\",\n                    \"stat2\"\n                  ],\n                  \"fixedLegendFilterSort\": \"TOP\",\n                  \"fixedLegendFilterLimit\": 1,\n                  \"fixedLegendFilterField\": \"CURRENT\",\n                  \"plainMarkdownContent\": \"markdown content\"\n                },\n                \"chartAttributes\": {\n                  \"dashboardLinks\": {\n                    \"*\": {\n                      \"variables\": {\n                        \"xxx\": \"xxx\"\n                      },\n                      \"destination\": \"/dashboards/xxxx\"\n                    }\n                  }\n                },\n                \"summarization\": \"MEAN\"\n              }\n            ],\n            \"heightFactor\": 50\n          }\n        ]\n      }\n    ],\n    \"parameterDetails\": {\n      \"param\": {\n        \"hideFromView\": false,\n        \"description\": null,\n        \"allowAll\": null,\n        \"tagKey\": null,\n        \"queryValue\": null,\n        \"dynamicFieldType\": null,\n        \"reverseDynSort\": null,\n        \"parameterType\": \"SIMPLE\",\n        \"label\": \"test\",\n        \"defaultValue\": \"Label\",\n        \"valuesToReadableStrings\": {\n          \"Label\": \"test\"\n        },\n        \"selectedLabel\": \"Label\",\n        \"value\": \"test\"\n      }\n    },\n    \"tags\": {\n      \"customerTags\": [\n        \"terraform\"\n      ]\n    }\n  }\n\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.DashboardJson;\nimport com.pulumi.wavefront.DashboardJsonArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testDashboardJson = new DashboardJson(\"testDashboardJson\", DashboardJsonArgs.builder()        \n            .dashboardJson(\"\"\"\n  {\n    \"acl\": {\n      \"canModify\": [\n        \"group-uuid\",\n        \"role-uuid\"\n      ],\n      \"canView\": [\n        \"group-uuid\",\n        \"role-uuid\"\n      ]\n    },\n    \"name\": \"Terraform Test Dashboard Json\",\n    \"description\": \"a\",\n    \"eventFilterType\": \"BYCHART\",\n    \"eventQuery\": \"\",\n    \"defaultTimeWindow\": \"\",\n    \"url\": \"tftestimport\",\n    \"displayDescription\": false,\n    \"displaySectionTableOfContents\": true,\n    \"displayQueryParameters\": false,\n    \"sections\": [\n      {\n        \"name\": \"section 1\",\n        \"rows\": [\n          {\n            \"charts\": [\n              {\n                \"name\": \"chart 1\",\n                \"sources\": [\n                  {\n                    \"name\": \"source 1\",\n                    \"query\": \"ts()\",\n                    \"scatterPlotSource\": \"Y\",\n                    \"querybuilderEnabled\": false,\n                    \"sourceDescription\": \"\"\n                  }\n                ],\n                \"units\": \"someunit\",\n                \"base\": 0,\n                \"noDefaultEvents\": false,\n                \"interpolatePoints\": false,\n                \"includeObsoleteMetrics\": false,\n                \"description\": \"This is chart 1, showing something\",\n                \"chartSettings\": {\n                  \"type\": \"markdown-widget\",\n                  \"max\": 100,\n                  \"expectedDataSpacing\": 120,\n                  \"windowing\": \"full\",\n                  \"windowSize\": 10,\n                  \"autoColumnTags\": false,\n                  \"columnTags\": \"deprecated\",\n                  \"tagMode\": \"all\",\n                  \"numTags\": 2,\n                  \"customTags\": [\n                    \"tag1\",\n                    \"tag2\"\n                  ],\n                  \"groupBySource\": true,\n                  \"y1Max\": 100,\n                  \"y1Units\": \"units\",\n                  \"y0ScaleSIBy1024\": true,\n                  \"y1ScaleSIBy1024\": true,\n                  \"y0UnitAutoscaling\": true,\n                  \"y1UnitAutoscaling\": true,\n                  \"fixedLegendEnabled\": true,\n                  \"fixedLegendUseRawStats\": true,\n                  \"fixedLegendPosition\": \"RIGHT\",\n                  \"fixedLegendDisplayStats\": [\n                    \"stat1\",\n                    \"stat2\"\n                  ],\n                  \"fixedLegendFilterSort\": \"TOP\",\n                  \"fixedLegendFilterLimit\": 1,\n                  \"fixedLegendFilterField\": \"CURRENT\",\n                  \"plainMarkdownContent\": \"markdown content\"\n                },\n                \"chartAttributes\": {\n                  \"dashboardLinks\": {\n                    \"*\": {\n                      \"variables\": {\n                        \"xxx\": \"xxx\"\n                      },\n                      \"destination\": \"/dashboards/xxxx\"\n                    }\n                  }\n                },\n                \"summarization\": \"MEAN\"\n              }\n            ],\n            \"heightFactor\": 50\n          }\n        ]\n      }\n    ],\n    \"parameterDetails\": {\n      \"param\": {\n        \"hideFromView\": false,\n        \"description\": null,\n        \"allowAll\": null,\n        \"tagKey\": null,\n        \"queryValue\": null,\n        \"dynamicFieldType\": null,\n        \"reverseDynSort\": null,\n        \"parameterType\": \"SIMPLE\",\n        \"label\": \"test\",\n        \"defaultValue\": \"Label\",\n        \"valuesToReadableStrings\": {\n          \"Label\": \"test\"\n        },\n        \"selectedLabel\": \"Label\",\n        \"value\": \"test\"\n      }\n    },\n    \"tags\": {\n      \"customerTags\": [\n        \"terraform\"\n      ]\n    }\n  }\n\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testDashboardJson:\n    type: wavefront:DashboardJson\n    properties:\n      dashboardJson: |2+\n          {\n            \"acl\": {\n              \"canModify\": [\n                \"group-uuid\",\n                \"role-uuid\"\n              ],\n              \"canView\": [\n                \"group-uuid\",\n                \"role-uuid\"\n              ]\n            },\n            \"name\": \"Terraform Test Dashboard Json\",\n            \"description\": \"a\",\n            \"eventFilterType\": \"BYCHART\",\n            \"eventQuery\": \"\",\n            \"defaultTimeWindow\": \"\",\n            \"url\": \"tftestimport\",\n            \"displayDescription\": false,\n            \"displaySectionTableOfContents\": true,\n            \"displayQueryParameters\": false,\n            \"sections\": [\n              {\n                \"name\": \"section 1\",\n                \"rows\": [\n                  {\n                    \"charts\": [\n                      {\n                        \"name\": \"chart 1\",\n                        \"sources\": [\n                          {\n                            \"name\": \"source 1\",\n                            \"query\": \"ts()\",\n                            \"scatterPlotSource\": \"Y\",\n                            \"querybuilderEnabled\": false,\n                            \"sourceDescription\": \"\"\n                          }\n                        ],\n                        \"units\": \"someunit\",\n                        \"base\": 0,\n                        \"noDefaultEvents\": false,\n                        \"interpolatePoints\": false,\n                        \"includeObsoleteMetrics\": false,\n                        \"description\": \"This is chart 1, showing something\",\n                        \"chartSettings\": {\n                          \"type\": \"markdown-widget\",\n                          \"max\": 100,\n                          \"expectedDataSpacing\": 120,\n                          \"windowing\": \"full\",\n                          \"windowSize\": 10,\n                          \"autoColumnTags\": false,\n                          \"columnTags\": \"deprecated\",\n                          \"tagMode\": \"all\",\n                          \"numTags\": 2,\n                          \"customTags\": [\n                            \"tag1\",\n                            \"tag2\"\n                          ],\n                          \"groupBySource\": true,\n                          \"y1Max\": 100,\n                          \"y1Units\": \"units\",\n                          \"y0ScaleSIBy1024\": true,\n                          \"y1ScaleSIBy1024\": true,\n                          \"y0UnitAutoscaling\": true,\n                          \"y1UnitAutoscaling\": true,\n                          \"fixedLegendEnabled\": true,\n                          \"fixedLegendUseRawStats\": true,\n                          \"fixedLegendPosition\": \"RIGHT\",\n                          \"fixedLegendDisplayStats\": [\n                            \"stat1\",\n                            \"stat2\"\n                          ],\n                          \"fixedLegendFilterSort\": \"TOP\",\n                          \"fixedLegendFilterLimit\": 1,\n                          \"fixedLegendFilterField\": \"CURRENT\",\n                          \"plainMarkdownContent\": \"markdown content\"\n                        },\n                        \"chartAttributes\": {\n                          \"dashboardLinks\": {\n                            \"*\": {\n                              \"variables\": {\n                                \"xxx\": \"xxx\"\n                              },\n                              \"destination\": \"/dashboards/xxxx\"\n                            }\n                          }\n                        },\n                        \"summarization\": \"MEAN\"\n                      }\n                    ],\n                    \"heightFactor\": 50\n                  }\n                ]\n              }\n            ],\n            \"parameterDetails\": {\n              \"param\": {\n                \"hideFromView\": false,\n                \"description\": null,\n                \"allowAll\": null,\n                \"tagKey\": null,\n                \"queryValue\": null,\n                \"dynamicFieldType\": null,\n                \"reverseDynSort\": null,\n                \"parameterType\": \"SIMPLE\",\n                \"label\": \"test\",\n                \"defaultValue\": \"Label\",\n                \"valuesToReadableStrings\": {\n                  \"Label\": \"test\"\n                },\n                \"selectedLabel\": \"Label\",\n                \"value\": \"test\"\n              }\n            },\n            \"tags\": {\n              \"customerTags\": [\n                \"terraform\"\n              ]\n            }\n          }\n```\n\n*\n*Note:\n** If there are dynamic variables in the Wavefront dashboard json, then these variables must be present in a separate file as mentioned in the section below.\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nDashboard JSON can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/dashboardJson:DashboardJson dashboard_json tftestimport\n```\n ","properties":{"dashboardJson":{"type":"string","description":"See the [Wavefront API Documentation](https://docs.wavefront.com/wavefront_api.html#api-documentation-wavefront-instance)\nfor instructions on how to get to your API documentation for more details.\n","language":{"csharp":{"name":"JSON"}}}},"required":["dashboardJson"],"inputProperties":{"dashboardJson":{"type":"string","description":"See the [Wavefront API Documentation](https://docs.wavefront.com/wavefront_api.html#api-documentation-wavefront-instance)\nfor instructions on how to get to your API documentation for more details.\n","language":{"csharp":{"name":"JSON"}}}},"requiredInputs":["dashboardJson"],"stateInputs":{"description":"Input properties used for looking up and filtering DashboardJson resources.\n","properties":{"dashboardJson":{"type":"string","description":"See the [Wavefront API Documentation](https://docs.wavefront.com/wavefront_api.html#api-documentation-wavefront-instance)\nfor instructions on how to get to your API documentation for more details.\n","language":{"csharp":{"name":"JSON"}}}},"type":"object"}},"wavefront:index/derivedMetric:DerivedMetric":{"description":"Provides a Wavefront Derived Metric Resource. This allows derived metrics to be created,\nupdated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst derived = new wavefront.DerivedMetric(\"derived\", {\n    minutes: 5,\n    query: \"aliasMetric(5, \\\"some.metric\\\")\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nderived = wavefront.DerivedMetric(\"derived\",\n    minutes=5,\n    query=\"aliasMetric(5, \\\"some.metric\\\")\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var derived = new Wavefront.DerivedMetric(\"derived\", new()\n    {\n        Minutes = 5,\n        Query = \"aliasMetric(5, \\\"some.metric\\\")\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewDerivedMetric(ctx, \"derived\", \u0026wavefront.DerivedMetricArgs{\n\t\t\tMinutes: pulumi.Int(5),\n\t\t\tQuery:   pulumi.String(\"aliasMetric(5, \\\"some.metric\\\")\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.DerivedMetric;\nimport com.pulumi.wavefront.DerivedMetricArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var derived = new DerivedMetric(\"derived\", DerivedMetricArgs.builder()        \n            .minutes(5)\n            .query(\"aliasMetric(5, \\\"some.metric\\\")\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  derived:\n    type: wavefront:DerivedMetric\n    properties:\n      minutes: 5\n      query: aliasMetric(5, \"some.metric\")\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nDerived Metrics can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/derivedMetric:DerivedMetric derived_metric 1577102900578\n```\n ","properties":{"additionalInformation":{"type":"string","description":"User-supplied additional explanatory information for the derived metric.\n"},"minutes":{"type":"integer","description":"How frequently the query generating the derived metric is run.\n"},"name":{"type":"string","description":"The name of the Derived Metric in Wavefront.\n"},"query":{"type":"string","description":"A Wavefront query that is evaluated at regular intervals (default is 1 minute).\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags to assign to this resource.\n"}},"required":["minutes","name","query"],"inputProperties":{"additionalInformation":{"type":"string","description":"User-supplied additional explanatory information for the derived metric.\n"},"minutes":{"type":"integer","description":"How frequently the query generating the derived metric is run.\n"},"name":{"type":"string","description":"The name of the Derived Metric in Wavefront.\n"},"query":{"type":"string","description":"A Wavefront query that is evaluated at regular intervals (default is 1 minute).\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags to assign to this resource.\n"}},"requiredInputs":["minutes","query"],"stateInputs":{"description":"Input properties used for looking up and filtering DerivedMetric resources.\n","properties":{"additionalInformation":{"type":"string","description":"User-supplied additional explanatory information for the derived metric.\n"},"minutes":{"type":"integer","description":"How frequently the query generating the derived metric is run.\n"},"name":{"type":"string","description":"The name of the Derived Metric in Wavefront.\n"},"query":{"type":"string","description":"A Wavefront query that is evaluated at regular intervals (default is 1 minute).\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags to assign to this resource.\n"}},"type":"object"}},"wavefront:index/event:Event":{"description":"Provides a Wavefront event resource. This allows events to be created, updated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst event = new wavefront.Event(\"event\", {\n    annotations: {\n        details: \"description\",\n        severity: \"info\",\n        type: \"event type\",\n    },\n    tags: [\"eventTag1\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nevent = wavefront.Event(\"event\",\n    annotations={\n        \"details\": \"description\",\n        \"severity\": \"info\",\n        \"type\": \"event type\",\n    },\n    tags=[\"eventTag1\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @event = new Wavefront.Event(\"event\", new()\n    {\n        Annotations = \n        {\n            { \"details\", \"description\" },\n            { \"severity\", \"info\" },\n            { \"type\", \"event type\" },\n        },\n        Tags = new[]\n        {\n            \"eventTag1\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewEvent(ctx, \"event\", \u0026wavefront.EventArgs{\n\t\t\tAnnotations: pulumi.StringMap{\n\t\t\t\t\"details\":  pulumi.String(\"description\"),\n\t\t\t\t\"severity\": pulumi.String(\"info\"),\n\t\t\t\t\"type\":     pulumi.String(\"event type\"),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"eventTag1\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.Event;\nimport com.pulumi.wavefront.EventArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var event = new Event(\"event\", EventArgs.builder()        \n            .annotations(Map.ofEntries(\n                Map.entry(\"details\", \"description\"),\n                Map.entry(\"severity\", \"info\"),\n                Map.entry(\"type\", \"event type\")\n            ))\n            .tags(\"eventTag1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  event:\n    type: wavefront:Event\n    properties:\n      annotations:\n        details: description\n        severity: info\n        type: event type\n      tags:\n        - eventTag1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nYou can import events by using the id, for example:\n\n```sh\n $ pulumi import wavefront:index/event:Event event 1479868728473\n```\n ","properties":{"annotations":{"type":"object","additionalProperties":{"type":"string"},"description":"The annotations associated with the event.\n"},"endtimeKey":{"type":"integer"},"name":{"type":"string","description":"The name of the event as it is displayed in Wavefront.\n"},"startTime":{"type":"integer","description":"The start time of the event in epoch milliseconds.\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags to assign to this resource.\n"}},"required":["annotations","name"],"inputProperties":{"annotations":{"type":"object","additionalProperties":{"type":"string"},"description":"The annotations associated with the event.\n"},"endtimeKey":{"type":"integer"},"name":{"type":"string","description":"The name of the event as it is displayed in Wavefront.\n"},"startTime":{"type":"integer","description":"The start time of the event in epoch milliseconds.\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags to assign to this resource.\n"}},"requiredInputs":["annotations"],"stateInputs":{"description":"Input properties used for looking up and filtering Event resources.\n","properties":{"annotations":{"type":"object","additionalProperties":{"type":"string"},"description":"The annotations associated with the event.\n"},"endtimeKey":{"type":"integer"},"name":{"type":"string","description":"The name of the event as it is displayed in Wavefront.\n"},"startTime":{"type":"integer","description":"The start time of the event in epoch milliseconds.\n"},"tags":{"type":"array","items":{"type":"string"},"description":"A set of tags to assign to this resource.\n"}},"type":"object"}},"wavefront:index/externalLink:ExternalLink":{"description":"Provides a Wavefront External Link Resource. This allows external links to be created, updated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst basic = new wavefront.ExternalLink(\"basic\", {\n    description: \"An external link description\",\n    template: \"https://example.com/source={{{source}}}\u0026startTime={{startEpochMillis}}\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nbasic = wavefront.ExternalLink(\"basic\",\n    description=\"An external link description\",\n    template=\"https://example.com/source={{{source}}}\u0026startTime={{startEpochMillis}}\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var basic = new Wavefront.ExternalLink(\"basic\", new()\n    {\n        Description = \"An external link description\",\n        Template = \"https://example.com/source={{{source}}}\u0026startTime={{startEpochMillis}}\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewExternalLink(ctx, \"basic\", \u0026wavefront.ExternalLinkArgs{\n\t\t\tDescription: pulumi.String(\"An external link description\"),\n\t\t\tTemplate:    pulumi.String(\"https://example.com/source={{{source}}}\u0026startTime={{startEpochMillis}}\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.ExternalLink;\nimport com.pulumi.wavefront.ExternalLinkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var basic = new ExternalLink(\"basic\", ExternalLinkArgs.builder()        \n            .description(\"An external link description\")\n            .template(\"https://example.com/source={{{source}}}\u0026startTime={{startEpochMillis}}\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  basic:\n    type: wavefront:ExternalLink\n    properties:\n      description: An external link description\n      template: https://example.com/source={{{source}}}\u0026startTime={{startEpochMillis}}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nMaintenance windows can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/externalLink:ExternalLink basic fVj6fz6zYC4aBkID\n```\n ","properties":{"description":{"type":"string","description":"Human-readable description for this link.\n"},"isLogIntegration":{"type":"boolean","description":"Whether this is a \"Log Integration\" subType of external link.\n"},"metricFilterRegex":{"type":"string","description":"Controls whether a link is displayed in the context menu of a highlighted series. If present, the metric name of the highlighted series must match this regular expression in order for the link to be displayed.\n"},"name":{"type":"string","description":"The name of the external link.\n"},"pointTagFilterRegexes":{"type":"object","additionalProperties":{"type":"string"},"description":"Controls whether a link is displayed in the context menu of a highlighted\nseries. This is a map from string to regular expression. The highlighted series must contain point tags whose\nkeys are present in the keys of this map and whose values match the regular expressions associated with those\nkeys in order for the link to be displayed.\n"},"sourceFilterRegex":{"type":"string","description":"Controls whether a link is displayed in the context menu of a highlighted series. If present, the source name of the highlighted series must match this regular expression in order for the link to be displayed.\n"},"template":{"type":"string","description":"The mustache template for this link. The template must expand to a full URL, including scheme, origin, etc.\n"}},"required":["description","name","template"],"inputProperties":{"description":{"type":"string","description":"Human-readable description for this link.\n"},"isLogIntegration":{"type":"boolean","description":"Whether this is a \"Log Integration\" subType of external link.\n"},"metricFilterRegex":{"type":"string","description":"Controls whether a link is displayed in the context menu of a highlighted series. If present, the metric name of the highlighted series must match this regular expression in order for the link to be displayed.\n"},"name":{"type":"string","description":"The name of the external link.\n"},"pointTagFilterRegexes":{"type":"object","additionalProperties":{"type":"string"},"description":"Controls whether a link is displayed in the context menu of a highlighted\nseries. This is a map from string to regular expression. The highlighted series must contain point tags whose\nkeys are present in the keys of this map and whose values match the regular expressions associated with those\nkeys in order for the link to be displayed.\n"},"sourceFilterRegex":{"type":"string","description":"Controls whether a link is displayed in the context menu of a highlighted series. If present, the source name of the highlighted series must match this regular expression in order for the link to be displayed.\n"},"template":{"type":"string","description":"The mustache template for this link. The template must expand to a full URL, including scheme, origin, etc.\n"}},"requiredInputs":["description","template"],"stateInputs":{"description":"Input properties used for looking up and filtering ExternalLink resources.\n","properties":{"description":{"type":"string","description":"Human-readable description for this link.\n"},"isLogIntegration":{"type":"boolean","description":"Whether this is a \"Log Integration\" subType of external link.\n"},"metricFilterRegex":{"type":"string","description":"Controls whether a link is displayed in the context menu of a highlighted series. If present, the metric name of the highlighted series must match this regular expression in order for the link to be displayed.\n"},"name":{"type":"string","description":"The name of the external link.\n"},"pointTagFilterRegexes":{"type":"object","additionalProperties":{"type":"string"},"description":"Controls whether a link is displayed in the context menu of a highlighted\nseries. This is a map from string to regular expression. The highlighted series must contain point tags whose\nkeys are present in the keys of this map and whose values match the regular expressions associated with those\nkeys in order for the link to be displayed.\n"},"sourceFilterRegex":{"type":"string","description":"Controls whether a link is displayed in the context menu of a highlighted series. If present, the source name of the highlighted series must match this regular expression in order for the link to be displayed.\n"},"template":{"type":"string","description":"The mustache template for this link. The template must expand to a full URL, including scheme, origin, etc.\n"}},"type":"object"}},"wavefront:index/ingestionPolicy:IngestionPolicy":{"description":"Provides a Wavefront Ingestion Policy Resource. This allows ingestion policies to be created, updated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst basic = new wavefront.IngestionPolicy(\"basic\", {description: \"An ingestion policy for testing\"});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nbasic = wavefront.IngestionPolicy(\"basic\", description=\"An ingestion policy for testing\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var basic = new Wavefront.IngestionPolicy(\"basic\", new()\n    {\n        Description = \"An ingestion policy for testing\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewIngestionPolicy(ctx, \"basic\", \u0026wavefront.IngestionPolicyArgs{\n\t\t\tDescription: pulumi.String(\"An ingestion policy for testing\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.IngestionPolicy;\nimport com.pulumi.wavefront.IngestionPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var basic = new IngestionPolicy(\"basic\", IngestionPolicyArgs.builder()        \n            .description(\"An ingestion policy for testing\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  basic:\n    type: wavefront:IngestionPolicy\n    properties:\n      description: An ingestion policy for testing\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\ningestion policies can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/ingestionPolicy:IngestionPolicy basic test_ingestion-1611946841064\n```\n ","properties":{"accounts":{"type":"array","items":{"type":"string"}},"description":{"type":"string","description":"The description of the ingestion policy.\n"},"groups":{"type":"array","items":{"type":"string"}},"name":{"type":"string","description":"The name of the ingestion policy.\n"},"namespaces":{"type":"array","items":{"type":"string"}},"scope":{"type":"string"},"sources":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"$ref":"#/types/wavefront:index/IngestionPolicyTag:IngestionPolicyTag"}}},"required":["description","name","scope"],"inputProperties":{"accounts":{"type":"array","items":{"type":"string"}},"description":{"type":"string","description":"The description of the ingestion policy.\n"},"groups":{"type":"array","items":{"type":"string"}},"name":{"type":"string","description":"The name of the ingestion policy.\n"},"namespaces":{"type":"array","items":{"type":"string"}},"scope":{"type":"string"},"sources":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"$ref":"#/types/wavefront:index/IngestionPolicyTag:IngestionPolicyTag"}}},"requiredInputs":["description","scope"],"stateInputs":{"description":"Input properties used for looking up and filtering IngestionPolicy resources.\n","properties":{"accounts":{"type":"array","items":{"type":"string"}},"description":{"type":"string","description":"The description of the ingestion policy.\n"},"groups":{"type":"array","items":{"type":"string"}},"name":{"type":"string","description":"The name of the ingestion policy.\n"},"namespaces":{"type":"array","items":{"type":"string"}},"scope":{"type":"string"},"sources":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"$ref":"#/types/wavefront:index/IngestionPolicyTag:IngestionPolicyTag"}}},"type":"object"}},"wavefront:index/maintenanceWindow:MaintenanceWindow":{"description":"Provides a Wavefront Maintenance Window Resource. This allows maintenance windows to be created, updated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst basic = new wavefront.MaintenanceWindow(\"basic\", {\n    endTimeInSeconds: 1601123456,\n    reason: \"Routine maintenance for 2020\",\n    relevantHostNames: [\n        \"my_hostname\",\n        \"my_other_hostname\",\n    ],\n    startTimeInSeconds: 1600123456,\n    title: \"Routine maintenance\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nbasic = wavefront.MaintenanceWindow(\"basic\",\n    end_time_in_seconds=1601123456,\n    reason=\"Routine maintenance for 2020\",\n    relevant_host_names=[\n        \"my_hostname\",\n        \"my_other_hostname\",\n    ],\n    start_time_in_seconds=1600123456,\n    title=\"Routine maintenance\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var basic = new Wavefront.MaintenanceWindow(\"basic\", new()\n    {\n        EndTimeInSeconds = 1601123456,\n        Reason = \"Routine maintenance for 2020\",\n        RelevantHostNames = new[]\n        {\n            \"my_hostname\",\n            \"my_other_hostname\",\n        },\n        StartTimeInSeconds = 1600123456,\n        Title = \"Routine maintenance\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewMaintenanceWindow(ctx, \"basic\", \u0026wavefront.MaintenanceWindowArgs{\n\t\t\tEndTimeInSeconds: pulumi.Int(1601123456),\n\t\t\tReason:           pulumi.String(\"Routine maintenance for 2020\"),\n\t\t\tRelevantHostNames: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"my_hostname\"),\n\t\t\t\tpulumi.String(\"my_other_hostname\"),\n\t\t\t},\n\t\t\tStartTimeInSeconds: pulumi.Int(1600123456),\n\t\t\tTitle:              pulumi.String(\"Routine maintenance\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.MaintenanceWindow;\nimport com.pulumi.wavefront.MaintenanceWindowArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var basic = new MaintenanceWindow(\"basic\", MaintenanceWindowArgs.builder()        \n            .endTimeInSeconds(1601123456)\n            .reason(\"Routine maintenance for 2020\")\n            .relevantHostNames(            \n                \"my_hostname\",\n                \"my_other_hostname\")\n            .startTimeInSeconds(1600123456)\n            .title(\"Routine maintenance\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  basic:\n    type: wavefront:MaintenanceWindow\n    properties:\n      endTimeInSeconds: 1.601123456e+09\n      reason: Routine maintenance for 2020\n      relevantHostNames:\n        - my_hostname\n        - my_other_hostname\n      startTimeInSeconds: 1.600123456e+09\n      title: Routine maintenance\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nMaintenance windows can be imported using the `id`, e.g.\n\n```sh\n $ pulumi import wavefront:index/maintenanceWindow:MaintenanceWindow basic 1600383357095\n```\n ","properties":{"endTimeInSeconds":{"type":"integer","description":"end time in seconds after 1 Jan 1970 GMT.\n"},"hostTagGroupHostNamesGroupAnded":{"type":"boolean","description":"If `true`, a source/host must be in `relevant_host_names`\nand have tags matching the specification formed by `relevant_host_tags` and `relevant_host_tags_anded` in\norder for this maintenance window to apply. If `false`, a source/host must either be in `relevant_host_names`\nor match `relevant_host_tags` and `relevant_host_tags_anded`. Default: `false`.\n"},"reason":{"type":"string","description":"The reason for the maintenance window.\n"},"relevantCustomerTags":{"type":"array","items":{"type":"string"},"description":"List of alert tags whose matching alerts will be put into maintenance because\nof this maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or `relevant_host_names`\nis required.\n"},"relevantHostNames":{"type":"array","items":{"type":"string"},"description":"List of source/host names that will be put into maintenance because of this\nmaintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or `relevant_host_names`\nis required.\n"},"relevantHostTags":{"type":"array","items":{"type":"string"},"description":"List of source/host tags whose matching sources/hosts will be put into maintenance\nbecause of this maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or\n`relevant_host_names` is required.\n"},"relevantHostTagsAnded":{"type":"boolean","description":"Whether to AND source/host tags listed in `relevant_host_tags`.\nIf `true`, a source/host must contain all tags in order for the maintenance window to apply. If `false`,\nthe tags are OR'ed, and a source/host must contain one of the tags. Default: `false`.\n"},"startTimeInSeconds":{"type":"integer","description":"start time in seconds after 1 Jan 1970 GMT.\n"},"title":{"type":"string","description":"The title of the maintenance window.\n"}},"required":["endTimeInSeconds","reason","startTimeInSeconds","title"],"inputProperties":{"endTimeInSeconds":{"type":"integer","description":"end time in seconds after 1 Jan 1970 GMT.\n"},"hostTagGroupHostNamesGroupAnded":{"type":"boolean","description":"If `true`, a source/host must be in `relevant_host_names`\nand have tags matching the specification formed by `relevant_host_tags` and `relevant_host_tags_anded` in\norder for this maintenance window to apply. If `false`, a source/host must either be in `relevant_host_names`\nor match `relevant_host_tags` and `relevant_host_tags_anded`. Default: `false`.\n"},"reason":{"type":"string","description":"The reason for the maintenance window.\n"},"relevantCustomerTags":{"type":"array","items":{"type":"string"},"description":"List of alert tags whose matching alerts will be put into maintenance because\nof this maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or `relevant_host_names`\nis required.\n"},"relevantHostNames":{"type":"array","items":{"type":"string"},"description":"List of source/host names that will be put into maintenance because of this\nmaintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or `relevant_host_names`\nis required.\n"},"relevantHostTags":{"type":"array","items":{"type":"string"},"description":"List of source/host tags whose matching sources/hosts will be put into maintenance\nbecause of this maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or\n`relevant_host_names` is required.\n"},"relevantHostTagsAnded":{"type":"boolean","description":"Whether to AND source/host tags listed in `relevant_host_tags`.\nIf `true`, a source/host must contain all tags in order for the maintenance window to apply. If `false`,\nthe tags are OR'ed, and a source/host must contain one of the tags. Default: `false`.\n"},"startTimeInSeconds":{"type":"integer","description":"start time in seconds after 1 Jan 1970 GMT.\n"},"title":{"type":"string","description":"The title of the maintenance window.\n"}},"requiredInputs":["endTimeInSeconds","reason","startTimeInSeconds","title"],"stateInputs":{"description":"Input properties used for looking up and filtering MaintenanceWindow resources.\n","properties":{"endTimeInSeconds":{"type":"integer","description":"end time in seconds after 1 Jan 1970 GMT.\n"},"hostTagGroupHostNamesGroupAnded":{"type":"boolean","description":"If `true`, a source/host must be in `relevant_host_names`\nand have tags matching the specification formed by `relevant_host_tags` and `relevant_host_tags_anded` in\norder for this maintenance window to apply. If `false`, a source/host must either be in `relevant_host_names`\nor match `relevant_host_tags` and `relevant_host_tags_anded`. Default: `false`.\n"},"reason":{"type":"string","description":"The reason for the maintenance window.\n"},"relevantCustomerTags":{"type":"array","items":{"type":"string"},"description":"List of alert tags whose matching alerts will be put into maintenance because\nof this maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or `relevant_host_names`\nis required.\n"},"relevantHostNames":{"type":"array","items":{"type":"string"},"description":"List of source/host names that will be put into maintenance because of this\nmaintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or `relevant_host_names`\nis required.\n"},"relevantHostTags":{"type":"array","items":{"type":"string"},"description":"List of source/host tags whose matching sources/hosts will be put into maintenance\nbecause of this maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or\n`relevant_host_names` is required.\n"},"relevantHostTagsAnded":{"type":"boolean","description":"Whether to AND source/host tags listed in `relevant_host_tags`.\nIf `true`, a source/host must contain all tags in order for the maintenance window to apply. If `false`,\nthe tags are OR'ed, and a source/host must contain one of the tags. Default: `false`.\n"},"startTimeInSeconds":{"type":"integer","description":"start time in seconds after 1 Jan 1970 GMT.\n"},"title":{"type":"string","description":"The title of the maintenance window.\n"}},"type":"object"}},"wavefront:index/metricsPolicy:MetricsPolicy":{"description":"Provides a Wavefront Metrics Policy Resource. This allows management of Metrics Policy to control access to time series, histograms, and delta counters\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst everyone = wavefront.getDefaultUserGroup({});\nconst main = new wavefront.MetricsPolicy(\"main\", {policyRules: [{\n    name: \"Allow All Metrics\",\n    description: \"Predefined policy rule. Allows access to all metrics (timeseries, histograms, and counters) for all accounts. If this rule is removed, all accounts can access all metrics if there are no matching blocking rules.\",\n    prefixes: [\"*\"],\n    tagsAnded: false,\n    accessType: \"ALLOW\",\n    userGroupIds: [everyone.then(everyone =\u003e everyone.groupId)],\n}]});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\neveryone = wavefront.get_default_user_group()\nmain = wavefront.MetricsPolicy(\"main\", policy_rules=[wavefront.MetricsPolicyPolicyRuleArgs(\n    name=\"Allow All Metrics\",\n    description=\"Predefined policy rule. Allows access to all metrics (timeseries, histograms, and counters) for all accounts. If this rule is removed, all accounts can access all metrics if there are no matching blocking rules.\",\n    prefixes=[\"*\"],\n    tags_anded=False,\n    access_type=\"ALLOW\",\n    user_group_ids=[everyone.group_id],\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var everyone = Wavefront.GetDefaultUserGroup.Invoke();\n\n    var main = new Wavefront.MetricsPolicy(\"main\", new()\n    {\n        PolicyRules = new[]\n        {\n            new Wavefront.Inputs.MetricsPolicyPolicyRuleArgs\n            {\n                Name = \"Allow All Metrics\",\n                Description = \"Predefined policy rule. Allows access to all metrics (timeseries, histograms, and counters) for all accounts. If this rule is removed, all accounts can access all metrics if there are no matching blocking rules.\",\n                Prefixes = new[]\n                {\n                    \"*\",\n                },\n                TagsAnded = false,\n                AccessType = \"ALLOW\",\n                UserGroupIds = new[]\n                {\n                    everyone.Apply(getDefaultUserGroupResult =\u003e getDefaultUserGroupResult.GroupId),\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\teveryone, err := wavefront.GetDefaultUserGroup(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = wavefront.NewMetricsPolicy(ctx, \"main\", \u0026wavefront.MetricsPolicyArgs{\n\t\t\tPolicyRules: wavefront.MetricsPolicyPolicyRuleArray{\n\t\t\t\t\u0026wavefront.MetricsPolicyPolicyRuleArgs{\n\t\t\t\t\tName:        pulumi.String(\"Allow All Metrics\"),\n\t\t\t\t\tDescription: pulumi.String(\"Predefined policy rule. Allows access to all metrics (timeseries, histograms, and counters) for all accounts. If this rule is removed, all accounts can access all metrics if there are no matching blocking rules.\"),\n\t\t\t\t\tPrefixes: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"*\"),\n\t\t\t\t\t},\n\t\t\t\t\tTagsAnded:  pulumi.Bool(false),\n\t\t\t\t\tAccessType: pulumi.String(\"ALLOW\"),\n\t\t\t\t\tUserGroupIds: pulumi.StringArray{\n\t\t\t\t\t\t*pulumi.String(everyone.GroupId),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.MetricsPolicy;\nimport com.pulumi.wavefront.MetricsPolicyArgs;\nimport com.pulumi.wavefront.inputs.MetricsPolicyPolicyRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var everyone = WavefrontFunctions.getDefaultUserGroup();\n\n        var main = new MetricsPolicy(\"main\", MetricsPolicyArgs.builder()        \n            .policyRules(MetricsPolicyPolicyRuleArgs.builder()\n                .name(\"Allow All Metrics\")\n                .description(\"Predefined policy rule. Allows access to all metrics (timeseries, histograms, and counters) for all accounts. If this rule is removed, all accounts can access all metrics if there are no matching blocking rules.\")\n                .prefixes(\"*\")\n                .tagsAnded(false)\n                .accessType(\"ALLOW\")\n                .userGroupIds(everyone.applyValue(getDefaultUserGroupResult -\u003e getDefaultUserGroupResult.groupId()))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  main:\n    type: wavefront:MetricsPolicy\n    properties:\n      policyRules:\n        - name: Allow All Metrics\n          description: Predefined policy rule. Allows access to all metrics (timeseries, histograms, and counters) for all accounts. If this rule is removed, all accounts can access all metrics if there are no matching blocking rules.\n          prefixes:\n            - '*'\n          tagsAnded: false\n          accessType: ALLOW\n          userGroupIds:\n            - ${everyone.groupId}\nvariables:\n  everyone:\n    fn::invoke:\n      Function: wavefront:getDefaultUserGroup\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}\n## Data Source\n\nProvides a Wavefront Metrics Policy Data Source. This allows looking up the current policy and associated rules.\n\n### Example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst policyMetricsPolicy = wavefront.getMetricsPolicy({});\nexport const policy = policyMetricsPolicy;\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\npolicy_metrics_policy = wavefront.get_metrics_policy()\npulumi.export(\"policy\", policy_metrics_policy)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var policyMetricsPolicy = Wavefront.GetMetricsPolicy.Invoke();\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"policy\"] = policyMetricsPolicy,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpolicyMetricsPolicy, err := wavefront.LookupMetricsPolicy(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"policy\", policyMetricsPolicy)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var policyMetricsPolicy = WavefrontFunctions.getMetricsPolicy();\n\n        ctx.export(\"policy\", policyMetricsPolicy.applyValue(getMetricsPolicyResult -\u003e getMetricsPolicyResult));\n    }\n}\n```\n```yaml\nvariables:\n  policyMetricsPolicy:\n    fn::invoke:\n      Function: wavefront:getMetricsPolicy\n      Arguments: {}\noutputs:\n  policy: ${policyMetricsPolicy}\n```\n\n\n## Import\n\nUsers can be imported by using the `updated_epoch_millis`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/metricsPolicy:MetricsPolicy some_metrics_policy 1651846476678\n```\n ","properties":{"customer":{"type":"string","description":"The customer the user is associated with.\n"},"policyRules":{"type":"array","items":{"$ref":"#/types/wavefront:index/MetricsPolicyPolicyRule:MetricsPolicyPolicyRule"},"description":"List of Metrics Policies, must have at least one entry.\n"},"updatedEpochMillis":{"type":"integer","description":"When the policy was applied in epoch_millis.\n"},"updaterId":{"type":"string","description":"The account_id who applied the current policy.\n"}},"required":["customer","policyRules","updatedEpochMillis","updaterId"],"inputProperties":{"policyRules":{"type":"array","items":{"$ref":"#/types/wavefront:index/MetricsPolicyPolicyRule:MetricsPolicyPolicyRule"},"description":"List of Metrics Policies, must have at least one entry.\n"}},"requiredInputs":["policyRules"],"stateInputs":{"description":"Input properties used for looking up and filtering MetricsPolicy resources.\n","properties":{"customer":{"type":"string","description":"The customer the user is associated with.\n"},"policyRules":{"type":"array","items":{"$ref":"#/types/wavefront:index/MetricsPolicyPolicyRule:MetricsPolicyPolicyRule"},"description":"List of Metrics Policies, must have at least one entry.\n"},"updatedEpochMillis":{"type":"integer","description":"When the policy was applied in epoch_millis.\n"},"updaterId":{"type":"string","description":"The account_id who applied the current policy.\n"}},"type":"object"}},"wavefront:index/role:Role":{"description":"Provides a Wavefront Role Resource. This allows roles to be created, updated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst role = new wavefront.Role(\"role\", {});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nrole = wavefront.Role(\"role\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var role = new Wavefront.Role(\"role\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewRole(ctx, \"role\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.Role;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var role = new Role(\"role\");\n\n    }\n}\n```\n```yaml\nresources:\n  role:\n    type: wavefront:Role\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRoles can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/role:Role some_role a411c16b-3cf7-4f03-bf11-8ca05aab898d\n```\n ","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":"A list of user groups or accounts to assign to this role.\n"},"description":{"type":"string","description":"A short description of the role.\n"},"name":{"type":"string","description":"The name of the role.\n"},"permissions":{"type":"array","items":{"type":"string"},"description":"A list of permissions to assign to this role. Valid options are\n`agent_management`, `alerts_management`, `dashboard_management`, `embedded_charts`, `events_management`, `external_links_management`,\n`host_tag_management`, `metrics_management`, and `user_management`.\n"}},"required":["name"],"inputProperties":{"assignees":{"type":"array","items":{"type":"string"},"description":"A list of user groups or accounts to assign to this role.\n"},"description":{"type":"string","description":"A short description of the role.\n"},"name":{"type":"string","description":"The name of the role.\n"},"permissions":{"type":"array","items":{"type":"string"},"description":"A list of permissions to assign to this role. Valid options are\n`agent_management`, `alerts_management`, `dashboard_management`, `embedded_charts`, `events_management`, `external_links_management`,\n`host_tag_management`, `metrics_management`, and `user_management`.\n"}},"stateInputs":{"description":"Input properties used for looking up and filtering Role resources.\n","properties":{"assignees":{"type":"array","items":{"type":"string"},"description":"A list of user groups or accounts to assign to this role.\n"},"description":{"type":"string","description":"A short description of the role.\n"},"name":{"type":"string","description":"The name of the role.\n"},"permissions":{"type":"array","items":{"type":"string"},"description":"A list of permissions to assign to this role. Valid options are\n`agent_management`, `alerts_management`, `dashboard_management`, `embedded_charts`, `events_management`, `external_links_management`,\n`host_tag_management`, `metrics_management`, and `user_management`.\n"}},"type":"object"}},"wavefront:index/serviceAccount:ServiceAccount":{"description":"Provides a Wavefront Service Account Resource. This allows service accounts to be created, updated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst basic = new wavefront.ServiceAccount(\"basic\", {\n    active: true,\n    identifier: \"sa::tftesting\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nbasic = wavefront.ServiceAccount(\"basic\",\n    active=True,\n    identifier=\"sa::tftesting\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var basic = new Wavefront.ServiceAccount(\"basic\", new()\n    {\n        Active = true,\n        Identifier = \"sa::tftesting\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewServiceAccount(ctx, \"basic\", \u0026wavefront.ServiceAccountArgs{\n\t\t\tActive:     pulumi.Bool(true),\n\t\t\tIdentifier: pulumi.String(\"sa::tftesting\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.ServiceAccount;\nimport com.pulumi.wavefront.ServiceAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var basic = new ServiceAccount(\"basic\", ServiceAccountArgs.builder()        \n            .active(true)\n            .identifier(\"sa::tftesting\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  basic:\n    type: wavefront:ServiceAccount\n    properties:\n      active: true\n      identifier: sa::tftesting\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nService accounts can be imported by using `identifier`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/serviceAccount:ServiceAccount basic sa::tftesting\n```\n ","properties":{"active":{"type":"boolean","description":"Whether or not the service account is active.\n"},"description":{"type":"string","description":"The description of the service account.\n"},"identifier":{"type":"string","description":"The unique identifier of the service account to create. Must have the prefix `sa::`.\n"},"ingestionPolicy":{"type":"string","description":"ID of ingestion policy.\n"},"permissions":{"type":"array","items":{"type":"string"},"description":"List of permission to grant to this service account. Valid options are\n`agent_management`, `alerts_management`, `dashboard_management`, `embedded_charts`, `events_management`, `external_links_management`,\n`host_tag_management`, `metrics_management`, and `user_management`.\n"},"userGroups":{"type":"array","items":{"type":"string"},"description":"List of user groups for this service account.\n"}},"required":["identifier","permissions","userGroups"],"inputProperties":{"active":{"type":"boolean","description":"Whether or not the service account is active.\n"},"description":{"type":"string","description":"The description of the service account.\n"},"identifier":{"type":"string","description":"The unique identifier of the service account to create. Must have the prefix `sa::`.\n","willReplaceOnChanges":true},"ingestionPolicy":{"type":"string","description":"ID of ingestion policy.\n"},"permissions":{"type":"array","items":{"type":"string"},"description":"List of permission to grant to this service account. Valid options are\n`agent_management`, `alerts_management`, `dashboard_management`, `embedded_charts`, `events_management`, `external_links_management`,\n`host_tag_management`, `metrics_management`, and `user_management`.\n"},"userGroups":{"type":"array","items":{"type":"string"},"description":"List of user groups for this service account.\n"}},"requiredInputs":["identifier"],"stateInputs":{"description":"Input properties used for looking up and filtering ServiceAccount resources.\n","properties":{"active":{"type":"boolean","description":"Whether or not the service account is active.\n"},"description":{"type":"string","description":"The description of the service account.\n"},"identifier":{"type":"string","description":"The unique identifier of the service account to create. Must have the prefix `sa::`.\n","willReplaceOnChanges":true},"ingestionPolicy":{"type":"string","description":"ID of ingestion policy.\n"},"permissions":{"type":"array","items":{"type":"string"},"description":"List of permission to grant to this service account. Valid options are\n`agent_management`, `alerts_management`, `dashboard_management`, `embedded_charts`, `events_management`, `external_links_management`,\n`host_tag_management`, `metrics_management`, and `user_management`.\n"},"userGroups":{"type":"array","items":{"type":"string"},"description":"List of user groups for this service account.\n"}},"type":"object"}},"wavefront:index/user:User":{"description":"Provides a Wavefront User Resource. This allows user accounts to be created, updated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst basic = new wavefront.User(\"basic\", {email: \"test+tftesting@example.com\"});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nbasic = wavefront.User(\"basic\", email=\"test+tftesting@example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var basic = new Wavefront.User(\"basic\", new()\n    {\n        Email = \"test+tftesting@example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewUser(ctx, \"basic\", \u0026wavefront.UserArgs{\n\t\t\tEmail: pulumi.String(\"test+tftesting@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.User;\nimport com.pulumi.wavefront.UserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var basic = new User(\"basic\", UserArgs.builder()        \n            .email(\"test+tftesting@example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  basic:\n    type: wavefront:User\n    properties:\n      email: test+tftesting@example.com\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUsers can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/user:User some_user test@example.com\n```\n ","properties":{"customer":{"type":"string","description":"The customer the user is associated with.\n"},"email":{"type":"string","description":"The unique identifier of the user account to create. Must be a valid email address.\n"},"permissions":{"type":"array","items":{"type":"string"},"description":"List of permission to grant to this user. Valid options are\n`agent_management`, `alerts_management`, `dashboard_management`, `embedded_charts`, `events_management`, `external_links_management`,\n`host_tag_management`, `metrics_management`, and `user_management`.\n"},"userGroups":{"type":"array","items":{"type":"string"},"description":"List of user groups to this user.\n"}},"required":["customer","email","permissions","userGroups"],"inputProperties":{"customer":{"type":"string","description":"The customer the user is associated with.\n"},"email":{"type":"string","description":"The unique identifier of the user account to create. Must be a valid email address.\n","willReplaceOnChanges":true},"permissions":{"type":"array","items":{"type":"string"},"description":"List of permission to grant to this user. Valid options are\n`agent_management`, `alerts_management`, `dashboard_management`, `embedded_charts`, `events_management`, `external_links_management`,\n`host_tag_management`, `metrics_management`, and `user_management`.\n"},"userGroups":{"type":"array","items":{"type":"string"},"description":"List of user groups to this user.\n"}},"requiredInputs":["email"],"stateInputs":{"description":"Input properties used for looking up and filtering User resources.\n","properties":{"customer":{"type":"string","description":"The customer the user is associated with.\n"},"email":{"type":"string","description":"The unique identifier of the user account to create. Must be a valid email address.\n","willReplaceOnChanges":true},"permissions":{"type":"array","items":{"type":"string"},"description":"List of permission to grant to this user. Valid options are\n`agent_management`, `alerts_management`, `dashboard_management`, `embedded_charts`, `events_management`, `external_links_management`,\n`host_tag_management`, `metrics_management`, and `user_management`.\n"},"userGroups":{"type":"array","items":{"type":"string"},"description":"List of user groups to this user.\n"}},"type":"object"}},"wavefront:index/userGroup:UserGroup":{"description":"Provides a Wavefront User Group Resource. This allows user groups to be created, updated, and deleted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst basic = new wavefront.UserGroup(\"basic\", {description: \"Basic User Group for Unit Tests\"});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nbasic = wavefront.UserGroup(\"basic\", description=\"Basic User Group for Unit Tests\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var basic = new Wavefront.UserGroup(\"basic\", new()\n    {\n        Description = \"Basic User Group for Unit Tests\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.NewUserGroup(ctx, \"basic\", \u0026wavefront.UserGroupArgs{\n\t\t\tDescription: pulumi.String(\"Basic User Group for Unit Tests\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.UserGroup;\nimport com.pulumi.wavefront.UserGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var basic = new UserGroup(\"basic\", UserGroupArgs.builder()        \n            .description(\"Basic User Group for Unit Tests\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  basic:\n    type: wavefront:UserGroup\n    properties:\n      description: Basic User Group for Unit Tests\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nUser Groups can be imported by using the `id`, e.g.:\n\n```sh\n $ pulumi import wavefront:index/userGroup:UserGroup some_group a411c16b-3cf7-4f03-bf11-8ca05aab898d\n```\n ","properties":{"description":{"type":"string","description":"A short description of the user group.\n"},"name":{"type":"string","description":"The name of the user group.\n"}},"required":["description","name"],"inputProperties":{"description":{"type":"string","description":"A short description of the user group.\n"},"name":{"type":"string","description":"The name of the user group.\n"}},"requiredInputs":["description"],"stateInputs":{"description":"Input properties used for looking up and filtering UserGroup resources.\n","properties":{"description":{"type":"string","description":"A short description of the user group.\n"},"name":{"type":"string","description":"The name of the user group.\n"}},"type":"object"}}},"functions":{"wavefront:index/getAlert:getAlert":{"description":"Use this data source to get information about a Wavefront alert by its ID.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getAlert({\n    id: \"alert-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_alert(id=\"alert-id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetAlert.Invoke(new()\n    {\n        Id = \"alert-id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.LookupAlert(ctx, \u0026wavefront.LookupAlertArgs{\n\t\t\tId: \"alert-id\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetAlertArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getAlert(GetAlertArgs.builder()\n            .id(\"alert-id\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getAlert\n      Arguments:\n        id: alert-id\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getAlert.\n","properties":{"id":{"type":"string","description":"The ID associated with the alert data to be fetched.\n"},"targets":{"type":"object","additionalProperties":{"type":"string"},"description":"A comma-separated list of the email addresses or integration endpoints (such as PagerDuty or webhook) to notify when the alert status changes. Multiple target types can be in the list.\n"}},"type":"object","required":["id"]},"outputs":{"description":"A collection of values returned by getAlert.\n","properties":{"additionalInformation":{"description":"User-supplied additional explanatory information about this alert.\n","type":"string"},"alertTriageDashboards":{"description":"A set of user-supplied dashboard and parameters to create dashboard links for triaging alerts.\n","items":{"$ref":"#/types/wavefront:index/getAlertAlertTriageDashboard:getAlertAlertTriageDashboard"},"type":"array"},"alertType":{"description":"The type of alert in Wavefront.\n","type":"string"},"canModifies":{"description":"A list of users or groups that can modify the alert.\n","items":{"type":"string"},"type":"array"},"canViews":{"description":"A list of users or groups that can view the alert.\n","items":{"type":"string"},"type":"array"},"condition":{"description":"A Wavefront query that is evaluated at regular intervals (default is 1 minute). The alert fires and notifications are triggered when a data series matching this query evaluates to a non-zero value for a set number of consecutive minutes.\n","type":"string"},"conditions":{"additionalProperties":{"type":"string"},"description":"A map of severity to condition for which this alert will trigger.\n","type":"object"},"displayExpression":{"description":"A second query the results of which are displayed in the alert user interface instead of the condition query.\n","type":"string"},"evaluateRealtimeData":{"description":"A Boolean flag to enable real-time evaluation.\n","type":"boolean"},"failingHostLabelPairs":{"description":"A list of failing host label pairs.\n","items":{"$ref":"#/types/wavefront:index/getAlertFailingHostLabelPair:getAlertFailingHostLabelPair"},"type":"array"},"id":{"description":"The ID of the alert in Wavefront.\n","type":"string"},"inMaintenanceHostLabelPairs":{"description":"A list of in maintenance host label pairs.\n","items":{"$ref":"#/types/wavefront:index/getAlertInMaintenanceHostLabelPair:getAlertInMaintenanceHostLabelPair"},"type":"array"},"includeObsoleteMetrics":{"description":"A Boolean flag indicating whether to include obsolete metrics or not.\n","type":"boolean"},"minutes":{"description":"The number of consecutive minutes that a series matching the condition query must evaluate to \"true\" (non-zero value) before the alert fires.\n","type":"integer"},"name":{"description":"The name of the alert as it is displayed in Wavefront.\n","type":"string"},"notificationResendFrequencyMinutes":{"description":"How often to re-trigger a continually failing alert.\n","type":"integer"},"processRateMinutes":{"description":"The specified query is executed every `process_rate_minutes` minutes.\n","type":"integer"},"resolveAfterMinutes":{"description":"The number of consecutive minutes that a firing series matching the condition query must evaluate to \"false\" (zero value) before the alert resolves.\n","type":"integer"},"runbookLinks":{"description":"A list of user-supplied runbook links for this alert.\n","items":{"type":"string"},"type":"array"},"severity":{"description":"The severity of the alert.\n","type":"string"},"severityLists":{"items":{"type":"string"},"type":"array"},"statuses":{"description":"The status of the alert.\n","items":{"type":"string"},"type":"array"},"tags":{"description":"A set of tags assigned to the alert.\n","items":{"type":"string"},"type":"array"},"target":{"description":"An email address or integration endpoint (such as PagerDuty or webhook) to notify when the alert status changes.\n","type":"string"},"targets":{"additionalProperties":{"type":"string"},"description":"A comma-separated list of the email addresses or integration endpoints (such as PagerDuty or webhook) to notify when the alert status changes. Multiple target types can be in the list.\n","type":"object"}},"required":["additionalInformation","alertTriageDashboards","alertType","canModifies","canViews","condition","conditions","displayExpression","evaluateRealtimeData","failingHostLabelPairs","id","inMaintenanceHostLabelPairs","includeObsoleteMetrics","minutes","name","notificationResendFrequencyMinutes","processRateMinutes","resolveAfterMinutes","runbookLinks","severity","severityLists","statuses","tags","target"],"type":"object"}},"wavefront:index/getAlerts:getAlerts":{"description":"Use this data source to get information about all Wavefront alerts.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getAlerts({\n    limit: 10,\n    offset: 0,\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_alerts(limit=10,\n    offset=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetAlerts.Invoke(new()\n    {\n        Limit = 10,\n        Offset = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.GetAlerts(ctx, \u0026wavefront.GetAlertsArgs{\n\t\t\tLimit:  pulumi.IntRef(10),\n\t\t\tOffset: pulumi.IntRef(0),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetAlertsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getAlerts(GetAlertsArgs.builder()\n            .limit(10)\n            .offset(0)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getAlerts\n      Arguments:\n        limit: 10\n        offset: 0\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getAlerts.\n","properties":{"limit":{"type":"integer","description":"Limit is the maximum number of results to be returned. Defaults to 100.\n"},"offset":{"type":"integer","description":"Offset is the offset from the first result to be returned. Defaults to 0.\n"}},"type":"object"},"outputs":{"description":"A collection of values returned by getAlerts.\n","properties":{"alerts":{"description":"List of all alerts in Wavefront. For each alert you will see a list of attributes.\n","items":{"$ref":"#/types/wavefront:index/getAlertsAlert:getAlertsAlert"},"type":"array"},"id":{"description":"The provider-assigned unique ID for this managed resource.\n","type":"string"},"limit":{"type":"integer"},"offset":{"type":"integer"}},"required":["alerts","id"],"type":"object"}},"wavefront:index/getDashboard:getDashboard":{"description":"Use this data source to get information about a certain Wavefront dashboard by its ID.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getDashboard({\n    id: \"dashboard-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_dashboard(id=\"dashboard-id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetDashboard.Invoke(new()\n    {\n        Id = \"dashboard-id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.LookupDashboard(ctx, \u0026wavefront.LookupDashboardArgs{\n\t\t\tId: \"dashboard-id\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetDashboardArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getDashboard(GetDashboardArgs.builder()\n            .id(\"dashboard-id\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getDashboard\n      Arguments:\n        id: dashboard-id\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getDashboard.\n","properties":{"id":{"type":"string","description":"The ID associated with the dashboard data to be fetched.\n"}},"type":"object","required":["id"]},"outputs":{"description":"A collection of values returned by getDashboard.\n","properties":{"canModifies":{"description":"A list of users that have modify ACL access to the dashboard.\n","items":{"type":"string"},"type":"array"},"canViews":{"description":"A list of users that have view ACL access to the dashboard.\n","items":{"type":"string"},"type":"array"},"chartTitleBgColor":{"type":"string"},"chartTitleColor":{"type":"string"},"chartTitleScalar":{"type":"integer"},"createdEpochMillis":{"type":"integer"},"creatorId":{"type":"string"},"customer":{"type":"string"},"defaultEndTime":{"type":"integer"},"defaultStartTime":{"type":"integer"},"defaultTimeWindow":{"type":"string"},"deleted":{"type":"boolean"},"description":{"description":"Description of the chart.\n","type":"string"},"displayDescription":{"type":"boolean"},"displayQueryParameters":{"description":"Whether the dashboard parameters section is opened by default when the dashboard\nis shown.\n","type":"boolean"},"displaySectionTableOfContents":{"description":"Whether the \"pills\" quick-linked the sections of the dashboard are\ndisplayed by default when the dashboard is shown.\n","type":"boolean"},"eventFilterType":{"description":"How charts belonging to this dashboard should display events. `BYCHART` is default if\nunspecified. Valid options are: `BYCHART`, `AUTOMATIC`, `ALL`, `NONE`, `BYDASHBOARD`, and `BYCHARTANDDASHBOARD`.\n","type":"string"},"eventQuery":{"type":"string"},"favorite":{"type":"boolean"},"hidden":{"type":"boolean"},"id":{"type":"string"},"name":{"description":"The name of the parameters.\n","type":"string"},"numCharts":{"type":"integer"},"numFavorites":{"type":"integer"},"parameterDetails":{"description":"The current JSON representation of dashboard parameters. See parameter details.\n","items":{"$ref":"#/types/wavefront:index/getDashboardParameterDetail:getDashboardParameterDetail"},"type":"array"},"parameters":{"additionalProperties":{"$ref":"pulumi.json#/Any"},"type":"object"},"sections":{"items":{"$ref":"#/types/wavefront:index/getDashboardSection:getDashboardSection"},"type":"array"},"systemOwned":{"type":"boolean"},"tags":{"description":"A set of tags to assign to this resource.\n","items":{"type":"string"},"type":"array"},"updatedEpochMillis":{"type":"integer"},"updaterId":{"type":"string"},"url":{"description":"Unique identifier, also a URL slug of the dashboard.\n","type":"string"},"viewsLastDay":{"type":"integer"},"viewsLastMonth":{"type":"integer"},"viewsLastWeek":{"type":"integer"}},"required":["canModifies","canViews","chartTitleBgColor","chartTitleColor","chartTitleScalar","createdEpochMillis","creatorId","customer","defaultEndTime","defaultStartTime","defaultTimeWindow","deleted","description","displayDescription","displayQueryParameters","displaySectionTableOfContents","eventFilterType","eventQuery","favorite","hidden","id","name","numCharts","numFavorites","parameterDetails","parameters","sections","systemOwned","tags","updatedEpochMillis","updaterId","url","viewsLastDay","viewsLastMonth","viewsLastWeek"],"type":"object"}},"wavefront:index/getDashboards:getDashboards":{"description":"Use this data source to get information about all Wavefront dashboards.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getDashboards({\n    limit: 10,\n    offset: 0,\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_dashboards(limit=10,\n    offset=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetDashboards.Invoke(new()\n    {\n        Limit = 10,\n        Offset = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.GetDashboards(ctx, \u0026wavefront.GetDashboardsArgs{\n\t\t\tLimit:  pulumi.IntRef(10),\n\t\t\tOffset: pulumi.IntRef(0),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetDashboardsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getDashboards(GetDashboardsArgs.builder()\n            .limit(10)\n            .offset(0)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getDashboards\n      Arguments:\n        limit: 10\n        offset: 0\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getDashboards.\n","properties":{"limit":{"type":"integer","description":"Limit is the maximum number of results to be returned. Defaults to 100.\n"},"offset":{"type":"integer","description":"Offset is the offset from the first result to be returned. Defaults to 0.\n"}},"type":"object"},"outputs":{"description":"A collection of values returned by getDashboards.\n","properties":{"dashboards":{"description":"List of all Wavefront dashboards. For each dashboard you will see a list of attributes.\n","items":{"$ref":"#/types/wavefront:index/getDashboardsDashboard:getDashboardsDashboard"},"type":"array"},"id":{"description":"The provider-assigned unique ID for this managed resource.\n","type":"string"},"limit":{"type":"integer"},"offset":{"type":"integer"}},"required":["dashboards","id"],"type":"object"}},"wavefront:index/getDefaultUserGroup:getDefaultUserGroup":{"description":"Use this data source to get the Group ID of the `Everyone` group in Wavefront.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst everyoneGroup = wavefront.getDefaultUserGroup({});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\neveryone_group = wavefront.get_default_user_group()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var everyoneGroup = Wavefront.GetDefaultUserGroup.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.GetDefaultUserGroup(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var everyoneGroup = WavefrontFunctions.getDefaultUserGroup();\n\n    }\n}\n```\n```yaml\nvariables:\n  everyoneGroup:\n    fn::invoke:\n      Function: wavefront:getDefaultUserGroup\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}","outputs":{"description":"A collection of values returned by getDefaultUserGroup.\n","properties":{"groupId":{"description":"Set to the Group ID of the `Everyone` group, suitable for referencing\nin other resources that support group memberships.\n","type":"string"},"id":{"description":"The provider-assigned unique ID for this managed resource.\n","type":"string"}},"required":["groupId","id"],"type":"object"}},"wavefront:index/getDerivedMetric:getDerivedMetric":{"description":"Use this data source to get information about a certain Wavefront derived metric by its ID.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getDerivedMetric({\n    id: \"derived_metric_id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_derived_metric(id=\"derived_metric_id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetDerivedMetric.Invoke(new()\n    {\n        Id = \"derived_metric_id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.LookupDerivedMetric(ctx, \u0026wavefront.LookupDerivedMetricArgs{\n\t\t\tId: \"derived_metric_id\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetDerivedMetricArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getDerivedMetric(GetDerivedMetricArgs.builder()\n            .id(\"derived_metric_id\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getDerivedMetric\n      Arguments:\n        id: derived_metric_id\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getDerivedMetric.\n","properties":{"id":{"type":"string","description":"The ID associated with the derived metric data to be fetched.\n"}},"type":"object","required":["id"]},"outputs":{"description":"A collection of values returned by getDerivedMetric.\n","properties":{"additionalInformation":{"description":"User-supplied additional explanatory information about the derived metric.\n","type":"string"},"createUserId":{"description":"The ID of the user who created the derived metric.\n","type":"string"},"createdEpochMillis":{"description":"The timestamp in epoch milliseconds indicating when the derived metric is created.\n","type":"integer"},"deleted":{"description":"A Boolean flag indicating whether the derived metric is deleted or not.\n","type":"boolean"},"hostsUseds":{"description":"A list of hosts used in the derived metric.\n","items":{"type":"string"},"type":"array"},"id":{"description":"The ID of the derived metric in Wavefront.\n","type":"string"},"inTrash":{"description":"A Boolean variable indicating trash status.\n","type":"boolean"},"includeObsoleteMetrics":{"description":"A Boolean flag indicating whether to include obsolete metrics or not.\n","type":"boolean"},"lastErrorMessage":{"description":"Last error message occurred.\n","type":"string"},"lastFailedTime":{"description":"Timestamp of the last failed derived metric.\n","type":"integer"},"lastProcessedMillis":{"description":"The last processed timestamp.\n","type":"integer"},"lastQueryTime":{"description":"The timestamp indicating the last time the query was executed.\n","type":"integer"},"metricsUseds":{"description":"A list of metrics used in the derived metric.\n","items":{"type":"string"},"type":"array"},"minutes":{"description":"How frequently the query generating the derived metric is run.\n","type":"integer"},"name":{"description":"The name of the derived metric in Wavefront.\n","type":"string"},"pointsScannedAtLastQuery":{"description":"The number of points scanned when last query was executed.\n","type":"integer"},"processRateMinutes":{"description":"The specified query is executed every `process_rate_minutes` minutes.\n","type":"integer"},"query":{"description":"A Wavefront query that is evaluated at regular intervals (default is 1 minute).\n","type":"string"},"queryFailing":{"description":"A Boolean variable indicating whether query is failing for the derived metric.\n","type":"boolean"},"queryQbEnabled":{"description":"A Boolean flag for enabling `query_qb`\n","type":"boolean"},"statuses":{"description":"The status of the derived metric.\n","items":{"type":"string"},"type":"array"},"tags":{"description":"A set of tags assigned to the derived metric.\n","items":{"type":"string"},"type":"array"},"updateUserId":{"description":"The ID of the user who updated the derived metric.\n","type":"string"},"updatedEpochMillis":{"description":"The timestamp in epoch milliseconds indicating when the derived metric is updated.\n","type":"integer"}},"required":["additionalInformation","createUserId","createdEpochMillis","deleted","hostsUseds","id","inTrash","includeObsoleteMetrics","lastErrorMessage","lastFailedTime","lastProcessedMillis","lastQueryTime","metricsUseds","minutes","name","pointsScannedAtLastQuery","processRateMinutes","query","queryFailing","queryQbEnabled","statuses","tags","updateUserId","updatedEpochMillis"],"type":"object"}},"wavefront:index/getDerivedMetrics:getDerivedMetrics":{"description":"Use this data source to get information about all Wavefront derived metrics.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getDerivedMetrics({\n    limit: 10,\n    offset: 0,\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_derived_metrics(limit=10,\n    offset=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetDerivedMetrics.Invoke(new()\n    {\n        Limit = 10,\n        Offset = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.GetDerivedMetrics(ctx, \u0026wavefront.GetDerivedMetricsArgs{\n\t\t\tLimit:  pulumi.IntRef(10),\n\t\t\tOffset: pulumi.IntRef(0),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetDerivedMetricsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getDerivedMetrics(GetDerivedMetricsArgs.builder()\n            .limit(10)\n            .offset(0)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getDerivedMetrics\n      Arguments:\n        limit: 10\n        offset: 0\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getDerivedMetrics.\n","properties":{"limit":{"type":"integer","description":"Limit is the maximum number of results to be returned. Defaults to 100.\n"},"offset":{"type":"integer","description":"Offset is the offset from the first result to be returned. Defaults to 0.\n"}},"type":"object"},"outputs":{"description":"A collection of values returned by getDerivedMetrics.\n","properties":{"derivedMetrics":{"description":"List of all derived metrics in Wavefront. For each derived metric you will see a list of attributes.\n","items":{"$ref":"#/types/wavefront:index/getDerivedMetricsDerivedMetric:getDerivedMetricsDerivedMetric"},"type":"array"},"id":{"description":"The provider-assigned unique ID for this managed resource.\n","type":"string"},"limit":{"type":"integer"},"offset":{"type":"integer"}},"required":["derivedMetrics","id"],"type":"object"}},"wavefront:index/getEvent:getEvent":{"description":"Use this data source to get information about a certain Wavefront event.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getEvent({\n    id: \"sample-event-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_event(id=\"sample-event-id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetEvent.Invoke(new()\n    {\n        Id = \"sample-event-id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.LookupEvent(ctx, \u0026wavefront.LookupEventArgs{\n\t\t\tId: \"sample-event-id\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetEventArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getEvent(GetEventArgs.builder()\n            .id(\"sample-event-id\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getEvent\n      Arguments:\n        id: sample-event-id\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getEvent.\n","properties":{"id":{"type":"string","description":"The ID associated with the event data to be fetched.\n"}},"type":"object","required":["id"]},"outputs":{"description":"A collection of values returned by getEvent.\n","properties":{"annotations":{"additionalProperties":{"type":"string"},"description":"Annotations associated with the event.\n","type":"object"},"details":{"description":"The description of the event.\n","type":"string"},"endtimeKey":{"type":"integer"},"id":{"description":"The ID of the event in Wavefront.\n","type":"string"},"isEphemeral":{"description":"A Boolean flag. If set to `true`, creates a point-in-time event (i.e. with no duration).\n","type":"boolean"},"name":{"description":"The name of the event in Wavefront.\n","type":"string"},"severity":{"description":"The severity category of the event.\n","type":"string"},"startTime":{"description":"The start time of the event in epoch milliseconds.\n","type":"integer"},"tags":{"description":"A set of tags assigned to the event.\n","items":{"type":"string"},"type":"array"},"type":{"description":"The type of the event.\n","type":"string"}},"required":["annotations","details","endtimeKey","id","isEphemeral","name","severity","startTime","tags","type"],"type":"object"}},"wavefront:index/getEvents:getEvents":{"description":"Use this data source to get information about all Wavefront events.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getEvents({\n    earliestStartTimeEpochMillis: 1665427195,\n    latestStartTimeEpochMillis: 1665427195,\n    limit: 10,\n    offset: 0,\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_events(earliest_start_time_epoch_millis=1665427195,\n    latest_start_time_epoch_millis=1665427195,\n    limit=10,\n    offset=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetEvents.Invoke(new()\n    {\n        EarliestStartTimeEpochMillis = 1665427195,\n        LatestStartTimeEpochMillis = 1665427195,\n        Limit = 10,\n        Offset = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.GetEvents(ctx, \u0026wavefront.GetEventsArgs{\n\t\t\tEarliestStartTimeEpochMillis: 1665427195,\n\t\t\tLatestStartTimeEpochMillis:   1665427195,\n\t\t\tLimit:                        pulumi.IntRef(10),\n\t\t\tOffset:                       pulumi.IntRef(0),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetEventsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getEvents(GetEventsArgs.builder()\n            .earliestStartTimeEpochMillis(1665427195)\n            .latestStartTimeEpochMillis(1665427195)\n            .limit(10)\n            .offset(0)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getEvents\n      Arguments:\n        earliestStartTimeEpochMillis: 1.665427195e+09\n        latestStartTimeEpochMillis: 1.665427195e+09\n        limit: 10\n        offset: 0\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getEvents.\n","properties":{"earliestStartTimeEpochMillis":{"type":"integer","description":"The earliest start time in epoch milliseconds.\n"},"latestStartTimeEpochMillis":{"type":"integer","description":"The latest start time in epoch milliseconds.\n"},"limit":{"type":"integer","description":"Limit is the maximum number of results to be returned. Defaults to 100.\n"},"offset":{"type":"integer","description":"Offset is the offset from the first result to be returned. Defaults to 0.\n"}},"type":"object","required":["earliestStartTimeEpochMillis","latestStartTimeEpochMillis"]},"outputs":{"description":"A collection of values returned by getEvents.\n","properties":{"earliestStartTimeEpochMillis":{"description":"Earliest start time in epoch milliseconds.\n","type":"integer"},"events":{"description":"List of all events in Wavefront. For each event you will see a list of attributes.\n","items":{"$ref":"#/types/wavefront:index/getEventsEvent:getEventsEvent"},"type":"array"},"id":{"description":"The provider-assigned unique ID for this managed resource.\n","type":"string"},"latestStartTimeEpochMillis":{"description":"Latest start time in epoch milliseconds.\n","type":"integer"},"limit":{"type":"integer"},"offset":{"type":"integer"}},"required":["earliestStartTimeEpochMillis","events","latestStartTimeEpochMillis","id"],"type":"object"}},"wavefront:index/getExternalLink:getExternalLink":{"description":"Use this data source to get information about a Wavefront external link by its ID.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getExternalLink({\n    id: \"sample-external-link-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_external_link(id=\"sample-external-link-id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetExternalLink.Invoke(new()\n    {\n        Id = \"sample-external-link-id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.LookupExternalLink(ctx, \u0026wavefront.LookupExternalLinkArgs{\n\t\t\tId: \"sample-external-link-id\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetExternalLinkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getExternalLink(GetExternalLinkArgs.builder()\n            .id(\"sample-external-link-id\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getExternalLink\n      Arguments:\n        id: sample-external-link-id\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getExternalLink.\n","properties":{"id":{"type":"string","description":"The ID of the external link.\n"}},"type":"object","required":["id"]},"outputs":{"description":"A collection of values returned by getExternalLink.\n","properties":{"createdEpochMillis":{"description":"The timestamp in epoch milliseconds indicating when the external link is created.\n","type":"integer"},"creatorId":{"description":"The ID of the user who created the external link.\n","type":"string"},"description":{"description":"Human-readable description of this link.\n","type":"string"},"id":{"description":"The ID of the external link.\n","type":"string"},"isLogIntegration":{"description":"Whether this is a \"Log Integration\" subType of external link.\n","type":"boolean"},"metricFilterRegex":{"description":"Controls whether a link is displayed in the context menu of a highlighted series. If present, the metric name of the highlighted series must match this regular expression in order for the link to be displayed.\n","type":"string"},"name":{"description":"The name of the external link.\n","type":"string"},"pointTagFilterRegexes":{"additionalProperties":{"type":"string"},"description":"(Optional) Controls whether a link is displayed in the context menu of a highlighted\nseries. This is a map from string to regular expression. The highlighted series must contain point tags whose\nkeys are present in the keys of this map and whose values match the regular expressions associated with those\nkeys in order for the link to be displayed.\n","type":"object"},"sourceFilterRegex":{"description":"Controls whether a link is displayed in the context menu of a highlighted series. If present, the source name of the highlighted series must match this regular expression in order for the link to be displayed.\n","type":"string"},"template":{"description":"The mustache template for the link. The template must expand to a full URL, including scheme, origin, etc.\n","type":"string"},"updatedEpochMillis":{"description":"The timestamp in epoch milliseconds indicating when the external link is updated.\n","type":"integer"},"updaterId":{"description":"The ID of the user who updated the external link.\n","type":"string"}},"required":["createdEpochMillis","creatorId","description","id","isLogIntegration","metricFilterRegex","name","pointTagFilterRegexes","sourceFilterRegex","template","updatedEpochMillis","updaterId"],"type":"object"}},"wavefront:index/getExternalLinks:getExternalLinks":{"description":"Use this data source to get information about all Wavefront external links.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getExternalLinks({\n    limit: 10,\n    offset: 0,\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_external_links(limit=10,\n    offset=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetExternalLinks.Invoke(new()\n    {\n        Limit = 10,\n        Offset = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.GetExternalLinks(ctx, \u0026wavefront.GetExternalLinksArgs{\n\t\t\tLimit:  pulumi.IntRef(10),\n\t\t\tOffset: pulumi.IntRef(0),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetExternalLinksArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getExternalLinks(GetExternalLinksArgs.builder()\n            .limit(10)\n            .offset(0)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getExternalLinks\n      Arguments:\n        limit: 10\n        offset: 0\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getExternalLinks.\n","properties":{"limit":{"type":"integer","description":"Limit is the maximum number of results to be returned. Defaults to 100.\n"},"offset":{"type":"integer","description":"Offset is the offset from the first result to be returned. Defaults to 0.\n"}},"type":"object"},"outputs":{"description":"A collection of values returned by getExternalLinks.\n","properties":{"externalLinks":{"description":"List of all external links in Wavefront. For each external link you will see a list of attributes.\n","items":{"$ref":"#/types/wavefront:index/getExternalLinksExternalLink:getExternalLinksExternalLink"},"type":"array"},"id":{"description":"The provider-assigned unique ID for this managed resource.\n","type":"string"},"limit":{"type":"integer"},"offset":{"type":"integer"}},"required":["externalLinks","id"],"type":"object"}},"wavefront:index/getMaintenanceWindow:getMaintenanceWindow":{"description":"Use this data source to get information about a Wavefront maintenance window by its ID.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getMaintenanceWindow({\n    id: \"sample-maintenance-window-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_maintenance_window(id=\"sample-maintenance-window-id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetMaintenanceWindow.Invoke(new()\n    {\n        Id = \"sample-maintenance-window-id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.LookupMaintenanceWindow(ctx, \u0026wavefront.LookupMaintenanceWindowArgs{\n\t\t\tId: \"sample-maintenance-window-id\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetMaintenanceWindowArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getMaintenanceWindow(GetMaintenanceWindowArgs.builder()\n            .id(\"sample-maintenance-window-id\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getMaintenanceWindow\n      Arguments:\n        id: sample-maintenance-window-id\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getMaintenanceWindow.\n","properties":{"id":{"type":"string","description":"The ID of the maintenance window.\n"}},"type":"object","required":["id"]},"outputs":{"description":"A collection of values returned by getMaintenanceWindow.\n","properties":{"createdEpochMillis":{"description":"The timestamp in epoch milliseconds indicating when the maintenance window is created.\n","type":"integer"},"creatorId":{"description":"The ID of the user who created the maintenance window.\n","type":"string"},"customerId":{"description":"The ID of the customer in Wavefront.\n","type":"string"},"endTimeInSeconds":{"description":"The end time in seconds after 1 Jan 1970 GMT.\n","type":"integer"},"eventName":{"description":"The event name of the maintenance window.\n","type":"string"},"hostTagGroupHostNamesGroupAnded":{"description":"If set to `true`, the source or host must be in `relevant_host_names` and must have tags matching the specification formed by `relevant_host_tags` and `relevant_host_tags_anded` in for this maintenance window to apply.\nIf set to false, the source or host must either be in `relevant_host_names` or match `relevant_host_tags` and `relevant_host_tags_anded`. Default value is `false`.\n","type":"boolean"},"id":{"description":"The ID of the maintenance window.\n","type":"string"},"reason":{"description":"The reason for the maintenance window.\n","type":"string"},"relevantCustomerTags":{"description":"The list of alert tags whose matching alerts will be put into maintenance because\nof this maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or `relevant_host_names`\nis required.\n","items":{"type":"string"},"type":"array"},"relevantHostNames":{"description":"The list of source or host names that will be put into maintenance because of this\nmaintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or `relevant_host_names`\nis required.\n","items":{"type":"string"},"type":"array"},"relevantHostTags":{"description":"The list of source or host tags whose matching sources or hosts will be put into maintenance\nbecause of this maintenance window. At least one of `relevant_customer_tags`, `relevant_host_tags`, or\n`relevant_host_names` is required.\n","items":{"type":"string"},"type":"array"},"relevantHostTagsAnded":{"description":"Whether to AND source or host tags listed in `relevant_host_tags`.\nIf set to `true`, the source or host must contain all tags for the maintenance window to apply. If set to `false`,\nthe tags are OR'ed, and the source or host must contain one of the tags. Default value is `false`.\n","type":"boolean"},"runningState":{"description":"The running state of the maintenance window.\n","type":"string"},"sortAttr":{"type":"integer"},"startTimeInSeconds":{"description":"The start time in seconds after 1 Jan 1970 GMT.\n","type":"integer"},"title":{"description":"The title of the maintenance window.\n","type":"string"},"updatedEpochMillis":{"description":"The timestamp in epoch milliseconds indicating when the maintenance window is updated.\n","type":"integer"},"updaterId":{"description":"The ID of the user who updated the maintenance window.\n","type":"string"}},"required":["createdEpochMillis","creatorId","customerId","endTimeInSeconds","eventName","hostTagGroupHostNamesGroupAnded","id","reason","relevantCustomerTags","relevantHostNames","relevantHostTags","relevantHostTagsAnded","runningState","sortAttr","startTimeInSeconds","title","updatedEpochMillis","updaterId"],"type":"object"}},"wavefront:index/getMaintenanceWindowAll:getMaintenanceWindowAll":{"inputs":{"description":"A collection of arguments for invoking getMaintenanceWindowAll.\n","properties":{"limit":{"type":"integer"},"offset":{"type":"integer"}},"type":"object"},"outputs":{"description":"A collection of values returned by getMaintenanceWindowAll.\n","properties":{"id":{"description":"The provider-assigned unique ID for this managed resource.\n","type":"string"},"limit":{"type":"integer"},"maintenanceWindows":{"items":{"$ref":"#/types/wavefront:index/getMaintenanceWindowAllMaintenanceWindow:getMaintenanceWindowAllMaintenanceWindow"},"type":"array"},"offset":{"type":"integer"}},"required":["maintenanceWindows","id"],"type":"object"}},"wavefront:index/getMetricsPolicy:getMetricsPolicy":{"outputs":{"description":"A collection of values returned by getMetricsPolicy.\n","properties":{"customer":{"type":"string"},"id":{"description":"The provider-assigned unique ID for this managed resource.\n","type":"string"},"policyRules":{"items":{"$ref":"#/types/wavefront:index/getMetricsPolicyPolicyRule:getMetricsPolicyPolicyRule"},"type":"array"},"updatedEpochMillis":{"type":"integer"},"updaterId":{"type":"string"}},"required":["customer","policyRules","updatedEpochMillis","updaterId","id"],"type":"object"}},"wavefront:index/getRole:getRole":{"description":"Use this data source to get information about a Wavefront role by its ID.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getRole({\n    id: \"role-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_role(id=\"role-id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetRole.Invoke(new()\n    {\n        Id = \"role-id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.LookupRole(ctx, \u0026wavefront.LookupRoleArgs{\n\t\t\tId: \"role-id\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getRole(GetRoleArgs.builder()\n            .id(\"role-id\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getRole\n      Arguments:\n        id: role-id\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getRole.\n","properties":{"id":{"type":"string","description":"The ID associated with the role data to be fetched.\n"}},"type":"object","required":["id"]},"outputs":{"description":"A collection of values returned by getRole.\n","properties":{"description":{"description":"Human-readable description of the role.\n","type":"string"},"id":{"description":"The ID of the role in Wavefront.\n","type":"string"},"name":{"description":"The name of the role in Wavefront.\n","type":"string"},"permissions":{"description":"The list of permissions associated with role.\n","items":{"type":"string"},"type":"array"}},"required":["description","id","name","permissions"],"type":"object"}},"wavefront:index/getRoles:getRoles":{"description":"Use this data source to get all Roles in Wavefront.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst roles = wavefront.getRoles({\n    limit: 10,\n    offset: 0,\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nroles = wavefront.get_roles(limit=10,\n    offset=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var roles = Wavefront.GetRoles.Invoke(new()\n    {\n        Limit = 10,\n        Offset = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.GetRoles(ctx, \u0026wavefront.GetRolesArgs{\n\t\t\tLimit:  pulumi.IntRef(10),\n\t\t\tOffset: pulumi.IntRef(0),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetRolesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var roles = WavefrontFunctions.getRoles(GetRolesArgs.builder()\n            .limit(10)\n            .offset(0)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  roles:\n    fn::invoke:\n      Function: wavefront:getRoles\n      Arguments:\n        limit: 10\n        offset: 0\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getRoles.\n","properties":{"limit":{"type":"integer","description":"Limit is the maximum number of results to be returned. Defaults to 100.\n"},"offset":{"type":"integer","description":"Offset is the offset from the first result to be returned. Defaults to 0.\n"}},"type":"object"},"outputs":{"description":"A collection of values returned by getRoles.\n","properties":{"id":{"description":"The provider-assigned unique ID for this managed resource.\n","type":"string"},"limit":{"type":"integer"},"offset":{"type":"integer"},"roles":{"description":"List of Wavefront Roles.\n","items":{"$ref":"#/types/wavefront:index/getRolesRole:getRolesRole"},"type":"array"}},"required":["roles","id"],"type":"object"}},"wavefront:index/getUser:getUser":{"description":"Use this data source to get information for a given user by email from Wavefront.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getUser({\n    email: \"example.user@example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_user(email=\"example.user@example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetUser.Invoke(new()\n    {\n        Email = \"example.user@example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.LookupUser(ctx, \u0026wavefront.LookupUserArgs{\n\t\t\tEmail: \"example.user@example.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getUser(GetUserArgs.builder()\n            .email(\"example.user@example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getUser\n      Arguments:\n        email: example.user@example.com\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getUser.\n","properties":{"email":{"type":"string","description":"The email associated with the user data to be fetched.\n"}},"type":"object","required":["email"]},"outputs":{"description":"A collection of values returned by getUser.\n","properties":{"customer":{"description":"The customer the user is associated with.\n","type":"string"},"email":{"type":"string"},"id":{"description":"The provider-assigned unique ID for this managed resource.\n","type":"string"},"lastSuccessfulLogin":{"description":"When the user last logged in to Wavefront.\n","type":"integer"},"permissions":{"description":"List of permissions granted to a user.\n","items":{"type":"string"},"type":"array"},"userGroupIds":{"description":"List of User Group Ids the user is a member of.\n","items":{"type":"string"},"type":"array"}},"required":["customer","email","lastSuccessfulLogin","permissions","userGroupIds","id"],"type":"object"}},"wavefront:index/getUserGroup:getUserGroup":{"description":"Use this data source to get information about a Wavefront user group by its ID.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst example = wavefront.getUserGroup({\n    id: \"user-group-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nexample = wavefront.get_user_group(id=\"user-group-id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Wavefront.GetUserGroup.Invoke(new()\n    {\n        Id = \"user-group-id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.LookupUserGroup(ctx, \u0026wavefront.LookupUserGroupArgs{\n\t\t\tId: \"user-group-id\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetUserGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = WavefrontFunctions.getUserGroup(GetUserGroupArgs.builder()\n            .id(\"user-group-id\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: wavefront:getUserGroup\n      Arguments:\n        id: user-group-id\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getUserGroup.\n","properties":{"id":{"type":"string","description":"The ID associated with the user group data to be fetched.\n"}},"type":"object","required":["id"]},"outputs":{"description":"A collection of values returned by getUserGroup.\n","properties":{"description":{"description":"Human-readable description of the group.\n","type":"string"},"id":{"description":"The ID of the group in Wavefront.\n","type":"string"},"name":{"description":"The name of the group in Wavefront.\n","type":"string"},"roles":{"description":"The list of roles associated with the group.\n","items":{"type":"string"},"type":"array"},"users":{"description":"The list of users assigned to the group.\n","items":{"type":"string"},"type":"array"}},"required":["description","id","name","roles","users"],"type":"object"}},"wavefront:index/getUserGroups:getUserGroups":{"description":"Use this data source to get all User Groups in Wavefront.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst groups = wavefront.getUserGroups({\n    limit: 10,\n    offset: 0,\n});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\ngroups = wavefront.get_user_groups(limit=10,\n    offset=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var groups = Wavefront.GetUserGroups.Invoke(new()\n    {\n        Limit = 10,\n        Offset = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.GetUserGroups(ctx, \u0026wavefront.GetUserGroupsArgs{\n\t\t\tLimit:  pulumi.IntRef(10),\n\t\t\tOffset: pulumi.IntRef(0),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport com.pulumi.wavefront.inputs.GetUserGroupsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var groups = WavefrontFunctions.getUserGroups(GetUserGroupsArgs.builder()\n            .limit(10)\n            .offset(0)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  groups:\n    fn::invoke:\n      Function: wavefront:getUserGroups\n      Arguments:\n        limit: 10\n        offset: 0\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getUserGroups.\n","properties":{"limit":{"type":"integer","description":"Limit is the maximum number of results to be returned. Defaults to 100.\n"},"offset":{"type":"integer","description":"Offset is the offset from the first result to be returned. Defaults to 0.\n"}},"type":"object"},"outputs":{"description":"A collection of values returned by getUserGroups.\n","properties":{"id":{"description":"The provider-assigned unique ID for this managed resource.\n","type":"string"},"limit":{"type":"integer"},"offset":{"type":"integer"},"userGroups":{"description":"List of user groups.\n","items":{"$ref":"#/types/wavefront:index/getUserGroupsUserGroup:getUserGroupsUserGroup"},"type":"array"}},"required":["userGroups","id"],"type":"object"}},"wavefront:index/getUsers:getUsers":{"description":"Use this data source to get all users in Wavefront.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as wavefront from \"@pulumi/wavefront\";\n\nconst users = wavefront.getUsers({});\n```\n```python\nimport pulumi\nimport pulumi_wavefront as wavefront\n\nusers = wavefront.get_users()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Wavefront = Pulumi.Wavefront;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var users = Wavefront.GetUsers.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-wavefront/sdk/v3/go/wavefront\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := wavefront.GetUsers(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.wavefront.WavefrontFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var users = WavefrontFunctions.getUsers();\n\n    }\n}\n```\n```yaml\nvariables:\n  users:\n    fn::invoke:\n      Function: wavefront:getUsers\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}","outputs":{"description":"A collection of values returned by getUsers.\n","properties":{"id":{"description":"The provider-assigned unique ID for this managed resource.\n","type":"string"},"users":{"description":"List of all users in Wavefront.\n","items":{"$ref":"#/types/wavefront:index/getUsersUser:getUsersUser"},"type":"array"}},"required":["users","id"],"type":"object"}}}}